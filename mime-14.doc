MIME-Version: 1.0
Content-Type: multipart/related; boundary="----=_NextPart_ZROIIZO.ZCZYUACXV.ZARTUI"

------=_NextPart_ZROIIZO.ZCZYUACXV.ZARTUI
Content-Location: file:///C:/boop.htm
Content-Transfer-Encoding: base64
Content-Type: text/html; charset="utf-8"

<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'>
<head><title>Microsoft Office HTML Example</title>
<!--[if gte mso 9]>
<xml><w:WordDocument><w:View>Print</w:View><w:Zoom>100</w:Zoom><w:DoNotOptimizeForBrowser/></w:WordDocument></xml>
<![endif]-->
<link rel="File-List" href="boop_files/filelist.xml">
<style><!-- 
@page
{
    size:21cm 29.7cmt;  /* A4 */
    margin:1cm 1cm 1cm 1cm; /* Margins: 2.5 cm on each side */
    mso-page-orientation: portrait;  
}
@page Section1 { }
div.Section1 { page:Section1; }
p.MsoHeader, p.MsoFooter { border: 1px solid black; }
--></style>

<style type="text/css" id="css-ui">
/*

* {
  margin: 0;
  padding: 0;
  outline: 0;
  line-height: 1.5em;
}

body {
  font-size: 14px;
  line-height: 1.3;
  font-family: 'futura-pt', Verdana, Arial, Helvetica, Sans-Serif;
  color: #333;
  background: #363636;
}

.scale1-5 {
  font-size: 1.5em;
}

.scale1-4 {
  font-size: 1.4em;
}

.scale1-3 {
  font-size: 1.3em;
}

.scale1-1 {
  font-size: 1.1em;
}

.scale0-9 {
  font-size: 0.9em;
}

.scale0-8 {
  font-size: 0.8em;
}

a {
  color: #323232;
  cursor: pointer;
}

table {
  border-spacing: 0px;
  border-collapse: collapse;
}

td {
  text-align: left;
}

section, aside, hgroup {
  display: block;
}

input.button,
a.button,
form.formtastic input.button {
  color: #fff;
  font-weight: bold;
  background: #036290;
  text-decoration: none;
  display: inline-block;
  padding: 5px 10px;
  border: none;
}

.clear {
  clear: both;
}

.left, .alignleft {
  float: left;
  display: inline;
}

.right, .alignright {
  float: right;
  display: inline;
}

.center {
  text-align: center;
}

#shell {
  padding: 0px;
  margin: 0 auto;
  display: block;
  position: relative;
  background: #e3e3e3;
}

.wrapper {
  max-width: 1094px;
  margin: 0px auto;
}
*/

</style>

<style type="text/css" id="css-export">
#playlists_export, #collages_export, #text_blocks_export,
#cases_export, #collages_export_unique {
  background: #FFF;
  font-family: sans-serif;
  font-size: 11px;
  color: #000;
  border-bottom: 2px solid #FFF;
}
#playlists_export .vh1, #playlists_export .vh2, #collages_export .vh1, #collages_export .vh2, #text_blocks_export .vh1, #text_blocks_export .vh2,
#cases_export .vh1,
#cases_export .vh2, #collages_export_unique .vh1, #collages_export_unique .vh2 {
  font-weight: bold;
}
#playlists_export h1.off, #collages_export h1.off, #text_blocks_export h1.off,
#cases_export h1.off, #collages_export_unique h1.off {
  color: red;
}
#playlists_export .annotator-adder, #collages_export .annotator-adder, #text_blocks_export .annotator-adder,
#cases_export .annotator-adder, #collages_export_unique .annotator-adder {
  visibility: hidden !important;
  display: none !important;
}
#playlists_export .wrapper, #collages_export .wrapper, #text_blocks_export .wrapper,
#cases_export .wrapper, #collages_export_unique .wrapper {
  /* For minimum screen re-draw on page load, width should be set
     to export.js:page_width_inches - 2*margin-left
  */
  width: 6.5in;
  margin-left: 1.0in;
  Xmargin-top: 155px;
  /* give more room for new print options */
}
#playlists_export *, #collages_export *, #text_blocks_export *,
#cases_export *, #collages_export_unique * {
  line-height: 1.4em;
  font-family: 'ff-dagny-web-pro';
  font-size: 14px;
}
#playlists_export .jsb-item, #collages_export .jsb-item, #text_blocks_export .jsb-item,
#cases_export .jsb-item, #collages_export_unique .jsb-item {
  line-height: 2em;
}
#playlists_export #shell, #collages_export #shell, #text_blocks_export #shell,
#cases_export #shell, #collages_export_unique #shell {
  background: #fff;
}
#playlists_export a, #collages_export a, #text_blocks_export a,
#cases_export a, #collages_export_unique a {
  color: #036290;
  text-decoration: none;
}
#playlists_export .singleitem, #collages_export .singleitem, #text_blocks_export .singleitem,
#cases_export .singleitem, #collages_export_unique .singleitem {
  padding-top: 15px;
  float: none;
  width: 100%;
}
#playlists_export .singleitem div.article, #collages_export .singleitem div.article, #text_blocks_export .singleitem div.article,
#cases_export .singleitem div.article, #collages_export_unique .singleitem div.article {
  padding-left: 0px;
  margin-top: 20px;
}
#playlists_export .singleitem .details, #collages_export .singleitem .details, #text_blocks_export .singleitem .details,
#cases_export .singleitem .details, #collages_export_unique .singleitem .details {
  background: none;
  padding: 0px;
  margin: 0px;
}
#playlists_export .singleitem .scale0-8, #collages_export .singleitem .scale0-8, #text_blocks_export .singleitem .scale0-8,
#cases_export .singleitem .scale0-8, #collages_export_unique .singleitem .scale0-8 {
  font-size: 11.2px;
}
#playlists_export .singleitem .scale1-5, #collages_export .singleitem .scale1-5, #text_blocks_export .singleitem .scale1-5,
#cases_export .singleitem .scale1-5, #collages_export_unique .singleitem .scale1-5 {
  font-size: 21px;
}
#playlists_export .singleitem .scale1-3, #collages_export .singleitem .scale1-3, #text_blocks_export .singleitem .scale1-3,
#cases_export .singleitem .scale1-3, #collages_export_unique .singleitem .scale1-3 {
  font-size: 18.2px;
}
#playlists_export .singleitem .new-h1, #collages_export .singleitem .new-h1, #text_blocks_export .singleitem .new-h1,
#cases_export .singleitem .new-h1, #collages_export_unique .singleitem .new-h1 {
  font-weight: bold;
  font-size: 21px;
  /* this is currently being overridden by the font size JS picker */
  x-padding: 0 0 6px 0;
}
#playlists_export .singleitem .new-h2, #collages_export .singleitem .new-h2, #text_blocks_export .singleitem .new-h2,
#cases_export .singleitem .new-h2, #collages_export_unique .singleitem .new-h2 {
  font-weight: bold;
  padding: 0 0 6px 0;
}
#playlists_export .collage-content > h1, #collages_export .collage-content > h1, #text_blocks_export .collage-content > h1,
#cases_export .collage-content > h1, #collages_export_unique .collage-content > h1 {
  margin-top: 0px;
  padding: 0px 0px 4px 0px;
}
#playlists_export .no_visible_children, #collages_export .no_visible_children, #text_blocks_export .no_visible_children,
#cases_export .no_visible_children, #collages_export_unique .no_visible_children {
  display: none;
}
#playlists_export .collage-content .info, #collages_export .collage-content .info, #text_blocks_export .collage-content .info,
#cases_export .collage-content .info, #collages_export_unique .collage-content .info {
  padding: 0px;
  font-weight: bold;
}
#playlists_export #playlist .details, #collages_export #playlist .details, #text_blocks_export #playlist .details,
#cases_export #playlist .details, #collages_export_unique #playlist .details {
  padding-bottom: 10px;
}
#playlists_export #playlist .item_description,
#playlists_export .collage-content .item_description, #collages_export #playlist .item_description,
#collages_export .collage-content .item_description, #text_blocks_export #playlist .item_description,
#text_blocks_export .collage-content .item_description,
#cases_export #playlist .item_description,
#cases_export .collage-content .item_description, #collages_export_unique #playlist .item_description,
#collages_export_unique .collage-content .item_description {
  font-style: italic;
  color: #000;
  background: none;
  padding: 0px;
}
#playlists_export .collage-content, #collages_export .collage-content, #text_blocks_export .collage-content,
#cases_export .collage-content, #collages_export_unique .collage-content {
  padding-left: 50px;
  clear: both;
}
#playlists_export .collage-content p, #collages_export .collage-content p, #text_blocks_export .collage-content p,
#cases_export .collage-content p, #collages_export_unique .collage-content p {
  margin-bottom: 20px;
}
#playlists_export .collage-content .annotation-content, #collages_export .collage-content .annotation-content, #text_blocks_export .collage-content .annotation-content,
#cases_export .collage-content .annotation-content, #collages_export_unique .collage-content .annotation-content {
  color: #6B933D;
  font-style: italic;
  border: 1px solid #d4d4d4;
  padding: 2px 5px 2px 18px;
  margin: 3px;
  background: url(/assets/asterisk.jpg) 2px 1px no-repeat;
  text-indent: 10px;
  width: 500px;
  display: none;
}
#playlists_export .collage-content .annotation-ellipsis, #collages_export .collage-content .annotation-ellipsis, #text_blocks_export .collage-content .annotation-ellipsis,
#cases_export .collage-content .annotation-ellipsis, #collages_export_unique .collage-content .annotation-ellipsis {
  padding-left: 5px;
}
#playlists_export .collage-content p,
#playlists_export .collage-content center,
#playlists_export .collage-content h2, #collages_export .collage-content p,
#collages_export .collage-content center,
#collages_export .collage-content h2, #text_blocks_export .collage-content p,
#text_blocks_export .collage-content center,
#text_blocks_export .collage-content h2,
#cases_export .collage-content p,
#cases_export .collage-content center,
#cases_export .collage-content h2, #collages_export_unique .collage-content p,
#collages_export_unique .collage-content center,
#collages_export_unique .collage-content h2 {
  position: relative;
}
#playlists_export .collage-content .paragraph-numbering, #collages_export .collage-content .paragraph-numbering, #text_blocks_export .collage-content .paragraph-numbering,
#cases_export .collage-content .paragraph-numbering, #collages_export_unique .collage-content .paragraph-numbering {
  position: absolute;
  left: -50px;
  text-decoration: none;
  font-weight: normal;
}
#playlists_export .collage-content blockquote, #collages_export .collage-content blockquote, #text_blocks_export .collage-content blockquote,
#cases_export .collage-content blockquote, #collages_export_unique .collage-content blockquote {
  padding-left: 30px;
  margin-left: 30px;
}
#playlists_export .collage-content blockquote .paragraph-numbering, #collages_export .collage-content blockquote .paragraph-numbering, #text_blocks_export .collage-content blockquote .paragraph-numbering,
#cases_export .collage-content blockquote .paragraph-numbering, #collages_export_unique .collage-content blockquote .paragraph-numbering {
  left: -50px;
}
#playlists_export .playlists .collage-content div.article, #collages_export .playlists .collage-content div.article, #text_blocks_export .playlists .collage-content div.article,
#cases_export .playlists .collage-content div.article, #collages_export_unique .playlists .collage-content div.article {
  position: relative;
}
#playlists_export #playlist .playlists .playlists, #collages_export #playlist .playlists .playlists, #text_blocks_export #playlist .playlists .playlists,
#cases_export #playlist .playlists .playlists, #collages_export_unique #playlist .playlists .playlists {
  display: block;
}
#playlists_export #playlist .listitem, #collages_export #playlist .listitem, #text_blocks_export #playlist .listitem,
#cases_export #playlist .listitem, #collages_export_unique #playlist .listitem {
  padding-bottom: 10px;
}
#playlists_export #playlist .listitem .notes, #collages_export #playlist .listitem .notes, #text_blocks_export #playlist .listitem .notes,
#cases_export #playlist .listitem .notes, #collages_export_unique #playlist .listitem .notes {
  padding-bottom: 10px;
}
#playlists_export .playlist h3, #collages_export .playlist h3, #text_blocks_export .playlist h3,
#cases_export .playlist h3, #collages_export_unique .playlist h3 {
  margin-bottom: 10px;
}
#playlists_export .playlist p, #collages_export .playlist p, #text_blocks_export .playlist p,
#cases_export .playlist p, #collages_export_unique .playlist p {
  margin-bottom: 10px;
}
#playlists_export #text_block, #collages_export #text_block, #text_blocks_export #text_block,
#cases_export #text_block, #collages_export_unique #text_block {
  clear: both;
}
#playlists_export #text_block .details, #collages_export #text_block .details, #text_blocks_export #text_block .details,
#cases_export #text_block .details, #collages_export_unique #text_block .details {
  font-style: italic;
  margin-bottom: 20px;
}
#playlists_export #text_block div.article p, #collages_export #text_block div.article p, #text_blocks_export #text_block div.article p,
#cases_export #text_block div.article p, #collages_export_unique #text_block div.article p {
  margin-bottom: 20px;
}
@media print {
  #playlists_export, #collages_export, #text_blocks_export,
  #cases_export, #collages_export_unique {
    /* Untested: page break before every top level playlist (maybe other objects too?)
    except for the first one
    */
    /*
    .playlist .level0:first-of-type {      page-break-before: never    }
    */
  }
  #playlists_export #toc_container, #collages_export #toc_container, #text_blocks_export #toc_container,
  #cases_export #toc_container, #collages_export_unique #toc_container {
    page-break-after: always;
  }
}
#playlists_export #export-form, #collages_export #export-form, #text_blocks_export #export-form,
#cases_export #export-form, #collages_export_unique #export-form {
  display: flex;
}
#playlists_export #toc_container, #collages_export #toc_container, #text_blocks_export #toc_container,
#cases_export #toc_container, #collages_export_unique #toc_container {
  padding-top: 20px;
  padding-bottom: 20px;
  font-weight: bold;
  font-size: 16px;
  display: none;
}
#playlists_export #toc_container #toc .toc_level1, #collages_export #toc_container #toc .toc_level1, #text_blocks_export #toc_container #toc .toc_level1,
#cases_export #toc_container #toc .toc_level1, #collages_export_unique #toc_container #toc .toc_level1 {
  padding-left: 0em;
}
#playlists_export #toc_container #toc .toc_level2, #collages_export #toc_container #toc .toc_level2, #text_blocks_export #toc_container #toc .toc_level2,
#cases_export #toc_container #toc .toc_level2, #collages_export_unique #toc_container #toc .toc_level2 {
  padding-left: 1.5em;
}
#playlists_export #toc_container #toc .toc_level3, #collages_export #toc_container #toc .toc_level3, #text_blocks_export #toc_container #toc .toc_level3,
#cases_export #toc_container #toc .toc_level3, #collages_export_unique #toc_container #toc .toc_level3 {
  padding-left: 3.0em;
}
#playlists_export #toc_container #toc .toc_level4, #collages_export #toc_container #toc .toc_level4, #text_blocks_export #toc_container #toc .toc_level4,
#cases_export #toc_container #toc .toc_level4, #collages_export_unique #toc_container #toc .toc_level4 {
  padding-left: 4.5em;
}
#playlists_export #toc_container #toc .toc_level5, #collages_export #toc_container #toc .toc_level5, #text_blocks_export #toc_container #toc .toc_level5,
#cases_export #toc_container #toc .toc_level5, #collages_export_unique #toc_container #toc .toc_level5 {
  padding-left: 5.0em;
}
#playlists_export #toc_container #toc .toc_level6, #collages_export #toc_container #toc .toc_level6, #text_blocks_export #toc_container #toc .toc_level6,
#cases_export #toc_container #toc .toc_level6, #collages_export_unique #toc_container #toc .toc_level6 {
  padding-left: 6.5em;
}
#playlists_export #print-options, #collages_export #print-options, #text_blocks_export #print-options,
#cases_export #print-options, #collages_export_unique #print-options {
  #height: 140px;
  opacity: 0.0;
  background: transparent url(/assets/quickbar.png) bottom repeat-x;
  padding: 10px 5px 12px 5px;
  position: fixed;
  top: 0px;
  z-index: 1000;
  width: 100%;
  /* TODO: clean up redundant styling below, that is now being defined above */
}
#playlists_export #print-options *, #collages_export #print-options *, #text_blocks_export #print-options *,
#cases_export #print-options *, #collages_export_unique #print-options * {
  font-size: 12px;
}
#playlists_export #print-options #print-options-new, #collages_export #print-options #print-options-new, #text_blocks_export #print-options #print-options-new,
#cases_export #print-options #print-options-new, #collages_export_unique #print-options #print-options-new {
  width: 80%;
  text-align: center;
}
#playlists_export #print-options #print-options-basic, #collages_export #print-options #print-options-basic, #text_blocks_export #print-options #print-options-basic,
#cases_export #print-options #print-options-basic, #collages_export_unique #print-options #print-options-basic {
  display: inline-block;
  text-align: center;
}
#playlists_export #print-options #print-options-basic div, #collages_export #print-options #print-options-basic div, #text_blocks_export #print-options #print-options-basic div,
#cases_export #print-options #print-options-basic div, #collages_export_unique #print-options #print-options-basic div {
  margin-right: 20px;
}
#playlists_export #print-options #themes-div, #collages_export #print-options #themes-div, #text_blocks_export #print-options #themes-div,
#cases_export #print-options #themes-div, #collages_export_unique #print-options #themes-div {
  border: 1px #DDDDDD solid;
  margin-right: 20px;
  text-align: center;
}
#playlists_export #print-options #themes-div .theme-button, #collages_export #print-options #themes-div .theme-button, #text_blocks_export #print-options #themes-div .theme-button,
#cases_export #print-options #themes-div .theme-button, #collages_export_unique #print-options #themes-div .theme-button {
  margin: 0 5px 5px;
}
#playlists_export #print-options #annotations-div, #collages_export #print-options #annotations-div, #text_blocks_export #print-options #annotations-div,
#cases_export #print-options #annotations-div, #collages_export_unique #print-options #annotations-div {
  border: 1px #DDDDDD solid;
  text-align: center;
}
#playlists_export #print-options #annotations-div div, #collages_export #print-options #annotations-div div, #text_blocks_export #print-options #annotations-div div,
#cases_export #print-options #annotations-div div, #collages_export_unique #print-options #annotations-div div {
  margin: 0 5px 5px;
}
#playlists_export #print-options #annotation-options, #collages_export #print-options #annotation-options, #text_blocks_export #print-options #annotation-options,
#cases_export #print-options #annotation-options, #collages_export_unique #print-options #annotation-options {
  display: inline-block;
}
#playlists_export #print-options #highlight-options, #collages_export #print-options #highlight-options, #text_blocks_export #print-options #highlight-options,
#cases_export #print-options #highlight-options, #collages_export_unique #print-options #highlight-options {
  display: inline-block;
  text-align: center;
}
#playlists_export #print-options #hidden-text-options, #collages_export #print-options #hidden-text-options, #text_blocks_export #print-options #hidden-text-options,
#cases_export #print-options #hidden-text-options, #collages_export_unique #print-options #hidden-text-options {
  display: inline-block;
  text-align: center;
}
#playlists_export #print-options #export-format, #collages_export #print-options #export-format, #text_blocks_export #print-options #export-format,
#cases_export #print-options #export-format, #collages_export_unique #print-options #export-format {
  borderXXX: #DDDDDD 1px solid;
  text-align: center;
}
#playlists_export #print-options #export-button-div, #collages_export #print-options #export-button-div, #text_blocks_export #print-options #export-button-div,
#cases_export #print-options #export-button-div, #collages_export_unique #print-options #export-button-div {
  border: 1px white solid;
}
#playlists_export #print-options #export-form-submit, #collages_export #print-options #export-form-submit, #text_blocks_export #print-options #export-form-submit,
#cases_export #print-options #export-form-submit, #collages_export_unique #print-options #export-form-submit {
  color: #FFFFFF;
  margin-top: 14px;
  margin-bottom: 4px;
}
#playlists_export #print-options #print-options-orig, #collages_export #print-options #print-options-orig, #text_blocks_export #print-options #print-options-orig,
#cases_export #print-options #print-options-orig, #collages_export_unique #print-options #print-options-orig {
  width: 80%;
  text-align: center;
}
#playlists_export #print-options #print-options-advanced, #collages_export #print-options #print-options-advanced, #text_blocks_export #print-options #print-options-advanced,
#cases_export #print-options #print-options-advanced, #collages_export_unique #print-options #print-options-advanced {
  display: inline-block;
  text-align: center;
  border: #DDDDDD 1px solid;
}
#playlists_export #print-options #print-options-advanced div, #collages_export #print-options #print-options-advanced div, #text_blocks_export #print-options #print-options-advanced div,
#cases_export #print-options #print-options-advanced div, #collages_export_unique #print-options #print-options-advanced div {
  display: inline-block;
  text-align: center;
  border: 1px white solid;
  margin: 0 5px 5px;
}
#playlists_export #print-options #toc-levels-options, #collages_export #print-options #toc-levels-options, #text_blocks_export #print-options #toc-levels-options,
#cases_export #print-options #toc-levels-options, #collages_export_unique #print-options #toc-levels-options {
  display: inline-block;
  text-align: center;
}
#playlists_export #print-options #titles-options, #collages_export #print-options #titles-options, #text_blocks_export #print-options #titles-options,
#cases_export #print-options #titles-options, #collages_export_unique #print-options #titles-options {
  display: inline-block;
  text-align: center;
}
#playlists_export #print-options #dates-options, #collages_export #print-options #dates-options, #text_blocks_export #print-options #dates-options,
#cases_export #print-options #dates-options, #collages_export_unique #print-options #dates-options {
  display: inline-block;
  text-align: center;
}
#playlists_export #print-options #paragraph-numbers-options, #collages_export #print-options #paragraph-numbers-options, #text_blocks_export #print-options #paragraph-numbers-options,
#cases_export #print-options #paragraph-numbers-options, #collages_export_unique #print-options #paragraph-numbers-options {
  display: inline-block;
  text-align: center;
}
#playlists_export #print-options #fontface-div, #collages_export #print-options #fontface-div, #text_blocks_export #print-options #fontface-div,
#cases_export #print-options #fontface-div, #collages_export_unique #print-options #fontface-div {
  display: inline-block;
  text-align: center;
}
#playlists_export #print-options #fontsize-div, #collages_export #print-options #fontsize-div, #text_blocks_export #print-options #fontsize-div,
#cases_export #print-options #fontsize-div, #collages_export_unique #print-options #fontsize-div {
  display: inline-block;
  text-align: center;
}
#playlists_export #print-options #margins-div, #collages_export #print-options #margins-div, #text_blocks_export #print-options #margins-div,
#cases_export #print-options #margins-div, #collages_export_unique #print-options #margins-div {
  display: inline-block;
  text-align: center;
}
#playlists_export #print-options select, #collages_export #print-options select, #text_blocks_export #print-options select,
#cases_export #print-options select, #collages_export_unique #print-options select {
  height: 24px;
  min-width: 80px;
}
#playlists_export #print-options h2, #collages_export #print-options h2, #text_blocks_export #print-options h2,
#cases_export #print-options h2, #collages_export_unique #print-options h2 {
  font-size: 14px;
  display: inline-block;
}
#playlists_export #print-options .jsb-currentItem, #collages_export #print-options .jsb-currentItem, #text_blocks_export #print-options .jsb-currentItem,
#cases_export #print-options .jsb-currentItem, #collages_export_unique #print-options .jsb-currentItem {
  line-height: 1.8em;
}
#playlists_export #print-options > div, #collages_export #print-options > div, #text_blocks_export #print-options > div,
#cases_export #print-options > div, #collages_export_unique #print-options > div {
  display: inline-block;
}
#playlists_export #print-options .jsb, #collages_export #print-options .jsb, #text_blocks_export #print-options .jsb,
#cases_export #print-options .jsb, #collages_export_unique #print-options .jsb {
  width: 50px !important;
  display: inline-block;
  float: none;
  border: 1px solid #666;
  border-radius: 4px;
  -moz-border-radius: 4px;
  -webkit-border-radius: 4px;
  -o-border-radius: 4px;
  margin: 0px 10px 5px 0px;
}
#playlists_export #print-options .jsb-list, #collages_export #print-options .jsb-list, #text_blocks_export #print-options .jsb-list,
#cases_export #print-options .jsb-list, #collages_export_unique #print-options .jsb-list {
  width: 60px !important;
}
#playlists_export #print-options strong, #collages_export #print-options strong, #text_blocks_export #print-options strong,
#cases_export #print-options strong, #collages_export_unique #print-options strong {
  display: inline-block;
  margin: 0px 5px 0px 20px;
  font-weight: normal;
}
#playlists_export #print-options #fontface_div .jsb,
#playlists_export #print-options #highlight-options .jsb, #collages_export #print-options #fontface_div .jsb,
#collages_export #print-options #highlight-options .jsb, #text_blocks_export #print-options #fontface_div .jsb,
#text_blocks_export #print-options #highlight-options .jsb,
#cases_export #print-options #fontface_div .jsb,
#cases_export #print-options #highlight-options .jsb, #collages_export_unique #print-options #fontface_div .jsb,
#collages_export_unique #print-options #highlight-options .jsb {
  width: 110px !important;
}
#playlists_export #print-options #fontface-div .jsb-list,
#playlists_export #print-options #highlight-options .jsb-list, #collages_export #print-options #fontface-div .jsb-list,
#collages_export #print-options #highlight-options .jsb-list, #text_blocks_export #print-options #fontface-div .jsb-list,
#text_blocks_export #print-options #highlight-options .jsb-list,
#cases_export #print-options #fontface-div .jsb-list,
#cases_export #print-options #highlight-options .jsb-list, #collages_export_unique #print-options #fontface-div .jsb-list,
#collages_export_unique #print-options #highlight-options .jsb-list {
  width: 120px !important;
}
#playlists_export #print-options #fontsize-div .jsb, #collages_export #print-options #fontsize-div .jsb, #text_blocks_export #print-options #fontsize-div .jsb,
#cases_export #print-options #fontsize-div .jsb, #collages_export_unique #print-options #fontsize-div .jsb {
  width: 60px !important;
}
#playlists_export #print-options #fontsize-div .jsb-list, #collages_export #print-options #fontsize-div .jsb-list, #text_blocks_export #print-options #fontsize-div .jsb-list,
#cases_export #print-options #fontsize-div .jsb-list, #collages_export_unique #print-options #fontsize-div .jsb-list {
  width: 70px !important;
}
#playlists_export #print-options #export-format-options .jsb, #collages_export #print-options #export-format-options .jsb, #text_blocks_export #print-options #export-format-options .jsb,
#cases_export #print-options #export-format-options .jsb, #collages_export_unique #print-options #export-format-options .jsb {
  width: 40px !important;
}
#playlists_export #print-options #export-format-options .jsb-list, #collages_export #print-options #export-format-options .jsb-list, #text_blocks_export #print-options #export-format-options .jsb-list,
#cases_export #print-options #export-format-options .jsb-list, #collages_export_unique #print-options #export-format-options .jsb-list {
  width: 50px !important;
}
#playlists_export #print-options #toc-levels-options .jsb, #collages_export #print-options #toc-levels-options .jsb, #text_blocks_export #print-options #toc-levels-options .jsb,
#cases_export #print-options #toc-levels-options .jsb, #collages_export_unique #print-options #toc-levels-options .jsb {
  width: 50px !important;
}
#playlists_export #print-options #toc-levels-options .jsb-list, #collages_export #print-options #toc-levels-options .jsb-list, #text_blocks_export #print-options #toc-levels-options .jsb-list,
#cases_export #print-options #toc-levels-options .jsb-list, #collages_export_unique #print-options #toc-levels-options .jsb-list {
  width: 60px !important;
}
#playlists_export .print_border, #collages_export .print_border, #text_blocks_export .print_border,
#cases_export .print_border, #collages_export_unique .print_border {
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0px;
  left: 0px;
}
#playlists_export .print_border span, #collages_export .print_border span, #text_blocks_export .print_border span,
#cases_export .print_border span, #collages_export_unique .print_border span {
  width: 100%;
  display: block;
  position: absolute;
  bottom: 0px;
  opacity: 0.0;
}
#playlists_export .annotator-outer, #collages_export .annotator-outer, #text_blocks_export .annotator-outer,
#cases_export .annotator-outer, #collages_export_unique .annotator-outer {
  display: none;
}
#playlists_export .layered-ellipsis, #collages_export .layered-ellipsis, #text_blocks_export .layered-ellipsis,
#cases_export .layered-ellipsis, #collages_export_unique .layered-ellipsis {
  display: none;
  margin: 0px 2px;
  cursor: default;
}
#playlists_export div.article .annotator-wrapper, #collages_export div.article .annotator-wrapper, #text_blocks_export div.article .annotator-wrapper,
#cases_export div.article .annotator-wrapper, #collages_export_unique div.article .annotator-wrapper {
  position: relative;
}
#playlists_export h3.missing_item .number, #collages_export h3.missing_item .number, #text_blocks_export h3.missing_item .number,
#cases_export h3.missing_item .number, #collages_export_unique h3.missing_item .number {
  margin-right: 20px;
}
#playlists_export h3.missing_item .missing_item, #collages_export h3.missing_item .missing_item, #text_blocks_export h3.missing_item .missing_item,
#cases_export h3.missing_item .missing_item, #collages_export_unique h3.missing_item .missing_item {
  opacity: 0.6;
  font-weight: normal;
}

#text_blocks_export div.article ul {
  list-style-type: none;
  margin: 0px 0px 10px 15px;
}

.annotator-wrapper .annotation-bar-indicator,
.annotator-wrapper .annotation-indicator {
  display: none;
}

.annotator-hl {
  font-size: inherit !important;
}

li {
  list-style-type: none !important;
}

</style>

<style type="text/css" id="css-print">
.popup, .playlist .icon-type { display: none; }
.page-break { page-break-after: always; }
#print-options { display: none; }
.collage-content {
  padding-left: 35px;
}
.wrapper {
  /* These settings work in conjunction with wkhtmltopdf export parameters. */
  Xmax-width: 7.5in !important;
  Xwidth: 7.5in !important;
  Xmargin-left: 0px !important;
}

</style>

    <script type="text/javascript" async="" src="http://www.google-analytics.com/ga.js"></script><script type="text/javascript" src="/modernizr.custom.77714.js"></script>
    <script type="text/javascript" src="//use.typekit.net/yxz4hqb.js"></script>
    <style type="text/css" id="additional_styles"></style>
    <style type="text/css" id="highlight_styles"></style>
    <style type="text/css">.tk-sorts-mill-goudy{font-family:"sorts-mill-goudy",serif;}.tk-futura-pt{font-family:"futura-pt",sans-serif;}.tk-leitura-news{font-family:"leitura-news",serif;}.tk-adobe-garamond-pro{font-family:"adobe-garamond-pro",sans-serif;}.tkff-dagny-web-pro{font-family:"ff-dagny-web-pro",sans-serif;}.tk-proxima-nova{font-family:"proxima-nova",sans-serif;}</style><script type="text/javascript">try{Typekit.load();}catch(e){ console.log('WARNING: Typekit.load() failed.');}</script>
  <style rel="alternate stylesheet" type="text/css"></style>
  <style id="annotator-dynamic-style">
    .annotator-adder, .annotator-outer, .annotator-notice {
      z-index: 1040;
    }
    .annotator-filter {
      z-index: 1030;
    }
  </style>

</head>
<body id="playlists_export">
<div class="Section1">

    <div class="wrapper" style="margin-left: 0px; margin-right: 0px; width: 8.5in;">
  	  <section id="shell">
        <div id="playlist" class="singleitem" data-itemid="20866">
	<hgroup class="description">
		<div class="scale1-5 vh1">RAC3</div>
	</hgroup>
	<div class="details">
		<div class="scale0-8 vh2">
			May 12, 2015
			by <a href="#" class="scale0-8"></a><a href="/users/648">stephskardal2</a>
		</div>
		<div id="description" class="item_description">
			New Test Export Doc, Spring 2015
		</div>
	</div>
	<div id="toc_container"></div>
	<section class="playlists">
	<ul style="list-style-type: '' !important;">
		  <li class="playlist listitem level0 listitem68549" id="playlist_item_68549" data-itemid="68549">
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h1 class="scale1-5 new-h1 scale1-4">
    <span class="number"><a name="playlist_item_68549">1</a></span>
    <span class="hcontent">Perfect 10 v. Amazon.com ANNO</span>
  </h1>
  <div class="item_description scale0-8">
<p>&nbsp;<br></p>
</div>
  <div class="clear"></div>
    <div class="collage-content" id="collage34365" data-id="34365" style="padding-left: 0px;">
<div class="article"><div class="annotator-wrapper">
<center class="original_content">508 F.3d 1146</center>
<center class="original_content"><div class="new-h2 scale1-3 original_content">PERFECT 10, INC., a California corporation, Plaintiff-Appellant,<br class="original_content">v.<br class="original_content">AMAZON.COM, INC., a corporation; A9.Com Inc.,</div></center>
<center class="original_content">No. 06-55405.</center>
<center class="original_content"><a href="#" class="layered-control-start layered-control-start-1086050 " data-layered="1086050"></a><a href="#" class="scale1-3 layered-ellipsis layered-ellipsis-1086050  layered-ellipsis-hidden" data-layered="1086050" style="display: none;">[...]</a><span class="annotator-hl annotation-1086050 annotation-hidden" data-annotation-id="1086050" style="">No. 06-55406.</span></center>
<center class="original_content" style=""><span class="annotator-hl annotation-1086050 annotation-hidden" data-annotation-id="1086050" style="">No. 06-55425.</span></center>
<center class="original_content" style=""><span class="annotator-hl annotation-1086050 annotation-hidden" data-annotation-id="1086050" style="">No. 06-55759.</span></center>
<center class="original_content" style=""><span class="annotator-hl annotation-1086050 annotation-hidden" data-annotation-id="1086050" style="">No. 06-55854.</span><a href="#" class="layered-control-end layered-control-end-1086050 " data-layered="1086050"></a></center>
<center class="original_content">No. 06-55877.</center>
<center class="original_content">United States Court of Appeals, Ninth Circuit.</center>
<center class="original_content"><a href="#" class="layered-control-start layered-control-start-1086051 hex-ff3800" data-layered="1086051"></a><a href="#" class="scale1-3 layered-ellipsis layered-ellipsis-1086051 hex-ff3800" data-layered="1086051">[...]</a><span class="annotator-hl annotation-1086051 layer-hex-ff3800 highlight-hex-ff3800" data-annotation-id="1086051">Argued and Submitted November 15, 2006.</span><a href="#" class="layered-control-end layered-control-end-1086051 hex-ff3800" data-layered="1086051"></a></center>
<center class="original_content"><a href="#" class="layered-control-start layered-control-start-1086052 " data-layered="1086052"></a><a href="#" class="scale1-3 layered-ellipsis layered-ellipsis-1086052 " data-layered="1086052">[...]</a><span class="annotator-hl annotation-1086052" data-annotation-id="1086052">Filed May 16, 2007.</span><span class="annotation-content annotation-content-1086052" style="display: inline;"><a href="http://google.com">http://google.com</a></span><a href="#" class="layered-control-end layered-control-end-1086052 " data-layered="1086052"></a></center>
<center class="original_content"><a href="#" class="layered-control-start layered-control-start-1086053 " data-layered="1086053"></a><a href="#" class="scale1-3 layered-ellipsis layered-ellipsis-1086053 " data-layered="1086053">[...]</a><span class="annotator-hl annotation-1086053" data-annotation-id="1086053">Amended December 3, 2007.</span><span class="annotation-content annotation-content-1086053" style="display: inline;">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ornare vehicula massa sed tristique. Etiam tempus felis magna, at fermentum tortor hendrerit a. Praesent pulvinar sapien in turpis condimentum porttitor. Donec et elit libero.</span><a href="#" class="layered-control-end layered-control-end-1086053 " data-layered="1086053"></a></center>
<p class="original_content">[1153] Russell J. Frackman and Jeffrey D. Goldman, Mitchell, Silberberg &amp; Knupp LLP, Los Angeles, CA, Jeffrey N. Mausner, Berman, Mausner &amp; Resser, Los Angeles, CA, Daniel J. Cooper, Perfect 10, Inc., Beverly Hills, CA, for plaintiff-appellant Perfect 10, Inc.</p>
<p class="original_content">Andrew P. Bridges and Jennifer A. Golinveaux, Winston &amp; Strawn LLP, San Francisco, CA, Gene C. Schaerr, Winston &amp; Strawn LLP, Washington, DC, for defendant-appellee and cross-appellant Google Inc.</p>
<p class="original_content">Mark T. Jansen &amp; Anthony J. Malutta, Townsend and Townsend and Crew LLP, San Francisco, CA, for defendants-appellees Amazon.com and A9.com, Inc.</p>
<p class="original_content">Fred von Lohmann, Electronic Frontier Foundation, San Francisco, CA, for amicus curiae Electronic Frontier Foundation, American Library Association, Medical Library [1154] Association, American Association of Law Libraries, Association of Research Libraries, and Special Libraries Association in support of Google Inc.</p>
<p class="original_content">Victor S. Perlman, of counsel, American Society of Media Photographers; Nancy E. Wolff, of counsel, Cowan, DeBaets, Abrahams &amp; Sheppard, LLP; Robert W. Clarida and Jason D. Sanders, Cowan, Liebowitz &amp; Latman, P.C., New York, NY, for amicus curiae American Society of Media Photographers, Inc., Picture Archive Council of America, Inc., British Association of Picture Libraries and Agencies, Inc., Stock Artists Alliance, The Graphic Artists Guild, American Society of Picture Professionals and National Press Photographers, in support of Perfect 10 on issue of Google's liability for the display of full-size images.</p>
<p class="original_content">Eric J. Schwartz and Steven J. Metalitz, Smith &amp; Metalitz LLP, Washington, DC, for amicus curiae Motion Picture Association of America, Inc. in support of Perfect 10.</p>
<p class="original_content">Jonathan Band, Jonathan Band PLLC, Washington, DC, for amicus curiae Net-Coalition, Computer and Communications Industry Association, U.S. Internet Service Provider Association, Consumer Electronics Association, Home Recording Rights Coalition, Information Technology Association of America, and Internet Commerce Coalition in support of Google Inc.</p>
<p class="original_content">Kenneth L. Doroshow and Linda J. Zirkelbach, Recording Industry Association of America, Washington, DC; Jacqueline C. Charlesworth, National Music Publishers' Association, Washington, DC; Robert W. Clarida, Richard S. Mandel and Jonathan Z. King, Cowan, Liebowitz &amp; Latman, P.C., New York, NY, for amicus curiae Recording Industry Association of America and National Music Publishers' Association in support of neither party.</p>
<p class="original_content">Appeal from the United States District Court for the Central District of California; A. Howard Matz, District Judge, Presiding. D.C. Nos. CV-05-04753-AHM, CV-04-09484-AHM.</p>
<p class="original_content">Before: CYNTHIA HOLCOMB HALL, HAWKINS, and SANDRA S. IKUTA, Circuit Judges.</p>
<p class="original_content">IKUTA, Circuit Judge:</p>
<p class="original_content">In this appeal, we consider a copyright owner's efforts to stop an Internet search engine from facilitating access to infringing images. Perfect 10, Inc. sued Google Inc., for infringing Perfect 10's copyrighted photographs of nude models, among other claims. Perfect 10 brought a similar action against Amazon.com and its subsidiary A9.com (collectively, "Amazon.com"). The district court preliminarily enjoined Google from creating and publicly displaying thumbnail versions of Perfect 10's images, <em class="original_content">Perfect 10 v. Google, Inc.,</em> 416 F.Supp.2d 828 (C.D.Cal.2006), but did not enjoin Google from linking to third-party websites that display infringing full-size versions of Perfect 10's images. Nor did the district court preliminarily enjoin Amazon.com from giving users access to information provided by Google. Perfect 10 and Google both appeal the district court's order. We have jurisdiction pursuant to <em class="original_content">28 U.S.C. § 1292(a)(1)</em>.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B1%5D" name="r%5B1%5D" class="footnote original_content">[1]</a></sup></small></p>
<p class="original_content">[1155] The district court handled this complex case in a particularly thoughtful and skillful manner. Nonetheless, the district court erred on certain issues, as we will further explain below. We affirm in part, reverse in part, and remand.</p>
<div class="new-h2 scale1-3 original_content">I</div>
<div class="new-h2 scale1-3 original_content">Background</div>
<p class="original_content">Google's computers, along with millions of others, are connected to networks known collectively as the "Internet." "The Internet is a world-wide network of networks ... all sharing a common communications technology." <em class="original_content">Religious Tech. Ctr. v. Netcom On-Line Commc'n Servs., Inc.,</em> 923 F.Supp. 1231, 1238 n. 1 (N.D.Cal.1995). Computer owners can provide information stored on their computers to other users connected to the Internet through a medium called a webpage. A webpage consists of text interspersed with instructions written in Hypertext Markup Language ("HTML") that is stored in a computer. No images are stored on a webpage; rather, the HTML instructions on the webpage provide an address for where the images are stored, whether in the webpage publisher's computer or some other computer. In general, webpages are publicly available and can be accessed by computers connected to the Internet through the use of a web browser.</p>
<p class="original_content">Google operates a search engine, a software program that automatically accesses thousands of websites (collections of webpages) and indexes them within a database stored on Google's computers. When a Google user accesses the Google website and types in a search query, Google's software searches its database for websites responsive to that search query. Google then sends relevant information from its index of websites to the user's computer. Google's search engines can provide results in the form of text, images, or videos.</p>
<p class="original_content">The Google search engine that provides responses in the form of images is called "Google Image Search." In response to a search query, Google Image Search identifies text in its database responsive to the query and then communicates to users the images associated with the relevant text. Google's software cannot recognize and index the images themselves. Google Image Search provides search results as a webpage of small images called "thumbnails," which are stored in Google's servers. The thumbnail images are reduced, lower-resolution versions of full-sized images stored on third-party computers.</p>
<p class="original_content">When a user clicks on a thumbnail image, the user's browser program interprets HTML instructions on Google's webpage. These HTML instructions direct the user's browser to cause a rectangular area (a "window") to appear on the user's computer screen. The window has two separate areas of information. The browser fills the top section of the screen with information from the Google webpage, including the thumbnail image and text. The HTML instructions also give the user's browser the address of the website publisher's computer that stores the full-size version of the thumbnail.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B2%5D" name="r%5B2%5D" class="footnote original_content">[2]</a></sup></small> By following [1156] the HTML instructions to access the third-party webpage, the user's browser connects to the website publisher's computer, downloads the full-size image, and makes the image appear at the bottom of the window on the user's screen. Google does not store the images that fill this lower part of the window and does not communicate the images to the user; Google simply provides HTML instructions directing a user's browser to access a third-party website. However, the top part of the window (containing the information from the Google webpage) appears to frame and comment on the bottom part of the window. Thus, the user's window appears to be filled with a single integrated presentation of the full-size image, but it is actually an image from a third-party website framed by information from Google's website. The process by which the webpage directs a user's browser to incorporate content from different computers into a single window is referred to as "in-line linking." <em class="original_content">Kelly v. Arriba Soft Corp.,</em> <em class="original_content">336 F.3d 811, 816 (9th Cir.2003)</em>. The term "framing" refers to the process by which information from one computer appears to frame and annotate the in-line linked content from another computer. <em class="original_content">Perfect 10,</em> 416 F.Supp.2d at 833-34.</p>
<p class="original_content">Google also stores webpage content in its cache.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B3%5D" name="r%5B3%5D" class="footnote original_content">[3]</a></sup></small> For each cached webpage, Google's cache contains the text of the webpage as it appeared at the time Google indexed the page, but does not store images from the webpage. <em class="original_content">Id.</em> at 833. Google may provide a link to a cached webpage in response to a user's search query. However, Google's cache version of the webpage is not automatically updated when the webpage is revised by its owner. So if the webpage owner updates its webpage to remove the HTML instructions for finding an infringing image, a browser communicating directly with the webpage would not be able to access that image. However, Google's cache copy of the webpage would still have the old HTML instructions for the infringing image. Unless the owner of the computer changed the HTML address of the infringing image, or otherwise rendered the image unavailable, a browser accessing Google's cache copy of the website could still access the image where it is stored on the website publisher's computer. In other words, Google's cache copy could provide a user's browser with valid directions to an infringing image even though the updated webpage no longer includes that infringing image.</p>
<p class="original_content">In addition to its search engine operations, Google generates revenue through a business program called "AdSense." Under this program, the owner of a website can register with Google to become an AdSense "partner." The website owner then places HTML instructions on its webpages that signal Google's server to place advertising on the webpages that is relevant to the webpages' content. Google's computer program selects the advertising automatically by means of an algorithm. AdSense participants agree to share the revenues that flow from such advertising with Google.</p>
<p class="original_content">[1157] Google also generated revenues through an agreement with Amazon.com that allowed Amazon.com to in-line link to Google's search results. Amazon.com gave its users the impression that Amazon.com was providing search results, but Google communicated the search results directly to Amazon.com's users. Amazon.com routed users' search queries to Google and automatically transmitted Google's responses (i.e., HTML instructions for linking to Google's search results) back to its users.</p>
<p class="original_content">Perfect 10 markets and sells copyrighted images of nude models. Among other enterprises, it operates a subscription website on the Internet. Subscribers pay a monthly fee to view Perfect 10 images in a "members' area" of the site. Subscribers must use a password to log into the members' area. Google does not include these password-protected images from the members' area in Google's index or database. Perfect 10 has also licensed Fonestarz Media Limited to sell and distribute Perfect 10's reduced-size copyrighted images for download and use on cell phones.</p>
<p class="original_content">Some website publishers republish Perfect 10's images on the Internet without authorization. Once this occurs, Google's search engine may automatically index the webpages containing these images and provide thumbnail versions of images in response to user inquiries. When a user clicks on the thumbnail image returned by Google's search engine, the user's browser accesses the third-party webpage and in-line links to the full-sized infringing image stored on the website publisher's computer. This image appears, in its original context, on the lower portion of the window on the user's computer screen framed by information from Google's webpage.</p>
<p class="original_content"><em class="original_content">Procedural History.</em> In May 2001, Perfect 10 began notifying Google that its thumbnail images and in-line linking to the full-size images infringed Perfect 10's copyright. Perfect 10 continued to send these notices through 2005.</p>
<p class="original_content">On November 19, 2004, Perfect 10 filed an action against Google that included copyright infringement claims. This was followed by a similar action against Amazon.com on June 29, 2005. On July 1, 2005 and August 24, 2005, Perfect 10 sought a preliminary injunction to prevent Amazon.com and Google, respectively, from "copying, reproducing, distributing, publicly displaying, adapting or otherwise infringing, or contributing to the infringement" of Perfect 10's photographs; linking to websites that provide full-size infringing versions of Perfect 10's photographs; and infringing Perfect 10's username/password combinations.</p>
<p class="original_content">The district court consolidated the two actions and heard both preliminary injunction motions on November 7, 2005. The district court issued orders granting in part and denying in part the preliminary injunction against Google and denying the preliminary injunction against Amazon.com. Perfect 10 and Google cross-appealed the partial grant and partial denial of the preliminary injunction motion, and Perfect 10 appealed the denial of the preliminary injunction against Amazon.com. On June 15, 2006, the district court temporarily stayed the preliminary injunction.</p>
<div class="new-h2 scale1-3 original_content">II</div>
<div class="new-h2 scale1-3 original_content">Standard of Review</div>
<p class="original_content">We review the district court's grant or denial of a preliminary injunction for an abuse of discretion. <em class="original_content">A &amp; M Records, Inc. v. Napster, Inc.,</em> 239 F.3d 1004, 1013 (9th Cir.2001). The district court must support a preliminary injunction with findings of fact, which we review for clear error. <em class="original_content">Earth Island Inst. v. U.S. Forest Serv.,</em> 442 F.3d 1147, 1156 (9th Cir.2006). We review the district court's conclusions of law de novo. <em class="original_content">Napster,</em> 239 F.3d at 1013.</p>
<p class="original_content">[1158] <em class="original_content">Section 502(a)</em> of the Copyright Act authorizes a court to grant injunctive relief "on such terms as it may deem reasonable to prevent or restrain infringement of a copyright." <em class="original_content">17 U.S.C. § 502(a)</em>. "Preliminary injunctive relief is available to a party who demonstrates either: (1) a combination of probable success on the merits and the possibility of irreparable harm; or (2) that serious questions are raised and the balance of hardships tips in its favor. These two formulations represent two points on a sliding scale in which the required degree of irreparable harm increases as the probability of success decreases." <em class="original_content">Napster,</em> 239 F.3d at 1013 (internal quotation and citation omitted).</p>
<p class="original_content">Because Perfect 10 has the burden of showing a likelihood of success on the merits, the district court held that Perfect 10 also had the burden of demonstrating a likelihood of overcoming Google's fair use defense under <em class="original_content">17 U.S.C. § 107</em>. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 836-37</em>. This ruling was erroneous. At trial, the defendant in an infringement action bears the burden of proving fair use. <em class="original_content">See Campbell v. Acuff-Rose Music, Inc., 510 U.S. 569, 590, 114 S.Ct. 1164, 127 L.Ed.2d 500 (1994)</em>. Because "the burdens at the preliminary injunction stage track the burdens at trial," once the moving party has carried its burden of showing a likelihood of success on the merits, the burden shifts to the non-moving party to show a likelihood that its affirmative defense will succeed. <em class="original_content">Gonzales v. O Centro Espirita Beneficente Uniao do Vegetal,</em> 546 U.S. 418, 429, 126 S.Ct. 1211, 163 L.Ed.2d 1017 (2006); <em class="original_content">see also Abbott Labs. v. Andrx Pharms., Inc.,</em> 473 F.3d 1196, 1201 (Fed. Cir.2007) (to defeat a motion for preliminary injunctive relief in a patent infringement case, the non-moving party must establish a likelihood of success in proving its defenses of invalidity or unenforceability); <em class="original_content">PHG Techs., LLC v. St. John Cos.,</em> 469 F.3d 1361, 1365 (Fed.Cir.2006). Accordingly, once Perfect 10 has shown a likelihood of success on the merits, the burden shifts to Google to show a likelihood that its affirmative defenses will succeed.</p>
<p class="original_content">In addition to its fair use defense, Google also raises an affirmative defense under title II of the Digital Millennium Copyright Act ("DMCA"), <em class="original_content">17 U.S.C. § 512</em>. Congress enacted title II of the DMCA "to provide greater certainty to service providers concerning their legal exposure for infringements that may occur in the course of their activities." <em class="original_content">Ellison v. Robertson,</em> 357 F.3d 1072, 1076 (9th Cir. 2004) (internal quotation omitted).<em class="original_content"> Sections 512(a) through (d)</em> limit liability for (respectively): "(1) transitory digital network communications; (2) system caching; (3) information residing on systems or networks at the direction of users; and (4) information location tools." <em class="original_content">Id.</em> at 1077. A service provider that qualifies for such protection is not liable for monetary relief and may be subject only to the narrow injunctive relief set forth in <em class="original_content">section 512(j)</em>. <em class="original_content">17 U.S.C. § 512(a)</em>. If Perfect 10 demonstrates a likelihood of success on the merits, Google must show a likelihood of succeeding in its claim that it qualifies for protection under title II of the DMCA.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B4%5D" name="r%5B4%5D" class="footnote original_content">[4]</a></sup></small>[1159]</p>
<div class="new-h2 scale1-3 original_content">III</div>
<div class="new-h2 scale1-3 original_content">Direct Infringement</div>
<p class="original_content">Perfect 10 claims that Google's search engine program directly infringes two exclusive rights granted to copyright holders: its display rights and its distribution rights.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B5%5D" name="r%5B5%5D" class="footnote original_content">[5]</a></sup></small> "Plaintiffs must satisfy two requirements to present a prima facie case of direct infringement: (1) they must show ownership of the allegedly infringed material and (2) they must demonstrate that the alleged infringers violate at least one exclusive right granted to copyright holders under <em class="original_content">17 U.S.C. § 106</em>." <em class="original_content">Napster,</em> 239 F.3d at 1013; <em class="original_content">see</em> 17 U.S.C. § 501(a). Even if a plaintiff satisfies these two requirements and makes a prima facie case of direct infringement, the defendant may avoid liability if it can establish that its use of the images is a "fair use" as set forth in <em class="original_content">17 U.S.C. § 107. See Kelly, 336 F.3d at 817</em>.</p>
<p class="original_content">Perfect 10's ownership of at least some of the images at issue is not disputed. <em class="original_content">See Perfect 10,</em> 416 F.Supp.2d at 836.</p>
<p class="original_content">The district court held that Perfect 10 was likely to prevail in its claim that Google violated Perfect 10's display right with respect to the infringing thumbnails. <em class="original_content">Id.</em> at 844. However, the district court concluded that Perfect 10 was not likely to prevail on its claim that Google violated either Perfect 10's display or distribution right with respect to its full-size infringing images. <em class="original_content">Id.</em> at 844-45. We review these rulings for an abuse of discretion. <em class="original_content">Napster,</em> 239 F.3d at 1013.</p>
<div class="new-h2 scale1-3 original_content"><em class="original_content">A. Display Right</em></div>
<p class="original_content">In considering whether Perfect 10 made a prima facie case of violation of its display right, the district court reasoned that a computer owner that stores an image as electronic information and serves that electronic information directly to the user ("i.e., physically sending ones and zeroes over the [I]nternet to the user's browser," <em class="original_content">Perfect 10,</em> 416 F.Supp.2d at 839) is displaying the electronic information in violation of a copyright holder's exclusive display right. <em class="original_content">Id.</em> at 843-45; <em class="original_content">see</em> 17 U.S.C. § 106(5). Conversely, the owner of a computer that does not store and serve the electronic information to a user is not displaying that information, even if such owner in-line links to or frames the electronic information. <em class="original_content">Perfect 10,</em> 416 F.Supp.2d at 843-45. The district court referred to this test as the "server test." <em class="original_content">Id.</em> at 838-39.</p>
<p class="original_content">Applying the server test, the district court concluded that Perfect 10 was likely to succeed in its claim that Google's thumbnails constituted direct infringement but was unlikely to succeed in its claim that Google's in-line linking to full-size infringing images constituted a direct infringement. [1160] <em class="original_content">Id.</em> at 843-45. As explained below, because this analysis comports with the language of the Copyright Act, we agree with the district court's resolution of both these issues.</p>
<p class="original_content">We have not previously addressed the question when a computer displays a copyrighted work for purposes of <em class="original_content">section 106(5)</em>. <em class="original_content">Section 106(5)</em> states that a copyright owner has the exclusive right "to display the copyrighted work publicly." The Copyright Act explains that "display" means "to show a copy of it, either directly or by means of a film, slide, television image, or any other device or process...." <em class="original_content">17 U.S.C. § 101. Section 101</em> defines "copies" as "material objects, other than phonorecords, in which a work is fixed by any method now known or later developed, and from which the work can be perceived, reproduced, or otherwise communicated, either directly or with the aid of a machine or device." <em class="original_content">Id.</em> Finally, the Copyright Act provides that "[a] work is `fixed' in a tangible medium of expression when its embodiment in a copy or phonorecord, by or under the authority of the author, is sufficiently permanent or stable to permit it to be perceived, reproduced, or otherwise communicated for a period of more than transitory duration." <em class="original_content">Id.</em></p>
<p class="original_content">We must now apply these definitions to the facts of this case. A photographic image is a work that is "`fixed' in a tangible medium of expression," for purposes of the Copyright Act, when embodied (i.e., stored) in a computer's server (or hard disk, or other storage device). The image stored in the computer is the "copy" of the work for purposes of copyright law. <em class="original_content">See MAI Sys. Corp. v. Peak Computer, Inc.,</em> <em class="original_content">991 F.2d 511, 517-18 (9th Cir.1993)</em> (a computer makes a "copy" of a software program when it transfers the program from a third party's computer (or other storage device) into its own memory, because the copy of the program recorded in the computer is "fixed" in a manner that is "sufficiently permanent or stable to permit it to be perceived, reproduced, or otherwise communicated for a period of more than transitory duration" (quoting <em class="original_content">17 U.S.C. § 101</em>)). The computer owner shows a copy "by means of a ... device or process" when the owner uses the computer to fill the computer screen with the photographic image stored on that computer, or by communicating the stored image electronically to another person's computer. <em class="original_content">17 U.S.C. § 101</em>. In sum, based on the plain language of the statute, a person displays a photographic image by using a computer to fill a computer screen with a copy of the photographic image fixed in the computer's memory. There is no dispute that Google's computers store thumbnail versions of Perfect 10's copyrighted images and communicate copies of those thumbnails to Google's users.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B6%5D" name="r%5B6%5D" class="footnote original_content">[6]</a></sup></small> Therefore, Perfect 10 has made a prima facie case that Google's communication of its stored thumbnail images directly infringes Perfect 10's display right.</p>
<p class="original_content">Google does not, however, display a copy of full-size infringing photographic images for purposes of the Copyright Act when Google frames in-line linked images that appear on a user's computer screen. Because Google's computers do not store the photographic images, Google does not have a copy of the images for purposes of the Copyright Act. In other words, Google does not have any "material objects ... in [1161] which a work is fixed ... and from which the work can be perceived, reproduced, or otherwise communicated" and thus cannot communicate a copy. <em class="original_content">17 U.S.C. § 101</em>.</p>
<p class="original_content">Instead of communicating a copy of the image, Google provides HTML instructions that direct a user's browser to a website publisher's computer that stores the full-size photographic image. Providing these HTML instructions is not equivalent to showing a copy. First, the HTML instructions are lines of text, not a photographic image. Second, HTML instructions do not themselves cause infringing images to appear on the user's computer screen. The HTML merely gives the address of the image to the user's browser. The browser then interacts with the computer that stores the infringing image. It is this interaction that causes an infringing image to appear on the user's computer screen. Google may facilitate the user's access to infringing images. However, such assistance raises only contributory liability issues, <em class="original_content">see Metro-Goldwyn-Mayer Studios, Inc. v. Grokster, Ltd.,</em> <em class="original_content">545 U.S. 913, 929-30, 125 S.Ct. 2764, 162 L.Ed.2d 781 (2005)</em>, <em class="original_content">Napster, 239 F.3d at 1019</em>, and does not constitute direct infringement of the copyright owner's display rights.</p>
<p class="original_content">Perfect 10 argues that Google displays a copy of the full-size images by framing the full-size images, which gives the impression that Google is showing the image within a single Google webpage. While in-line linking and framing may cause some computer users to believe they are viewing a single Google webpage, the Copyright Act, unlike the Trademark Act, does not protect a copyright holder against acts that cause consumer confusion. <em class="original_content">Cf.</em> <em class="original_content">15 U.S.C. § 1114(1)</em> (providing that a person who uses a trademark in a manner likely to cause confusion shall be liable in a civil action to the trademark registrant).<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B7%5D" name="r%5B7%5D" class="footnote original_content">[7]</a></sup></small></p>
<p class="original_content">Nor does our ruling that a computer owner does not display a copy of an image when it communicates only the HTML address of the copy erroneously collapse the display right in <em class="original_content">section 106(5)</em> into the reproduction right set forth in <em class="original_content">section 106(1)</em>. Nothing in the Copyright Act prevents the various rights protected in <em class="original_content">section 106</em> from overlapping. Indeed, under some circumstances, more than one right must be infringed in order for an infringement claim to arise. For example, a "Game Genie" device that allowed a player to alter features of a Nintendo computer game did not infringe Nintendo's right to prepare derivative works because the Game Genie did not incorporate any portion of the game itself. <em class="original_content">See Lewis Galoob Toys, Inc. v. Nintendo of Am., Inc.,</em> 9<em class="original_content">64 F.2d 965, 967 (9th Cir.1992)</em>. We held that a copyright holder's right to create derivative works is not infringed unless the alleged derivative work "incorporate[s] a protected work in some concrete or permanent `form.'" <em class="original_content">Id.</em> In other words, in some contexts, the claimant must be able to claim infringement of its reproduction right in order to claim infringement of its right to prepare derivative works.</p>
<p class="original_content">[1162] Because Google's cache merely stores the text of webpages, our analysis of whether Google's search engine program potentially infringes Perfect 10's display and distribution rights is equally applicable to Google's cache. Perfect 10 is not likely to succeed in showing that a cached webpage that in-line links to full-size infringing images violates such rights. For purposes of this analysis, it is irrelevant whether cache copies direct a user's browser to third-party images that are no longer available on the third party's website, because it is the website publisher's computer, rather than Google's computer, that stores and displays the infringing image.</p>
<div class="new-h2 scale1-3 original_content"><em class="original_content">B. Distribution Right</em></div>
<p class="original_content">The district court also concluded that Perfect 10 would not likely prevail on its claim that Google directly infringed Perfect 10's right to distribute its full-size images. <em class="original_content">Perfect 10, 416 F.Supp.2d at 844-45</em>. The district court reasoned that distribution requires an "actual dissemination" of a copy. <em class="original_content">Id.</em> at 844. Because Google did not communicate the full-size images to the user's computer, Google did not distribute these images. <em class="original_content">Id.</em></p>
<p class="original_content">Again, the district court's conclusion on this point is consistent with the language of the Copyright Act. <em class="original_content">Section 106(3)</em> provides that the copyright owner has the exclusive right "to distribute copies or phonorecords of the copyrighted work to the public by sale or other transfer of ownership, or by rental, lease, or lending." <em class="original_content">17 U.S.C. § 106(3)</em>. As noted, "copies" means "material objects ... in which a work is fixed."<em class="original_content"> 17 U.S.C. § 101</em>. The Supreme Court has indicated that in the electronic context, copies may be distributed electronically. <em class="original_content">See N.Y. Times Co. v. Tasini, 533 U.S. 483, 498, 121 S.Ct. 2381, 150 L.Ed.2d 500 (2001)</em> (a computer database program distributed copies of newspaper articles stored in its computerized database by selling copies of those articles through its database service). Google's search engine communicates HTML instructions that tell a user's browser where to find full-size images on a website publisher's computer, but Google does not itself distribute copies of the infringing photographs. It is the website publisher's computer that distributes copies of the images by transmitting the photographic image electronically to the user's computer. As in <em class="original_content">Tasini,</em> the user can then obtain copies by downloading the photo or printing it.</p>
<p class="original_content">Perfect 10 incorrectly relies on <em class="original_content">Hotaling v. Church of Jesus Christ of Latter-Day Saints</em> and <em class="original_content">Napster</em> for the proposition that merely making images "available" violates the copyright owner's distribution right. <em class="original_content">Hotaling v. Church of Jesus Christ of Latter-Day Saints,</em> <em class="original_content">118 F.3d 199 (4th Cir.1997)</em>; <em class="original_content">Napster, 239 F.3d 1004</em>. <em class="original_content">Hotaling</em> held that the owner of a collection of works who makes them available to the public may be deemed to have distributed copies of the works. <em class="original_content">Hotaling,</em> <em class="original_content">118 F.3d at 203</em>. Similarly, the distribution rights of the plaintiff copyright owners were infringed by Napster <em class="original_content">users</em> (private individuals with collections of music files stored on their home computers) when they used the Napster software to make their collections available to all other Napster users. <em class="original_content">Napster, 239 F.3d at 1011-14</em>.</p>
<p class="original_content">This "deemed distribution" rule does not apply to Google. Unlike the participants in the Napster system or the library in <em class="original_content">Hotaling,</em> Google does not own a collection of Perfect 10's full-size images and does not communicate these images to the computers of people using Google's search engine. Though Google indexes these images, it does not have a collection of stored full-size images it makes available to the public. Google therefore cannot be deemed to distribute copies of these images under the reasoning of <em class="original_content">Napster</em> or [1163] <em class="original_content">Hotaling.</em> Accordingly, the district court correctly concluded that Perfect 10 does not have a likelihood of success in proving that Google violates Perfect 10's distribution rights with respect to full-size images.</p>
<div class="new-h2 scale1-3 original_content"><em class="original_content">C. Fair Use Defense</em></div>
<p class="original_content">Because Perfect 10 has succeeded in showing it would prevail in its prima facie case that Google's thumbnail images infringe Perfect 10's display rights, the burden shifts to Google to show that it will likely succeed in establishing an affirmative defense. Google contends that its use of thumbnails is a fair use of the images and therefore does not constitute an infringement of Perfect 10's copyright. <em class="original_content">See</em> <em class="original_content">17 U.S.C. § 107</em>.</p>
<p class="original_content">The fair use defense permits the use of copyrighted works without the copyright owner's consent under certain situations. The defense encourages and allows the development of new ideas that build on earlier ones, thus providing a necessary counterbalance to the copyright law's goal of protecting creators' work product. "From the infancy of copyright protection, some opportunity for fair use of copyrighted materials has been thought necessary to fulfill copyright's very purpose...." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 575, 114 S.Ct. 1164</em>. "The fair use doctrine thus `permits [and requires] courts to avoid rigid application of the copyright statute when, on occasion, it would stifle the very creativity which that law is designed to foster.'" <em class="original_content">Id</em>. at 577, 114 S.Ct. 1164 (quoting <em class="original_content">Stewart v. Abend, 495 U.S. 207, 236, 110 S.Ct. 1750, 109 L.Ed.2d 184 (1990))</em> (alteration in original).</p>
<p class="original_content">Congress codified the common law of fair use in <em class="original_content">17 U.S.C. § 107</em>, which provides:</p>
<blockquote class="original_content">
<p class="original_content">Notwithstanding the provisions of <em class="original_content">sections 106</em> and <em class="original_content">106A</em>, the fair use of a copyrighted work, including such use by reproduction in copies or phonorecords or by any other means specified by that section, for purposes such as criticism, comment, news reporting, teaching (including multiple copies for classroom use), scholarship, or research, is not an infringement of copyright. In determining whether the use made of a work in any particular case is a fair use the factors to be considered shall include—</p>
<p class="original_content">(1) the purpose and character of the use, including whether such use is of a commercial nature or is for nonprofit educational purposes;</p>
<p class="original_content">(2) the nature of the copyrighted work;</p>
<p class="original_content">(3) the amount and substantiality of the portion used in relation to the copyrighted work as a whole; and</p>
<p class="original_content">(4) the effect of the use upon the potential market for or value of the copyrighted work.</p>
<p class="original_content">The fact that a work is unpublished shall not itself bar a finding of fair use if such finding is made upon consideration of all the above factors.</p>
</blockquote>
<p class="original_content"><em class="original_content">17 U.S.C. § 107.</em></p>
<p class="original_content">We must be flexible in applying a fair use analysis; it "is not to be simplified with bright-line rules, for the statute, like the doctrine it recognizes, calls for case-by-case analysis.... Nor may the four statutory factors be treated in isolation, one from another. All are to be explored, and the results weighed together, in light of the purposes of copyright." <em class="original_content">Campbell, 510 U.S. at 577-78, 114 S.Ct. 1164; see also Kelly, 336 F.3d at 817-18.</em> The purpose of copyright law is "[t]o promote the Progress of Science and useful Arts," U.S. CONST. art. I, § 8, cl. 8, and to serve "`the welfare of the public.'" <em class="original_content">Sony Corp. of Am. v. Universal City Studios, Inc., 464 U.S. 417, 429 n. 10, 104 S.Ct. 774, 78 L.Ed.2d 574</em> (quoting H.R.Rep. No. 2222, 60th Cong., 2d Sess. 7 (1909)).</p>
<p class="original_content">[1164] In applying the fair use analysis in this case, we are guided by <em class="original_content">Kelly v. Arriba Soft Corp.,</em> which considered substantially the same use of copyrighted photographic images as is at issue here. <em class="original_content">See</em> 336 F.3d 811. In <em class="original_content">Kelly,</em> a photographer brought a direct infringement claim against Arriba, the operator of an Internet search engine. The search engine provided thumbnail versions of the photographer's images in response to search queries. <em class="original_content">Id.</em> at 815-16. We held that Arriba's use of thumbnail images was a fair use primarily based on the transformative nature of a search engine and its benefit to the public. <em class="original_content">Id.</em> at 818-22. We also concluded that Arriba's use of the thumbnail images did not harm the photographer's market for his image. <em class="original_content">Id.</em> at 821-22.</p>
<p class="original_content">In this case, the district court determined that Google's use of thumbnails was not a fair use and distinguished <em class="original_content">Kelly. Perfect 10,</em> 416 F.Supp.2d at 845-51. We consider these distinctions in the context of the four-factor fair use analysis.</p>
<p class="original_content"><em class="original_content">Purpose and character of the use.</em> The first factor, <em class="original_content">17 U.S.C. § 107(1)</em>, requires a court to consider "the purpose and character of the use, including whether such use is of a commercial nature or is for nonprofit educational purposes." The central purpose of this inquiry is to determine whether and to what extent the new work is "transformative." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 579, 114 S.Ct. 1164.</em> A work is "transformative" when the new work does not "merely supersede the objects of the original creation" but rather "adds something new, with a further purpose or different character, altering the first with new expression, meaning, or message." <em class="original_content">Id.</em> (internal quotation and alteration omitted). Conversely, if the new work "supersede[s] the use of the original," the use is likely not a fair use. <em class="original_content">Harper &amp; Row Publishers, Inc. v. Nation Enters., 471 U.S. 539, 550-51, 105 S.Ct. 2218, 85 L.Ed.2d 588 (1985)</em> (internal quotation omitted) (publishing the "heart" of an unpublished work and thus supplanting the copyright holder's first publication right was not a fair use); <em class="original_content">see also Wall Data Inc. v. L.A. County Sheriff's Dep't,</em> <em class="original_content">447 F.3d 769, 778-82 (9th Cir.2006)</em> (using a copy to save the cost of buying additional copies of a computer program was not a fair use).<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B8%5D" name="r%5B8%5D" class="footnote original_content">[8]</a></sup></small></p>
<p class="original_content">As noted in <em class="original_content">Campbell,</em> a "transformative work" is one that alters the original work [1165] "with new expression, meaning, or message." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 579, 114 S.Ct. 1164</em>. "A use is considered transformative only where a defendant changes a plaintiff's copyrighted work or uses the plaintiff's copyrighted work in a different context such that the plaintiff's work is transformed into a new creation." <em class="original_content">Wall Data,</em> <em class="original_content">447 F.3d at 778</em>.</p>
<p class="original_content">Google's use of thumbnails is highly transformative. In <em class="original_content">Kelly,</em> we concluded that Arriba's use of thumbnails was transformative because "Arriba's use of the images serve[d] a different function than Kelly's use—improving access to information on the [I]nternet versus artistic expression." <em class="original_content">Kelly,</em> <em class="original_content">336 F.3d at 819</em>. Although an image may have been created originally to serve an entertainment, aesthetic, or informative function, a search engine transforms the image into a pointer directing a user to a source of information. Just as a "parody has an obvious claim to transformative value" because "it can provide social benefit, by shedding light on an earlier work, and, in the process, creating a new one," <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 579, 114 S.Ct. 1164</em>, a search engine provides social benefit by incorporating an original work into a new work, namely, an electronic reference tool. Indeed, a search engine may be more transformative than a parody because a search engine provides an entirely new use for the original work, while a parody typically has the same entertainment purpose as the original work. <em class="original_content">See, e.g., id. at 594-96, 114 S.Ct. 1164</em> (holding that 2 Live Crew's parody of "Oh, Pretty Woman" using the words "hairy woman" or "bald headed woman" was a transformative work, and thus constituted a fair use); <em class="original_content">Mattel, Inc. v. Walking Mountain Prods.,</em> 3<em class="original_content">53 F.3d 792, 796-98, 800-06 (9th Cir.2003)</em> (concluding that photos parodying Barbie by depicting "nude Barbie dolls juxtaposed with vintage kitchen appliances" was a fair use). In other words, a search engine puts images "in a different context" so that they are "transformed into a new creation." <em class="original_content">Wall Data, 447 F.3d at 778</em>.</p>
<p class="original_content">The fact that Google incorporates the entire Perfect 10 image into the search engine results does not diminish the transformative nature of Google's use. As the district court correctly noted, <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 848-49</em>, we determined in <em class="original_content">Kelly</em> that even making an exact copy of a work may be transformative so long as the copy serves a different function than the original work, <em class="original_content">Kelly,</em> <em class="original_content">336 F.3d at 818-19</em>. For example, the First Circuit has held that the republication of photos taken for a modeling portfolio in a newspaper was transformative because the photos served to inform, as well as entertain. <em class="original_content">See Nunez v. Caribbean Int'l News Corp.,</em> <em class="original_content">235 F.3d 18, 22-23 (1st Cir.2000)</em>. In contrast, duplicating a church's religious book for use by a different church was not transformative. <em class="original_content">See Worldwide Church of God v. Phila. Church of God, Inc.,</em> <em class="original_content">227 F.3d 1110, 1117 (9th Cir.2000)</em>. Nor was a broadcaster's simple retransmission of a radio broadcast over telephone lines transformative, where the original radio shows were given no "new expression, meaning, or message." <em class="original_content">Infinity Broad. Corp. v. Kirkwood,</em> <em class="original_content">150 F.3d 104, 108 (2d Cir.1998)</em>. Here, Google uses Perfect 10's images in a new context to serve a different purpose.</p>
<p class="original_content">The district court nevertheless determined that Google's use of thumbnail images was less transformative than Arriba's use of thumbnails in <em class="original_content">Kelly</em> because Google's use of thumbnails superseded Perfect 10's right to sell its reduced-size images for use on cell phones. <em class="original_content">See Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 849</em>. The district court stated that "mobile users can download and save the thumbnails displayed by Google Image Search onto their phones," and concluded "to the extent that users may choose to download free images to their [1166] phone rather than purchase [Perfect 10's] reduced-size images, Google's use supersedes [Perfect 10's]." <em class="original_content">Id.</em></p>
<p class="original_content">Additionally, the district court determined that the commercial nature of Google's use weighed against its transformative nature. <em class="original_content">Id.</em> Although <em class="original_content">Kelly</em> held that the commercial use of the photographer's images by Arriba's search engine was less exploitative than typical commercial use, and thus weighed only slightly against a finding of fair use, <em class="original_content">Kelly,</em> <em class="original_content">336 F.3d at 818-20</em>, the district court here distinguished <em class="original_content">Kelly</em> on the ground that some website owners in the AdSense program had infringing Perfect 10 images on their websites, <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 846-47</em>. The district court held that because Google's thumbnails "lead users to sites that directly benefit Google's bottom line," the AdSense program increased the commercial nature of Google's use of Perfect 10's images. <em class="original_content">Id.</em> at 847.</p>
<p class="original_content">In conducting our case-specific analysis of fair use in light of the purposes of copyright, <em class="original_content">Campbell,</em> 510 U.S. at 581, 114 S.Ct. 1164, we must weigh Google's superseding and commercial uses of thumbnail images against Google's significant transformative use, as well as the extent to which Google's search engine promotes the purposes of copyright and serves the interests of the public. Although the district court acknowledged the "truism that search engines such as Google Image Search provide great value to the public," <em class="original_content">Perfect 10,</em> 416 F.Supp.2d at 848-49, the district court did not expressly consider whether this value outweighed the significance of Google's superseding use or the commercial nature of Google's use. <em class="original_content">Id.</em> at 849. The Supreme Court, however, has directed us to be mindful of the extent to which a use promotes the purposes of copyright and serves the interests of the public. <em class="original_content">See Campbell,</em> <em class="original_content">510 U.S. at 579, 114 S.Ct. 1164</em>; <em class="original_content">Harper &amp; Row,</em> <em class="original_content">471 U.S. at 556-57, 105 S.Ct. 2218</em>; <em class="original_content">Sony,</em> <em class="original_content">464 U.S. at 431-32, 104 S.Ct. 774</em>.</p>
<p class="original_content">We note that the superseding use in this case is not significant at present: the district court did not find that any downloads for mobile phone use had taken place. <em class="original_content">See Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 849</em>. Moreover, while Google's use of thumbnails to direct users to AdSense partners containing infringing content adds a commercial dimension that did not exist in <em class="original_content">Kelly,</em> the district court did not determine that this commercial element was significant. <em class="original_content">See id.</em> <em class="original_content">at 848-49</em>. The district court stated that Google's AdSense programs as a whole contributed "$630 million, or 46% of total revenues" to Google's bottom line, but noted that this figure did not "break down the much smaller amount attributable to websites that contain infringing content." <em class="original_content">Id.</em> <em class="original_content">at 847 &amp; n. 12</em> (internal quotation omitted).</p>
<p class="original_content">We conclude that the significantly transformative nature of Google's search engine, particularly in light of its public benefit, outweighs Google's superseding and commercial uses of the thumbnails in this case. In reaching this conclusion, we note the importance of analyzing fair use flexibly in light of new circumstances. <em class="original_content">Sony,</em> 464 U.S. at 431-32, 104 S.Ct. 774; <em class="original_content">id.</em> at 448 n. 31, 104 S.Ct. 774 ("`[<em class="original_content">Section 107</em>] endorses the purpose and general scope of the judicial doctrine of fair use, but there is no disposition to freeze the doctrine in the statute, especially during a period of rapid technological change.'" (quoting H.R.Rep. No. 94-1476, p. 65-66 (1976), U.S.Code Cong. &amp; Admin. News 1976, p. 5680)). We are also mindful of the Supreme Court's direction that "the more transformative the new work, the less will be the significance of other factors, like commercialism, that may weigh against a finding of fair use." <em class="original_content">Campbell,</em> 510 U.S. at 579, 114 S.Ct. 1164.</p>
<p class="original_content">[1167] Accordingly, we disagree with the district court's conclusion that because Google's use of the thumbnails could supersede Perfect 10's cell phone download use and because the use was more commercial than Arriba's, this fair use factor weighed "slightly" in favor of Perfect 10. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 849</em>. Instead, we conclude that the transformative nature of Google's use is more significant than any incidental superseding use or the minor commercial aspects of Google's search engine and website. Therefore, this factor weighs heavily in favor of Google.</p>
<p class="original_content"><em class="original_content">The nature of the copyrighted work.</em> With respect to the second factor, "the nature of the copyrighted work," <em class="original_content">17 U.S.C. § 107(2)</em>, our decision in <em class="original_content">Kelly</em> is directly on point. There we held that the photographer's images were "creative in nature" and thus "closer to the core of intended copyright protection than are more fact-based works." <em class="original_content">Kelly,</em> <em class="original_content">336 F.3d at 820</em> (internal quotation omitted). However, because the photos appeared on the Internet before Arriba used thumbnail versions in its search engine results, this factor weighed only slightly in favor of the photographer. <em class="original_content">Id.</em></p>
<p class="original_content">Here, the district court found that Perfect 10's images were creative but also previously published. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 850</em>. The right of first publication is "the author's right to control the first public appearance of his expression." <em class="original_content">Harper &amp; Row,</em> <em class="original_content">471 U.S. at 564, 105 S.Ct. 2218</em>. Because this right encompasses "the choices of when, where, and in what form first to publish a work," <em class="original_content">id.,</em> an author exercises and exhausts this one-time right by publishing the work in any medium. <em class="original_content">See, e.g., Batjac Prods. Inc. v. Good-Times Home Video Corp.,</em> <em class="original_content">160 F.3d 1223, 1235 (9th Cir.1998)</em> (noting, in the context of the common law right of first publication, that such a right "does not entail multiple first publication rights in every available medium"). Once Perfect 10 has exploited this commercially valuable right of first publication by putting its images on the Internet for paid subscribers, Perfect 10 is no longer entitled to the enhanced protection available for an unpublished work. Accordingly the district court did not err in holding that this factor weighed only slightly in favor of Perfect 10.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B9%5D" name="r%5B9%5D" class="footnote original_content">[9]</a></sup></small> <em class="original_content">See Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 849-50</em>.</p>
<p class="original_content"><em class="original_content">The amount and substantiality of the portion used.</em> "The third factor asks whether the amount and substantiality of the portion used in relation to the copyrighted work as a whole ... are reasonable in relation to the purpose of the copying." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 586, 114 S.Ct. 1164</em> (internal quotation omitted); <em class="original_content">see also</em> <em class="original_content">17 U.S.C. § 107(3)</em>. In <em class="original_content">Kelly,</em> we held Arriba's use of the entire photographic image was reasonable in light of the purpose of a search engine. <em class="original_content">Kelly, 336 F.3d at 821</em>. Specifically, we noted, "[i]t was necessary for Arriba to copy the entire image to allow users to recognize the image and decide whether to pursue more information about the image or the originating [website]. If Arriba only copied part of the image, it would be more difficult to identify it, thereby reducing the usefulness of the visual search engine." <em class="original_content">Id.</em> Accordingly, we concluded that this factor did not weigh in favor of either [1168] party. <em class="original_content">Id.</em> Because the same analysis applies to Google's use of Perfect 10's image, the district court did not err in finding that this factor favored neither party.</p>
<p class="original_content"><em class="original_content">Effect of use on the market.</em> The fourth factor is "the effect of the use upon the potential market for or value of the copyrighted work." <em class="original_content">17 U.S.C. § 107(4)</em>. In <em class="original_content">Kelly,</em> we concluded that Arriba's use of the thumbnail images did not harm the market for the photographer's full-size images. <em class="original_content">See Kelly,</em> <em class="original_content">336 F.3d at 821-22</em>. We reasoned that because thumbnails were not a substitute for the full-sized images, they did not harm the photographer's ability to sell or license his full-sized images. <em class="original_content">Id.</em> The district court here followed <em class="original_content">Kelly</em>'s reasoning, holding that Google's use of thumbnails did not hurt Perfect 10's market for full-size images. <em class="original_content">See Perfect 10,</em> 416 F.Supp.2d at 850-51. We agree.</p>
<p class="original_content">Perfect 10 argues that the district court erred because the likelihood of market harm may be presumed if the intended use of an image is for commercial gain. However, this presumption does not arise when a work is transformative because "market substitution is at least less certain, and market harm may not be so readily inferred." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 591, 114 S.Ct. 1164</em>. As previously discussed, Google's use of thumbnails for search engine purposes is highly transformative, and so market harm cannot be presumed.</p>
<p class="original_content">Perfect 10 also has a market for reduced-size images, an issue not considered in <em class="original_content">Kelly.</em> The district court held that "Google's use of thumbnails likely does harm the potential market for the downloading of [Perfect 10's] reduced-size images onto cell phones." <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 851</em> (emphasis omitted). The district court reasoned that persons who can obtain Perfect 10 images free of charge from Google are less likely to pay for a download, and the availability of Google's thumbnail images would harm Perfect 10's market for cell phone downloads. <em class="original_content">Id.</em> As we discussed above, the district court did not make a finding that Google users have downloaded thumbnail images for cell phone use. This potential harm to Perfect 10's market remains hypothetical. We conclude that this factor favors neither party.</p>
<p class="original_content">Having undertaken a case-specific analysis of all four factors, we now weigh these factors together "in light of the purposes of copyright." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 578, 114 S.Ct. 1164</em>; <em class="original_content">see also Kelly,</em> <em class="original_content">336 F.3d at 818</em> ("We must balance[the <em class="original_content">section 107</em>] factors in light of the objectives of copyright law, rather than view them as definitive or determinative tests."). In this case, Google has put Perfect 10's thumbnail images (along with millions of other thumbnail images) to a use fundamentally different than the use intended by Perfect 10. In doing so, Google has provided a significant benefit to the public. Weighing this significant transformative use against the unproven use of Google's thumbnails for cell phone downloads, and considering the other fair use factors, all in light of the purpose of copyright, we conclude that Google's use of Perfect 10's thumbnails is a fair use. Because the district court here "found facts sufficient to evaluate each of the statutory factors ... [we] need not remand for further factfinding." <em class="original_content">Harper &amp; Row, 471 U.S. at 560, 105 S.Ct. 2218</em> (internal quotation omitted). We conclude that Google is likely to succeed in proving its fair use defense and, accordingly, we vacate the preliminary injunction regarding Google's use of thumbnail images.</p>
<div class="new-h2 scale1-3 original_content">IV</div>
<div class="new-h2 scale1-3 original_content">Secondary Liability for Copyright Infringement</div>
<p class="original_content">We now turn to the district court's ruling that Google is unlikely to be secondarily [1169] liable for its in-line linking to infringing full-size images under the doctrines of contributory and vicarious infringement.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B10%5D" name="r%5B10%5D" class="footnote original_content">[10]</a></sup></small> The district court ruled that Perfect 10 did not have a likelihood of proving success on the merits of either its contributory infringement or vicarious infringement claims with respect to the full-size images. <em class="original_content">See Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 856, 858</em>. In reviewing the district court's conclusions, we are guided by the Supreme Court's recent interpretation of secondary liability, namely: "[o]ne infringes contributorily by intentionally inducing or encouraging direct infringement, and infringes vicariously by profiting from direct infringement while declining to exercise a right to stop or limit it." <em class="original_content">Grokster,</em> <em class="original_content">545 U.S. at 930, 125 S.Ct. 2764</em> (internal citations omitted).</p>
<p class="original_content"><em class="original_content">Direct Infringement by Third Parties.</em> As a threshold matter, before we examine Perfect 10's claims that Google is secondarily liable, Perfect 10 must establish that there has been direct infringement by third parties. <em class="original_content">See Napster,</em> <em class="original_content">239 F.3d at 1013 n. 2</em> ("Secondary liability for copyright infringement does not exist in the absence of direct infringement by a third party.").</p>
<p class="original_content">Perfect 10 alleges that third parties directly infringed its images in three ways. First, Perfect 10 claims that third-party websites directly infringed its copyright by reproducing, displaying, and distributing unauthorized copies of Perfect 10's images. Google does not dispute this claim on appeal.</p>
<p class="original_content">Second, Perfect 10 claims that individual users of Google's search engine directly infringed Perfect 10's copyrights by storing full-size infringing images on their computers. We agree with the district court's conclusion that Perfect 10 failed to provide sufficient evidence to support this claim. <em class="original_content">See Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 852</em>. There is no evidence in the record directly establishing that users of Google's search engine have stored infringing images on their computers, and the district court did not err in declining to infer the existence of such evidence.</p>
<p class="original_content">Finally, Perfect 10 contends that users who link to infringing websites automatically make "cache" copies of full-size images and thereby directly infringe Perfect 10's reproduction right. The district court rejected this argument, holding that any such reproduction was likely a "fair use." <em class="original_content">Id.</em> <em class="original_content">at 852 n. 17</em>. The district court reasoned that "[l]ocal caching by the browsers of individual users is noncommercial, transformative, and no more than necessary to achieve the objectives of decreasing network latency and minimizing unnecessary bandwidth usage (essential to the [I]nternet). It has a minimal impact on the potential market for the original work...." <em class="original_content">Id.</em> We agree; even assuming such automatic copying could constitute direct infringement, it is a fair use in this context. The copying function performed automatically by a user's computer to assist in accessing the Internet is a transformative use. Moreover, as noted by the district court, a cache copies no more than is necessary to assist the user in Internet use. It is designed to enhance an individual's computer use, not to supersede the copyright holders' exploitation of their works. Such automatic background copying has no more than a minimal effect on Perfect 10's rights, but a considerable public benefit. Because the four fair use factors weigh in favor of concluding that [1170] cache copying constitutes a fair use, Google has established a likelihood of success on this issue. Accordingly, Perfect 10 has not carried its burden of showing that users' cache copies of Perfect 10's full-size images constitute direct infringement.</p>
<p class="original_content">Therefore, we must assess Perfect 10's arguments that Google is secondarily liable in light of the direct infringement that is undisputed by the parties: third-party websites' reproducing, displaying, and distributing unauthorized copies of Perfect 10's images on the Internet. <em class="original_content">Id.</em> <em class="original_content">at 852</em>.</p>
<div class="new-h2 scale1-3 original_content"><em class="original_content">A. Contributory Infringement</em></div>
<p class="original_content">In order for Perfect 10 to show it will likely succeed in its contributory liability claim against Google, it must establish that Google's activities meet the definition of contributory liability recently enunciated in <em class="original_content">Grokster.</em> Within the general rule that "[o]ne infringes contributorily by intentionally inducing or encouraging direct infringement," <em class="original_content">Grokster, 545 U.S. at 930, 125 S.Ct. 2764</em>, the Court has defined two categories of contributory liability: "Liability under our jurisprudence may be predicated on actively encouraging (or inducing) infringement through specific acts (as the Court's opinion develops) or on distributing a product distributees use to infringe copyrights, if the product is not capable of `substantial' or `commercially significant' noninfringing uses." <em class="original_content">Id. at 942, 125 S.Ct. 2764</em> (Ginsburg, J., concurring) (quoting <em class="original_content">Sony,</em> <em class="original_content">464 U.S. at 442, 104 S.Ct. 774</em>); <em class="original_content">see also id.</em> <em class="original_content">at 936-37, 125 S.Ct. 2764</em>.</p>
<p class="original_content">Looking at the second category of liability identified by the Supreme Court (distributing products), Google relies on <em class="original_content">Sony,</em> <em class="original_content">464 U.S. at 442, 104 S.Ct. 774</em>, to argue that it cannot be held liable for contributory infringement because liability does not arise from the mere sale of a product (even with knowledge that consumers would use the product to infringe) if the product is capable of substantial non-infringing use. Google argues that its search engine service is such a product. Assuming the principle enunciated in <em class="original_content">Sony</em> is applicable to the operation of Google's search engine, then Google cannot be held liable for contributory infringement <em class="original_content">solely</em> because the design of its search engine facilitates such infringement. <em class="original_content">Grokster, 545 U.S. at 931-32, 125 S.Ct. 2764</em> (discussing <em class="original_content">Sony,</em> <em class="original_content">464 U.S. 417, 104 S.Ct. 774, 78 L.Ed.2d 574</em>). Nor can Google be held liable solely because it did not develop technology that would enable its search engine to automatically avoid infringing images. <em class="original_content">See id.</em> <em class="original_content">at 939 n. 12, 125 S.Ct. 2764</em>. However, Perfect 10 has not based its claim of infringement on the design of Google's search engine and the <em class="original_content">Sony</em> rule does not immunize Google from other sources of contributory liability. <em class="original_content">See id. at 933-34, 125 S.Ct. 2764</em>.</p>
<p class="original_content">We must next consider whether Google could be held liable under the first category of contributory liability identified by the Supreme Court, that is, the liability that may be imposed for intentionally encouraging infringement through specific acts.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B11%5D" name="r%5B11%5D" class="footnote original_content">[11]</a></sup></small> <em class="original_content">Grokster</em> tells us that contribution to infringement must be intentional for liability to arise. <em class="original_content">Grokster,</em> <em class="original_content">545 U.S. at 930, 125 S.Ct. 2764</em>. However, <em class="original_content">Grokster</em> also directs us to analyze contributory liability in light of "rules of fault-based liability derived from the common law," <em class="original_content">id.</em> <em class="original_content">at 934-35, 125 S.Ct. 2764</em>, and [1171] common law principles establish that intent may be imputed. "Tort law ordinarily imputes to an actor the intention to cause the natural and probable consequences of his conduct." <em class="original_content">DeVoto v. Pac. Fid. Life Ins. Co., 618 F.2d 1340, 1347 (9th Cir. 1980)</em>; <em class="original_content">RESTATEMENT (SECOND) OF TORTS § 8A cmt. b (1965)</em> ("If the actor knows that the consequences are certain, or substantially certain, to result from his act, and still goes ahead, he is treated by the law as if he had in fact desired to produce the result."). When the Supreme Court imported patent law's "staple article of commerce doctrine" into the copyright context, it also adopted these principles of imputed intent. <em class="original_content">Grokster,</em> <em class="original_content">545 U.S. at 932, 125 S.Ct. 2764</em> ("The [staple article of commerce] doctrine was devised to identify instances in which it may be presumed from distribution of an article in commerce that the distributor intended the article to be used to infringe another's patent, and so may justly be held liable for that infringement."). Therefore, under <em class="original_content">Grokster,</em> an actor may be contributorily liable for intentionally encouraging direct infringement if the actor knowingly takes steps that are substantially certain to result in such direct infringement.</p>
<p class="original_content">Our tests for contributory liability are consistent with the rule set forth in <em class="original_content">Grokster.</em> We have adopted the general rule set forth in <em class="original_content">Gershwin Publishing Corp. v. Columbia Artists Management, Inc.,</em> namely: "one who, with knowledge of the infringing activity, induces, causes or materially contributes to the infringing conduct of another, may be held liable as a `contributory' infringer," <em class="original_content">443 F.2d 1159, 1162 (2d Cir.1971)</em>. <em class="original_content">See Ellison, 357 F.3d at 1076</em>; <em class="original_content">Napster,</em> <em class="original_content">239 F.3d at 1019</em>; <em class="original_content">Fonovisa, Inc. v. Cherry Auction, Inc.,</em> <em class="original_content">76 F.3d 259, 264 (9th Cir.1996)</em>.</p>
<p class="original_content">We have further refined this test in the context of cyberspace<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B12%5D" name="r%5B12%5D" class="footnote original_content">[12]</a></sup></small> to determine when contributory liability can be imposed on a provider of Internet access or services. <em class="original_content">See Napster,</em> <em class="original_content">239 F.3d at 1019-20</em>. In <em class="original_content">Napster,</em> we considered claims that the operator of an electronic file sharing system was contributorily liable for assisting individual users to swap copyrighted music files stored on their home computers with other users of the system. <em class="original_content">Napster, 239 F.3d at 1011-13, 1019-22</em>. We stated that "if a computer system operator learns of specific infringing material available on his system and fails to purge such material from the system, the operator knows of and contributes to direct infringement." <em class="original_content">Id.</em> <em class="original_content">at 1021</em>. Because Napster knew of the availability of infringing music files, assisted users in accessing such files, and failed to block access to such files, we concluded that Napster materially contributed to infringement. <em class="original_content">Id. at 1022</em>.</p>
<p class="original_content">The <em class="original_content">Napster</em> test for contributory liability was modeled on the influential district court decision in <em class="original_content">Religious Technology Center v. Netcom On-Line Communication Services, Inc. (Netcom), 907 F.Supp. 1361, 1365-66 (N.D.Cal.1995)</em>. <em class="original_content">See Napster,</em> <em class="original_content">239 F.3d at 1021</em>. In <em class="original_content">Netcom,</em> a disgruntled former Scientology minister posted allegedly infringing copies of Scientological works on an electronic bulletin board service. <em class="original_content">Netcom, 907 F.Supp. at 1365-66</em>. The messages were stored on the bulletin board operator's computer, then automatically copied onto Netcom's computer, and from there copied onto other computers comprising "a worldwide community" of electronic bulletin board systems. <em class="original_content">Id. at 1366-67 &amp; n. 4</em> (internal quotation omitted). <em class="original_content">Netcom</em> held that if plaintiffs [1172] could prove that Netcom knew or should have known that the minister infringed plaintiffs' copyrights, "Netcom [would] be liable for contributory infringement since its failure to simply cancel [the former minister's] infringing message and thereby stop an infringing copy from being distributed worldwide constitute[d] substantial participation in [the former minister's] public distribution of the message." <em class="original_content">Id. at 1374</em>.</p>
<p class="original_content">Although neither <em class="original_content">Napster</em> nor <em class="original_content">Netcom</em> expressly required a finding of intent, those cases are consistent with <em class="original_content">Grokster</em> because both decisions ruled that a service provider's knowing failure to prevent infringing actions could be the basis for imposing contributory liability. Under such circumstances, intent may be imputed. In addition, <em class="original_content">Napster</em> and <em class="original_content">Netcom</em> are consistent with the longstanding requirement that an actor's contribution to infringement must be material to warrant the imposition of contributory liability. <em class="original_content">Gershwin, 443 F.2d at 1162</em>. Both <em class="original_content">Napster</em> and <em class="original_content">Netcom</em> acknowledge that services or products that facilitate access to websites throughout the world can significantly magnify the effects of otherwise immaterial infringing activities. <em class="original_content">See Napster, 239 F.3d at 1022</em>; <em class="original_content">Netcom,</em> <em class="original_content">907 F.Supp. at 1375</em>. The Supreme Court has acknowledged that "[t]he argument for imposing indirect liability" is particularly "powerful" when individuals using the defendant's software could make a huge number of infringing downloads every day. <em class="original_content">Grokster,</em> <em class="original_content">545 U.S. at 929, 125 S.Ct. 2764</em>. Moreover, copyright holders cannot protect their rights in a meaningful way unless they can hold providers of such services or products accountable for their actions pursuant to a test such as that enunciated in <em class="original_content">Napster. See id. at 929-30, 125 S.Ct. 2764</em> ("When a widely shared service or product is used to commit infringement, it may be impossible to enforce rights in the protected work effectively against all direct infringers, the only practical alternative being to go against the distributor of the copying device for secondary liability on a theory of contributory or vicarious infringement."). Accordingly, we hold that a computer system operator can be held contributorily liable if it "has <em class="original_content">actual</em> knowledge that <em class="original_content">specific</em> infringing material is available using its system," <em class="original_content">Napster,</em> <em class="original_content">239 F.3d at 1022</em>, and can "take simple measures to prevent further damage" to copyrighted works, <em class="original_content">Netcom,</em> <em class="original_content">907 F.Supp. at 1375</em>, yet continues to provide access to infringing works.</p>
<p class="original_content">Here, the district court held that even assuming Google had actual knowledge of infringing material available on its system, Google did not materially contribute to infringing conduct because it did not undertake any substantial promotional or advertising efforts to encourage visits to infringing websites, nor provide a significant revenue stream to the infringing websites. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 854-56</em>. This analysis is erroneous. There is no dispute that Google substantially assists websites to distribute their infringing copies to a worldwide market and assists a worldwide audience of users to access infringing materials. We cannot discount the effect of such a service on copyright owners, even though Google's assistance is available to all websites, not just infringing ones. Applying our test, Google could be held contributorily liable if it had knowledge that infringing Perfect 10 images were available using its search engine, could take simple measures to prevent further damage to Perfect 10's copyrighted works, and failed to take such steps.</p>
<p class="original_content">The district court did not resolve the factual disputes over the adequacy of Perfect 10's notices to Google and Google's responses to these notices. Moreover, there are factual disputes over whether there are reasonable and feasible means for Google to refrain from providing access [1173] to infringing images. Therefore, we must remand this claim to the district court for further consideration whether Perfect 10 would likely succeed in establishing that Google was contributorily liable for in-line linking to full-size infringing images under the test enunciated today.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B13%5D" name="r%5B13%5D" class="footnote original_content">[13]</a></sup></small></p>
<div class="new-h2 scale1-3 original_content"><em class="original_content">B. Vicarious Infringement</em></div>
<p class="original_content">Perfect 10 also challenges the district court's conclusion that it is not likely to prevail on a theory of vicarious liability against Google. <em class="original_content">Perfect 10, 416 F.Supp.2d at 856-58</em>. <em class="original_content">Grokster</em> states that one "infringes vicariously by profiting from direct infringement while declining to exercise a right to stop or limit it." <em class="original_content">Grokster,</em> <em class="original_content">545 U.S. at 930, 125 S.Ct. 2764</em>. As this formulation indicates, to succeed in imposing vicarious liability, a plaintiff must establish that the defendant exercises the requisite control over the direct infringer and that the defendant derives a direct financial benefit from the direct infringement. <em class="original_content">See id. Grokster</em> further explains the "control" element of the vicarious liability test as the defendant's "right and ability to supervise the direct infringer." <em class="original_content">Id.</em> at <em class="original_content">930 n. 9, 125 S.Ct. 2764</em>. Thus, under <em class="original_content">Grokster,</em> a defendant exercises control over a direct infringer when he has both a legal right to stop or limit the directly infringing conduct, as well as the practical ability to do so.</p>
<p class="original_content">We evaluate Perfect 10's arguments that Google is vicariously liable in light of the direct infringement that is undisputed by the parties, namely, the third-party websites' reproduction, display, and distribution of unauthorized copies of Perfect 10's images on the Internet. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 852</em>; <em class="original_content">see supra</em> <em class="original_content">Section IV.A.</em> In order to prevail at this preliminary injunction stage, Perfect 10 must demonstrate a likelihood of success in establishing that Google has the right and ability to stop or limit the infringing activities of third party websites. In addition, Perfect 10 must establish a likelihood of proving that Google derives a direct financial benefit from such activities. Perfect 10 has not met this burden.</p>
<p class="original_content">With respect to the "control" element set forth in <em class="original_content">Grokster,</em> Perfect 10 has not demonstrated a likelihood of showing that Google has the legal right to stop or limit the direct infringement of third-party websites. <em class="original_content">See Grokster,</em> <em class="original_content">545 U.S. at 930, 125 S.Ct. 2764</em>. Unlike <em class="original_content">Fonovisa,</em> where by virtue of a "broad contract" with its vendors the defendant swap meet operators had the right to stop the vendors from selling counterfeit recordings on its premises, <em class="original_content">Fonovisa, 76 F.3d at 263</em>, Perfect 10 has not shown that Google has contracts with third-party websites that empower Google to stop or limit them from reproducing, displaying, and distributing infringing copies of Perfect 10's images on the Internet. Perfect 10 does point to Google's AdSense agreement, which states that Google reserves "the right to monitor and terminate partnerships with entities that violate others' copyright[s]." <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 858</em>. However, Google's right to terminate an AdSense partnership does not give Google the right to [1174] stop direct infringement by third-party websites. An infringing third-party website can continue to reproduce, display, and distribute its infringing copies of Perfect 10 images after its participation in the AdSense program has ended.</p>
<p class="original_content">Nor is Google similarly situated to Napster. Napster users infringed the plaintiffs' reproduction and distribution rights through their use of Napster's proprietary music-file sharing system. <em class="original_content">Napster,</em> <em class="original_content">239 F.3d at 1011-14</em>. There, the infringing conduct was the use of Napster's "service to download and upload copyrighted music." <em class="original_content">Id. at 1014</em> (internal quotation omitted). Because Napster had a closed system requiring user registration, and could terminate its users' accounts and block their access to the Napster system, Napster had the right and ability to prevent its users from engaging in the infringing activity of uploading file names and downloading Napster users' music files through the Napster system.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B14%5D" name="r%5B14%5D" class="footnote original_content">[14]</a></sup></small> <em class="original_content">Id. at 1023-24</em>. By contrast, Google cannot stop any of the third-party websites from reproducing, displaying, and distributing unauthorized copies of Perfect 10's images because that infringing conduct takes place on the third-party websites. Google cannot terminate those third-party websites or block their ability to "host and serve infringing full-size images" on the Internet. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 831</em>.</p>
<p class="original_content">Moreover, the district court found that Google lacks the practical ability to police the third-party websites' infringing conduct. <em class="original_content">Id. at 857-58</em>. Specifically, the court found that Google's supervisory power is limited because "Google's software lacks the ability to analyze every image on the [I]nternet, compare each image to all the other copyrighted images that exist in the world ... and determine whether a certain image on the web infringes someone's copyright." <em class="original_content">Id.</em> <em class="original_content">at 858</em>. The district court also concluded that Perfect 10's suggestions regarding measures Google could implement to prevent its web crawler from indexing infringing websites and to block access to infringing images were not workable. <em class="original_content">Id. at 858 n. 25</em>. Rather, the suggestions suffered from both "imprecision and overbreadth." <em class="original_content">Id.</em> We hold that these findings are not clearly erroneous. Without image-recognition technology, Google lacks the practical ability to police the infringing activities of third-party websites. This distinguishes Google from the defendants held liable in <em class="original_content">Napster</em> and <em class="original_content">Fonovisa. See Napster, 239 F.3d at 1023-24</em> (Napster had the ability to identify and police infringing conduct by searching its index for song titles); <em class="original_content">Fonovisa,</em> <em class="original_content">76 F.3d at 262</em> (swap meet operator had the ability to identify and police infringing activity by patrolling its premises).</p>
<p class="original_content">Perfect 10 argues that Google could manage its own operations to avoid [1175] indexing websites with infringing content and linking to third-party infringing sites. This is a claim of contributory liability, not vicarious liability. Although "the lines between direct infringement, contributory infringement, and vicarious liability are not clearly drawn," <em class="original_content">Sony,</em> <em class="original_content">464 U.S. at 435 n. 17, 104 S.Ct. 774</em> (internal quotation omitted), in general, contributory liability is based on the defendant's failure to stop its own actions which facilitate third-party infringement, while vicarious liability is based on the defendant's failure to cause a third party to stop its directly infringing activities. <em class="original_content">See, e.g., Ellison,</em> 357<em class="original_content"> F.3d at 1077-78</em>; <em class="original_content">Fonovisa, 76 F.3d at 261-64</em>. Google's failure to change its operations to avoid assisting websites to distribute their infringing content may constitute contributory liability, <em class="original_content">see supra</em> <em class="original_content">Section IV.A.</em> However, this failure is not the same as declining to exercise a right and ability to make third-party websites stop their direct infringement. We reject Perfect 10's efforts to blur this distinction.</p>
<p class="original_content">Because we conclude that Perfect 10 has not shown a likelihood of establishing Google's right and ability to stop or limit the directly infringing conduct of third-party websites, we agree with the district court's conclusion that Perfect 10 "has not established a likelihood of proving the [control] prong necessary for vicarious liability." <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 858</em>.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B15%5D" name="r%5B15%5D" class="footnote original_content">[15]</a></sup></small></p>
<div class="new-h2 scale1-3 original_content"><em class="original_content">C. Digital Millennium Copyright Act</em></div>
<p class="original_content">Google claims that it qualifies for the limitations on liability set forth in title II of the DMCA, <em class="original_content">17 U.S.C. § 512</em>. In particular, <em class="original_content">section 512(d)</em> limits the liability of a service provider "for infringement of copyright by reason of the provider referring or linking users to an online location containing infringing material or infringing activity, by using information location tools, including a directory, index, reference, pointer, or hypertext link" if the service provider meets certain criteria. We have held that the limitations on liability contained in <em class="original_content">17 U.S.C. § 512</em> protect secondary infringers as well as direct infringers. <em class="original_content">Napster,</em> <em class="original_content">239 F.3d at 1025</em>.</p>
<p class="original_content">The parties dispute whether Google meets the specified criteria. Perfect 10 claims that it sent qualifying notices to Google and Google did not act expeditiously to remove the infringing material. Google claims that Perfect 10's notices did not comply with the notice provisions of <em class="original_content">section 512</em> and were not adequate to inform Google of the location of the infringing images on the Internet or identify the underlying copyrighted work. Google also claims that it responded to all notices it received by investigating the webpages identified by Perfect 10 and suppressing links to any webpages that Google confirmed were infringing.</p>
<p class="original_content">Because the district court determined that Perfect 10 was unlikely to succeed on its contributory and vicarious liability claims, it did not reach Google's arguments under <em class="original_content">section 512</em>. In revisiting the question of Perfect 10's likelihood of success on its contributory infringement claims, the district court should also consider whether Google would likely succeed in showing that it was entitled to the limitations on injunctive relief provided by title II of the DMCA.</p>
<div class="new-h2 scale1-3 original_content">V</div>
<div class="new-h2 scale1-3 original_content">Amazon.com</div>
<p class="original_content">Perfect 10 claims that Amazon.com displays and distributes Perfect 10's copyrighted images and is also secondarily [1176] liable for the infringements of third-party websites and Amazon.com users. The district court concluded that Perfect 10 was unlikely to succeed in proving that Amazon.com was a direct infringer, because it merely in-line linked to the thumbnails on Google's servers and to the full-size images on third-party websites.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B16%5D" name="r%5B16%5D" class="footnote original_content">[16]</a></sup></small> <em class="original_content">Perfect 10 v. Amazon,</em> No. 05-4753, consolidated with 04-9484 (C.D.Cal. February 21, 2006) (order denying preliminary injunction). In addition, the district court concluded that Perfect 10's secondary infringement claims against Amazon.com were likely to fail because Amazon.com had no program analogous to AdSense, and thus did not provide any revenues to infringing sites. <em class="original_content">Id.</em> Finally, the district court determined that Amazon.com's right and ability to control the infringing conduct of third-party websites was substantially less than Google's. <em class="original_content">Id.</em> Therefore, the district court denied Perfect 10's motion for a preliminary injunction against Amazon.com. <em class="original_content">Id.</em></p>
<p class="original_content">We agree that Perfect 10 has not shown a likelihood that it would prevail on the merits of its claim that Amazon.com directly infringed its images. Amazon.com communicates to its users only the HTML instructions that direct the users' browsers to Google's computers (for thumbnail images) or to a third party's computer (for full-size infringing images). Therefore, Amazon.com does not display or distribute a copy of the thumbnails or full-size images to its users.</p>
<p class="original_content">We also agree with the district court's conclusion that Amazon.com does not have "the right and ability to supervise the infringing activity" of Google or third parties. The district court did not clearly err in concluding that Amazon.com lacked a direct financial interest in such activities. Therefore, Perfect 10's claim that Amazon.com is vicariously liable for third-party infringement is unlikely to succeed.</p>
<p class="original_content">However, the district court did not consider whether Amazon.com had "<em class="original_content">actual</em> knowledge that <em class="original_content">specific</em> infringing material is available using its system," <em class="original_content">Napster,</em> 239 F.3d at 1022 (emphasis in original), and could have "take[n] simple measures to prevent further damage" to copyrighted works, <em class="original_content">Netcom,</em> <em class="original_content">907 F.Supp. at 1375</em>, yet continued to provide access to infringing works. Perfect 10 has presented evidence that it notified Amazon.com that it was facilitating its users' access to infringing material. It is disputed whether the notices gave Amazon.com actual knowledge of specific infringing activities available using its system, and whether Amazon.com could have taken reasonable and feasible steps to refrain from providing access to such images, but failed to do so. Nor did the district court consider whether Amazon.com is entitled to limit its liability under title II of the DMCA. On remand, the district court should consider Amazon.com's potential contributory liability, as well as possible limitations on the scope of injunctive relief, in light of our rulings today.</p>
<div class="new-h2 scale1-3 original_content">VI</div>
<p class="original_content">We conclude that Google's fair use defense is likely to succeed at trial, and therefore we reverse the district court's determination that Google's thumbnail versions of Perfect 10's images likely constituted a direct infringement. The district court also erred in its secondary liability [1177] analysis because it failed to consider whether Google and Amazon.com knew of infringing activities yet failed to take reasonable and feasible steps to refrain from providing access to infringing images. Therefore we must also reverse the district court's holding that Perfect 10 was unlikely to succeed on the merits of its secondary liability claims. Due to this error, the district court did not consider whether Google and Amazon.com are entitled to the limitations on liability set forth in title II of the DMCA. The question whether Google and Amazon.com are secondarily liable, and whether they can limit that liability pursuant to title II of the DMCA, raise fact-intensive inquiries, potentially requiring further fact finding, and thus can best be resolved by the district court on remand. We therefore remand this matter to the district court for further proceedings consistent with this decision.</p>
<p class="original_content">Because the district court will need to reconsider the appropriate scope of injunctive relief after addressing these secondary liability issues, we do not address the parties' arguments regarding the scope of the injunction issued by the district court. For the same reason, we do not address the parties' dispute over whether the district court abused its discretion in determining that Perfect 10 satisfied the irreparable harm element of a preliminary injunction.</p>
<p class="original_content">Therefore, we reverse the district court's ruling and vacate the preliminary injunction regarding Google's use of thumbnail versions of Perfect 10's images.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B17%5D" name="r%5B17%5D" class="footnote original_content">[17]</a></sup></small> We reverse the district court's rejection of the claims that Google and Amazon.com are secondarily liable for infringement of Perfect 10's full-size images. We otherwise affirm the rulings of the district court. We remand this matter for further proceedings consistent with this opinion. Each party shall bear its own costs on appeal. <em class="original_content">See</em> <em class="original_content">FED. R. APP. P. 39(a)(4)</em>.</p>
<p class="original_content">AFFIRMED IN PART; REVERSED IN PART; REMANDED.</p>
<p class="original_content"><a href="#r%5B1%5D" name="%5B1%5D" class="footnote original_content">[1]</a> Google argues that we lack jurisdiction over the preliminary injunction to the extent it enforces unregistered copyrights. Registration is generally a jurisdictional prerequisite to a suit for copyright infringement. <em class="original_content">See</em> <em class="original_content">17 U.S.C. § 411</em>. But <em class="original_content">section 411</em> does not limit the remedies a court can grant. Rather, the Copyright Act gives courts broad authority to issue injunctive relief. <em class="original_content">See</em> <em class="original_content">17 U.S.C. § 502(a)</em>. Once a court has jurisdiction over an action for copyright infringement under <em class="original_content">section 411</em>, the court may grant injunctive relief to restrain infringement of any copyright, whether registered or unregistered. <em class="original_content">See, e.g., Olan Mills, Inc. v. Linn Photo Co.,</em> <em class="original_content">23 F.3d 1345, 1349</em> <em class="original_content">(8th Cir.1994)</em>; <em class="original_content">Pac. &amp; S. Co., Inc. v. Duncan,</em> <em class="original_content">744 F.2d 1490, 1499 n. 17 (11th Cir.1984)</em>. Because at least some of the Perfect 10 images at issue were registered, the district court did not err in determining that it could issue an order that covers unregistered works. Therefore, we have jurisdiction over the district court's decision and order.</p>
<p class="original_content"><a href="#r%5B2%5D" name="%5B2%5D" class="footnote original_content">[2]</a> The website publisher may not actually store the photographic images used on its webpages in its own computer, but may provide HTML instructions directing the user's browser to some further computer that stores the image. Because this distinction does not affect our analysis, for convenience, we will assume that the website publisher stores all images used on its webpages in the website publisher's own computer.</p>
<p class="original_content"><a href="#r%5B3%5D" name="%5B3%5D" class="footnote original_content">[3]</a> Generally, a "cache" is "a computer memory with very short access time used for storage of frequently or recently used instructions or data." <em class="original_content">United States v. Ziegler,</em> <em class="original_content">474 F.3d 1184, 1186 n. 3 (9th Cir.2007)</em> (quoting MERRIAM-WEBSTER'S COLLEGIATE DICTIONARY 171 (11th ed.2003)). There are two types of caches at issue in this case. A user's personal computer has an internal cache that saves copies of webpages and images that the user has recently viewed so that the user can more rapidly revisit these webpages and images. Google's computers also have a cache which serves a variety of purposes. Among other things, Google's cache saves copies of a large number of webpages so that Google's search engine can efficiently organize and index these webpages.</p>
<p class="original_content"><a href="#r%5B4%5D" name="%5B4%5D" class="footnote original_content">[4]</a> Perfect 10 argues that we are bound by the language and structure of title II of the DMCA in determining Google's liability for copyright infringement. We have noted that the DMCA does not change copyright law; rather, "Congress provided that [the DMCA's] limitations of liability apply if the provider is found to be liable under existing principles of law." <em class="original_content">Ellison,</em> <em class="original_content">357 F.3d at 1077</em> (emphasis and internal quotation omitted). As a result, "[c]laims against service providers for direct, contributory, or vicarious copyright infringement, therefore, are generally evaluated just as they would be in the non-online world." <em class="original_content">Id.</em>; <em class="original_content">see also</em> <em class="original_content">17 U.S.C. § 512(l)</em> ("The failure of a service provider's conduct to qualify for limitation of liability under this section shall not bear adversely upon the consideration of a defense by the service provider that the service provider's conduct is not infringing under this title or any other defense."). Therefore, we must consider Google's potential liability under the Copyright Act without reference to title II of the DMCA.</p>
<p class="original_content"><a href="#r%5B5%5D" name="%5B5%5D" class="footnote original_content">[5]</a> <em class="original_content">17 U.S.C. § 106</em> states, in pertinent part:</p>
<blockquote class="original_content">
<p class="original_content">Subject to <em class="original_content">sections 107</em> through <em class="original_content">122</em>, the owner of copyright under this title has the exclusive rights to do and to authorize any of the following:</p>
<p class="original_content">(1) to reproduce the copyrighted work in copies or phonorecords;</p>
<p class="original_content">....</p>
<p class="original_content">(3) to distribute copies or phonorecords of the copyrighted work to the public by sale or other transfer of ownership, or by rental, lease, or lending;</p>
<p class="original_content">....</p>
<p class="original_content">(5) in the case of literary, musical, dramatic, and choreographic works, pantomimes, and pictorial, graphic, or sculptural works, including the individual images of a motion picture or other audiovisual work, to display the copyrighted work publicly....</p>
</blockquote>
<p class="original_content"><a href="#r%5B6%5D" name="%5B6%5D" class="footnote original_content">[6]</a> Because Google initiates and controls the storage and communication of these thumbnail images, we do not address whether an entity that merely passively owns and manages an Internet bulletin board or similar system violates a copyright owner's display and distribution rights when the users of the bulletin board or similar system post infringing works. <em class="original_content">Cf. CoStar Group, Inc. v. LoopNet, Inc.,</em> <em class="original_content">373 F.3d 544 (4th Cir.2004)</em>.</p>
<p class="original_content"><a href="#r%5B7%5D" name="%5B7%5D" class="footnote original_content">[7]</a> Perfect 10 also argues that Google violates Perfect 10's right to display full-size images because Google's in-line linking meets the Copyright Act's definition of "to perform or display a work `publicly.'" <em class="original_content">17 U.S.C. § 101</em>. This phrase means "to transmit or otherwise communicate a performance or display of the work to ... the public, by means of any device or process, whether the members of the public capable of receiving the performance or display receive it in the same place or in separate places and at the same time or at different times." <em class="original_content">Id.</em> Perfect 10 is mistaken. Google's activities do not meet this definition because Google transmits or communicates only an address which directs a user's browser to the location where a copy of the full-size image is displayed. Google does not communicate a display of the work itself.</p>
<p class="original_content"><a href="#r%5B8%5D" name="%5B8%5D" class="footnote original_content">[8]</a> We reject at the outset Perfect 10's argument that providing access to infringing websites cannot be deemed transformative and is inherently not fair use. Perfect 10 relies on <em class="original_content">Video Pipeline, Inc. v. Buena Vista Home Entm't, Inc.,</em> <em class="original_content">342 F.3d 191 (3d Cir.2003)</em>, and <em class="original_content">Atari Games Corp. v. Nintendo of Am. Inc.,</em> <em class="original_content">975 F.2d 832, 843 (Fed.Cir.1992)</em>. But these cases, in essence, simply apply the general rule that a party claiming fair use must act in a manner generally compatible with principles of good faith and fair dealing. <em class="original_content">See Harper &amp; Row,</em> <em class="original_content">471 U.S. at 562-63</em>, <em class="original_content">105 S.Ct. 2218</em>. For this reason, a company whose business is based on providing scenes from copyrighted movies without authorization could not claim that it provided the same public benefit as the search engine in <em class="original_content">Kelly. See Video Pipeline,</em> <em class="original_content">342 F.3d at 198-200</em>. Similarly, a company whose overriding desire to replicate a competitor's computer game led it to obtain a copy of the competitor's source code from the Copyright Office under false pretenses could not claim fair use with respect to its purloined copy. <em class="original_content">Atari Games,</em> <em class="original_content">975 F.2d at 843</em>.</p>
<p class="original_content">Unlike the alleged infringers in <em class="original_content">Video Pipeline</em> and <em class="original_content">Atari Games,</em> who intentionally misappropriated the copyright owners' works for the purpose of commercial exploitation, Google is operating a comprehensive search engine that only incidentally indexes infringing websites. This incidental impact does not amount to an abuse of the good faith and fair dealing underpinnings of the fair use doctrine. Accordingly, we conclude that Google's inclusion of thumbnail images derived from infringing websites in its Internet-wide search engine activities does not preclude Google from raising a fair use defense.</p>
<p class="original_content"><a href="#r%5B9%5D" name="%5B9%5D" class="footnote original_content">[9]</a> Google contends that Perfect 10's photographic images are less creative and less deserving of protection than the images of the American West in <em class="original_content">Kelly</em> because Perfect 10 boasts of its un-retouched photos showing the natural beauty of its models. Having reviewed the record, we conclude that the district court's finding that Perfect 10's photographs "consistently reflect professional, skillful, and sometimes tasteful artistry" is not clearly erroneous. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 849 n. 15</em>. We agree with the district court that there is no basis for concluding that photos of the American West are more deserving of protection than photos of nude models. <em class="original_content">See id.</em></p>
<p class="original_content"><a href="#r%5B10%5D" name="%5B10%5D" class="footnote original_content">[10]</a> Because the district court concluded that Perfect 10 was likely to prevail on its direct infringement claim with respect to Google's use of thumbnails, but not with respect to its in-line linking to full-size images, the district court considered Google's potential secondary liability only on the second issue.</p>
<p class="original_content"><a href="#r%5B11%5D" name="%5B11%5D" class="footnote original_content">[11]</a> Google's activities do not meet the "inducement" test explained in <em class="original_content">Grokster</em> because Google has not promoted the use of its search engine specifically to infringe copyrights. <em class="original_content">See Grokster, 545 U.S. at 935-37, 125 S.Ct. 2764</em>. However, the Supreme Court in <em class="original_content">Grokster</em> did not suggest that a court must find inducement in order to impose contributory liability under common law principles.</p>
<p class="original_content"><a href="#r%5B12%5D" name="%5B12%5D" class="footnote original_content">[12]</a>&nbsp;"Cyberspace is a popular term for the world of electronic communications over computer networks." <em class="original_content">Religious Tech. Ctr. v. Netcom On-Line Commc'n Servs., Inc.,</em> <em class="original_content">907 F.Supp. 1361, 1365 n. 1 (N.D.Cal.1995)</em>.</p>
<p class="original_content"><a href="#r%5B13%5D" name="%5B13%5D" class="footnote original_content">[13]</a> Perfect 10 claims that Google materially contributed to infringement by linking to websites containing unauthorized passwords, which enabled Google users to access Perfect 10's website and make infringing copies of images. However, Perfect 10 points to no evidence that users logging onto the Perfect 10 site with unauthorized passwords infringed Perfect 10's exclusive rights under <em class="original_content">section 106</em>. In the absence of evidence that Google's actions led to any direct infringement, this argument does not assist Perfect 10 in establishing that it would prevail on the merits of its contributory liability claim. <em class="original_content">See Napster,</em> <em class="original_content">239 F.3d at 1013 n. 2</em> ("Secondary liability for copyright infringement does not exist in the absence of direct infringement by a third party.").</p>
<p class="original_content"><a href="#r%5B14%5D" name="%5B14%5D" class="footnote original_content">[14]</a> Napster's system included "Napster's MusicShare software, available free of charge from Napster's Internet site, and Napster's network servers and server-side software." <em class="original_content">Napster,</em> <em class="original_content">239 F.3d at 1011</em>. By downloading Napster's MusicShare software to the user's personal computer, and registering with the Napster system, a user could both upload and download music files. <em class="original_content">Id. at 1011-13</em>. If the Napster user uploaded a list of music files stored on the user's personal computer to the Napster system, such music files would be automatically available to other Napster users whenever the user was logged on to the Napster system. <em class="original_content">Id.</em> <em class="original_content">at 1012</em>. In addition, the Napster user could download music files directly from other users' personal computers. <em class="original_content">Id.</em> We explained the infringing conduct as "Napster users who upload file names to the [Napster] search index for others to copy violate plaintiffs' distribution rights. Napster users who download files [through the Napster system] containing copyrighted music violate plaintiffs' reproduction rights." <em class="original_content">Id.</em> <em class="original_content">at 1014</em>.</p>
<p class="original_content"><a href="#r%5B51%5D" name="%5B15%5D" class="footnote original_content">[15]</a> Having so concluded, we need not reach Perfect 10's argument that Google received a direct financial benefit.</p>
<p class="original_content"><a href="#r%5B16%5D" name="%5B16%5D" class="footnote original_content">[16]</a> Amazon.com states that it ended its relationship with Google on April 30, 2006. Perfect 10's action for preliminary injunction against Amazon.com is not moot, however, because Amazon.com has not established "that the allegedly wrongful behavior cannot reasonably be expected to recur." <em class="original_content">F.T.C. v. Affordable Media, LLC, 179 F.3d 1228, 1238 (9th Cir.1999)</em> (internal quotation omitted).</p>
<p class="original_content"><a href="#r%5B17%5D" name="%5B17%5D" class="footnote original_content">[17]</a> Because we vacate the injunction, Google's motion for stay of the injunction is moot.</p>
<div class="annotator-outer annotator-viewer annotator-hide">
  <ul class="annotator-widget annotator-listing"></ul>
</div><div class="annotator-outer annotator-editor annotator-hide"><form class="annotator-widget"><ul class="annotator-listing"><li class="annotator-item" style="display: none;"><textarea id="annotator-field-0" placeholder="Comments…" class="no_tinymce"></textarea></li><li class="annotator-item annotator-checkbox annotation_hidden_property" style="display: none;"><input id="show_annotation" placeholder="" type="checkbox" style="display: none;"><a id="remove_edit_quicklink">Remove edit?</a><a id="remove_edit_quicklink">Remove edit?</a><label for="show_annotation"></label></li><li class="annotator-item" style="display: none;"><input id="link" placeholder="http://"></li><li class="annotator-item annotator-checkbox2" style="display: none;"><input id="highlight-only-ff3800" placeholder="&amp;nbsp;" type="checkbox"><label for="highlight-only-ff3800">&nbsp;</label></li><li class="annotator-item" style="display: none;"><input id="annotator-field-4" placeholder=""></li><li class="annotator-item" style="display: none;"><input id="new_layer" placeholder="Enter Tag Name (optional)"><div></div><div></div></li></ul><div class="annotator-controls"><a href="#cancel" class="annotator-cancel"></a><a href="#" id="h2o_delete">Delete</a><a href="#save" class="annotator-save annotator-focus">Save</a></div></form></div><div class="annotator-adder" style="display: none;"><a href="#" id="adder_link" class="icon icon-adder-link" title="link">link</a><a href="#" id="adder_highlight" class="icon icon-adder-highlight" title="highlight">pencil</a><a id="adder_hide" class="icon icon-adder-hide" href="#" title="hide">eyeball</a><a id="adder_annotate" class="icon icon-adder-annotate" href="#" title="annotate">quote</a><button id="adder_button" type="button">Test Annotate</button></div><span data-id="1086050" class="annotation-bar-indicator" id="annotation-bar-indicator-1086050" style="top: 0px; height: 0px; display: none;"></span><a data-id="1086050" class="annotation-indicator icon icon-adder-show" id="annotation-indicator-1086050" style="top: 0px; display: none;"></a><span data-id="1086051" class="annotation-bar-indicator" id="annotation-bar-indicator-1086051" style="top: 28px; height: 17px; display: inline;"></span><a data-id="1086051" class="annotation-indicator icon icon-adder-highlight-only indicator-highlight-hex-ff3800" id="annotation-indicator-1086051" style="top: 28px; right: -31px;"></a><span data-id="1086052" class="annotation-bar-indicator" id="annotation-bar-indicator-1086052" style="top: 55px; height: 17px; display: inline;"></span><div data-id="1086052" class="annotation-indicator annotation-indicator-link" id="annotation-indicator-1086052" style="top: 55px;"><span class="icon icon-adder-link"></span><span class="edit-link"><a class="link" target="_blank" href="http://google.com">http://google.com</a><a href="#" class="icon icon-edit"></a></span></div><span data-id="1086053" class="annotation-bar-indicator" id="annotation-bar-indicator-1086053" style="top: 82px; height: 17px; display: inline;"></span><div data-id="1086053" class="annotation-indicator annotation-indicator-annotate" id="annotation-indicator-1086053" style="top: 82px;"><span class="icon icon-adder-annotate"></span><span class="edit-annotate">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ornare vehicula massa sed tristique. Etiam tempus felis magna, at fermentum tortor hendrerit a. Praesent pulvinar sapien in turpis condimentum porttitor. Donec et elit libero.<a href="#" class="icon icon-edit"></a></span></div></div></div>
</div>
<script type="text/javascript">

document.addEventListener("DOMContentLoaded", function() {
  export_functions.initiate_collage_data(34365, {
    data: {"highlights":{},"hide_tags":{},"highlight_only_highlights":["ff3800"],"show_text_edits":true,"show_comments":true,"show_links":true},
    annotations: {"a1086050":"{\"id\":1086050,\"collage_id\":34365,\"annotation\":\"\",\"created_at\":\"2015-05-12T17:23:31.408Z\",\"updated_at\":\"2015-05-12T17:23:31.408Z\",\"pushed_from_id\":null,\"cloned\":false,\"xpath_start\":\"/center[4]\",\"xpath_end\":\"/center[7]\",\"start_offset\":0,\"end_offset\":13,\"link\":null,\"hidden\":true,\"highlight_only\":null,\"annotated_item_id\":34365,\"annotated_item_type\":\"Collage\",\"error\":false,\"feedback\":false,\"discussion\":false,\"user_id\":null,\"layers\":[]}","a1086051":"{\"id\":1086051,\"collage_id\":34365,\"annotation\":\"\",\"created_at\":\"2015-05-12T19:40:23.075Z\",\"updated_at\":\"2015-05-12T19:40:23.075Z\",\"pushed_from_id\":null,\"cloned\":false,\"xpath_start\":\"/center[10]\",\"xpath_end\":\"/center[10]\",\"start_offset\":0,\"end_offset\":39,\"link\":null,\"hidden\":false,\"highlight_only\":\"ff3800\",\"annotated_item_id\":34365,\"annotated_item_type\":\"Collage\",\"error\":false,\"feedback\":false,\"discussion\":false,\"user_id\":null,\"layers\":[]}","a1086052":"{\"id\":1086052,\"collage_id\":34365,\"annotation\":\"\",\"created_at\":\"2015-05-12T19:41:23.846Z\",\"updated_at\":\"2015-05-12T19:41:23.846Z\",\"pushed_from_id\":null,\"cloned\":false,\"xpath_start\":\"/center[11]\",\"xpath_end\":\"/center[11]\",\"start_offset\":0,\"end_offset\":19,\"link\":\"http://google.com\",\"hidden\":false,\"highlight_only\":null,\"annotated_item_id\":34365,\"annotated_item_type\":\"Collage\",\"error\":false,\"feedback\":false,\"discussion\":false,\"user_id\":null,\"layers\":[]}","a1086053":"{\"id\":1086053,\"collage_id\":34365,\"annotation\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ornare vehicula massa sed tristique. Etiam tempus felis magna, at fermentum tortor hendrerit a. Praesent pulvinar sapien in turpis condimentum porttitor. Donec et elit libero.\",\"created_at\":\"2015-05-12T19:42:29.706Z\",\"updated_at\":\"2015-05-12T19:42:29.706Z\",\"pushed_from_id\":null,\"cloned\":false,\"xpath_start\":\"/center[12]\",\"xpath_end\":\"/center[12]\",\"start_offset\":0,\"end_offset\":25,\"link\":null,\"hidden\":false,\"highlight_only\":null,\"annotated_item_id\":34365,\"annotated_item_type\":\"Collage\",\"error\":false,\"feedback\":false,\"discussion\":false,\"user_id\":null,\"layers\":[]}"},
    layer_data: {},
    highlights_only: ["ff3800"]
  });
});

</script>

    <div class="page-break"></div>
</li>

		  <li class="playlist listitem level0 listitem68534" id="playlist_item_68534" data-itemid="68534">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68534 -->
  <!-- item.description <p> Stanford Law 769: Copyright & Content in the Digital Age (Spring 2015)<br></p> -->
  <!-- BOOP -->
  <!-- actual_object_type Playlist -->
  <!-- actual_object.id 20867 -->
  <!-- actual_object.description <p> Stanford Law 769: Copyright & Content in the Digital Age (Spring 2015)<br></p> -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h1 class="scale1-5 new-h1 scale1-4">
    <span class="number"><a name="playlist_item_68534">2</a></span>
    <span class="hcontent">Week 1 (April 1): Introduction </span>
  </h1>
  <div class="item_description scale0-8">
<p>&nbsp;Stanford Law 769: Copyright &amp; Content in the Digital Age (Spring 2015)<br></p>
</div>
  <div class="clear"></div>
    <section class="playlists">
      <ul>
          <li class="playlist listitem level1 listitem68315" id="playlist_item_68315" data-itemid="68315">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68315 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10072 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h2 class="scale1-5 new-h2 scale1-3">
    <span class="number"><a name="playlist_item_68315">2.1</a></span>
    <span class="hcontent">Mary Meeker, Internet Trends 2014</span>
  </h2>
    <a href="http://www.slideshare.net/kleinerperkins/internet-trends-2014-05-28-14-pdf?utm_source=slideshow02&amp;utm_medium=ssemail&amp;utm_campaign=share_slideshow_loggedout" target="_blank">http://www.slideshare.net/kleinerperkins/internet-trends-2014-05-28-14-pdf?utm_source=slideshow02&amp;utm_medium=ssemail&amp;utm_campaign=share_slideshow_loggedout</a>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
</li>

          <li class="playlist listitem level1 listitem68546" id="playlist_item_68546" data-itemid="68546">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68546 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Media -->
  <!-- actual_object.id 1880 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h2 class="scale1-5 new-h2 scale1-3">
    <span class="number"><a name="playlist_item_68546">2.2</a></span>
    <span class="hcontent">Authors Guild v. Google (S.D.N.Y. 2013) (fair use decision)</span>
  </h2>
    <a href="http://sskardal03.murk.law.harvard.edu:8000/medias/1880" target="_blank">http://sskardal03.murk.law.harvard.edu:8000/medias/1880</a>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
</li>

          <li class="playlist listitem level1 listitem68547" id="playlist_item_68547" data-itemid="68547">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68547 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Collage -->
  <!-- actual_object.id 30731 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h2 class="scale1-5 new-h2 scale1-3">
    <span class="number"><a name="playlist_item_68547">2.3</a></span>
    <span class="hcontent">3.13.6.2 Notes - Roberts-Horsfield v. Gedicks</span>
  </h2>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
    <div class="collage-content" id="collage30731" data-id="30731" style="padding-left: 0px;">
<div class="article"><div class="annotator-wrapper">
<p class="original_content"><strong class="original_content">NOTE</strong></p>
<p class="original_content"><em class="original_content">Affirmed,</em> 96 N.J. Eq. 384, 124 A. 92S (Ct. Err. &amp; App. 1924). How would the case be decided under §90 of the Restatement Second?</p>
<div class="annotator-outer annotator-viewer annotator-hide">
  <ul class="annotator-widget annotator-listing"></ul>
</div><div class="annotator-outer annotator-editor annotator-hide"><form class="annotator-widget"><ul class="annotator-listing"><li class="annotator-item" style="display: none;"><textarea id="annotator-field-6" placeholder="Comments…"></textarea></li><li class="annotator-item annotator-checkbox" style="display: none;"><input id="show_annotation" placeholder="" type="checkbox"><a id="remove_edit_quicklink">Remove edit?</a><label for="show_annotation"></label></li><li class="annotator-item" style="display: none;"><input id="link" placeholder="http://"></li><li class="annotator-item" style="display: none;"><input id="annotator-field-9" placeholder=""></li><li class="annotator-item" style="display: none;"><input id="new_layer" placeholder="Enter Tag Name (optional)"></li></ul><div class="annotator-controls"><a href="#cancel" class="annotator-cancel"></a><a href="#" id="h2o_delete">Delete</a><a href="#save" class="annotator-save annotator-focus">Save</a></div></form></div><div class="annotator-adder" style="display: none;"><a href="#" id="adder_link" class="icon icon-adder-link" title="link">link</a><a href="#" id="adder_highlight" class="icon icon-adder-highlight" title="highlight">pencil</a><a id="adder_hide" class="icon icon-adder-hide" href="#" title="hide">eyeball</a><a id="adder_annotate" class="icon icon-adder-annotate" href="#" title="annotate">quote</a><button id="adder_button" type="button">Test Annotate</button></div></div></div>
</div>
<script type="text/javascript">

document.addEventListener("DOMContentLoaded", function() {
  export_functions.initiate_collage_data(30731, {
    data: {"highlights":{},"hide_tags":{},"highlight_only_highlights":[]},
    annotations: {},
    layer_data: {},
    highlights_only: []
  });
});

</script>

    <div class="page-break"></div>
</li>

          <li class="playlist listitem level1 listitem68543" id="playlist_item_68543" data-itemid="68543">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68543 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Case -->
  <!-- actual_object.id 5098 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h2 class="scale1-5 new-h2 scale1-3">
    <span class="number"><a name="playlist_item_68543">2.4</a></span>
    <span class="hcontent">Perfect 10 (Plain)</span>
  </h2>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
    <p>Decision date: 2007-05-16</p>
<p>Author: Ikuta</p>
<p>Jurisdiction: United States Court of Appeals, Ninth Circuit.</p> 
<div class="article">
<center class="original_content">508 F.3d 1146</center>
<center class="original_content">
<div class="new-h2 scale1-3 original_content">PERFECT 10, INC., a California corporation, Plaintiff-Appellant,<br class="original_content">v.<br class="original_content">AMAZON.COM, INC., a corporation; A9.Com Inc.,</div>
</center>
<center class="original_content">No. 06-55405.</center>
<center class="original_content">No. 06-55406.</center>
<center class="original_content">No. 06-55425.</center>
<center class="original_content">No. 06-55759.</center>
<center class="original_content">No. 06-55854.</center>
<center class="original_content">No. 06-55877.</center>
<center class="original_content">United States Court of Appeals, Ninth Circuit.</center>
<center class="original_content">Argued and Submitted November 15, 2006.</center>
<center class="original_content">Filed May 16, 2007.</center>
<center class="original_content">Amended December 3, 2007.</center><p class="original_content">[1153] Russell J. Frackman and Jeffrey D. Goldman, Mitchell, Silberberg &amp; Knupp LLP, Los Angeles, CA, Jeffrey N. Mausner, Berman, Mausner &amp; Resser, Los Angeles, CA, Daniel J. Cooper, Perfect 10, Inc., Beverly Hills, CA, for plaintiff-appellant Perfect 10, Inc.</p><p class="original_content">Andrew P. Bridges and Jennifer A. Golinveaux, Winston &amp; Strawn LLP, San Francisco, CA, Gene C. Schaerr, Winston &amp; Strawn LLP, Washington, DC, for defendant-appellee and cross-appellant Google Inc.</p><p class="original_content">Mark T. Jansen &amp; Anthony J. Malutta, Townsend and Townsend and Crew LLP, San Francisco, CA, for defendants-appellees Amazon.com and A9.com, Inc.</p><p class="original_content">Fred von Lohmann, Electronic Frontier Foundation, San Francisco, CA, for amicus curiae Electronic Frontier Foundation, American Library Association, Medical Library [1154] Association, American Association of Law Libraries, Association of Research Libraries, and Special Libraries Association in support of Google Inc.</p><p class="original_content">Victor S. Perlman, of counsel, American Society of Media Photographers; Nancy E. Wolff, of counsel, Cowan, DeBaets, Abrahams &amp; Sheppard, LLP; Robert W. Clarida and Jason D. Sanders, Cowan, Liebowitz &amp; Latman, P.C., New York, NY, for amicus curiae American Society of Media Photographers, Inc., Picture Archive Council of America, Inc., British Association of Picture Libraries and Agencies, Inc., Stock Artists Alliance, The Graphic Artists Guild, American Society of Picture Professionals and National Press Photographers, in support of Perfect 10 on issue of Google's liability for the display of full-size images.</p><p class="original_content">Eric J. Schwartz and Steven J. Metalitz, Smith &amp; Metalitz LLP, Washington, DC, for amicus curiae Motion Picture Association of America, Inc. in support of Perfect 10.</p><p class="original_content">Jonathan Band, Jonathan Band PLLC, Washington, DC, for amicus curiae Net-Coalition, Computer and Communications Industry Association, U.S. Internet Service Provider Association, Consumer Electronics Association, Home Recording Rights Coalition, Information Technology Association of America, and Internet Commerce Coalition in support of Google Inc.</p><p class="original_content">Kenneth L. Doroshow and Linda J. Zirkelbach, Recording Industry Association of America, Washington, DC; Jacqueline C. Charlesworth, National Music Publishers' Association, Washington, DC; Robert W. Clarida, Richard S. Mandel and Jonathan Z. King, Cowan, Liebowitz &amp; Latman, P.C., New York, NY, for amicus curiae Recording Industry Association of America and National Music Publishers' Association in support of neither party.</p><p class="original_content">Appeal from the United States District Court for the Central District of California; A. Howard Matz, District Judge, Presiding. D.C. Nos. CV-05-04753-AHM, CV-04-09484-AHM.</p><p class="original_content">Before: CYNTHIA HOLCOMB HALL, HAWKINS, and SANDRA S. IKUTA, Circuit Judges.</p><p class="original_content">IKUTA, Circuit Judge:</p><p class="original_content">In this appeal, we consider a copyright owner's efforts to stop an Internet search engine from facilitating access to infringing images. Perfect 10, Inc. sued Google Inc., for infringing Perfect 10's copyrighted photographs of nude models, among other claims. Perfect 10 brought a similar action against Amazon.com and its subsidiary A9.com (collectively, "Amazon.com"). The district court preliminarily enjoined Google from creating and publicly displaying thumbnail versions of Perfect 10's images, <em class="original_content">Perfect 10 v. Google, Inc.,</em> 416 F.Supp.2d 828 (C.D.Cal.2006), but did not enjoin Google from linking to third-party websites that display infringing full-size versions of Perfect 10's images. Nor did the district court preliminarily enjoin Amazon.com from giving users access to information provided by Google. Perfect 10 and Google both appeal the district court's order. We have jurisdiction pursuant to <em class="original_content">28 U.S.C. § 1292(a)(1)</em>.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B1%5D" name="r%5B1%5D" class="original_content">[1]</a></sup></small></p><p class="original_content">[1155] The district court handled this complex case in a particularly thoughtful and skillful manner. Nonetheless, the district court erred on certain issues, as we will further explain below. We affirm in part, reverse in part, and remand.</p><div class="new-h2 scale1-3 original_content">I</div><div class="new-h2 scale1-3 original_content">Background</div><p class="original_content">Google's computers, along with millions of others, are connected to networks known collectively as the "Internet." "The Internet is a world-wide network of networks ... all sharing a common communications technology." <em class="original_content">Religious Tech. Ctr. v. Netcom On-Line Commc'n Servs., Inc.,</em> 923 F.Supp. 1231, 1238 n. 1 (N.D.Cal.1995). Computer owners can provide information stored on their computers to other users connected to the Internet through a medium called a webpage. A webpage consists of text interspersed with instructions written in Hypertext Markup Language ("HTML") that is stored in a computer. No images are stored on a webpage; rather, the HTML instructions on the webpage provide an address for where the images are stored, whether in the webpage publisher's computer or some other computer. In general, webpages are publicly available and can be accessed by computers connected to the Internet through the use of a web browser.</p><p class="original_content">Google operates a search engine, a software program that automatically accesses thousands of websites (collections of webpages) and indexes them within a database stored on Google's computers. When a Google user accesses the Google website and types in a search query, Google's software searches its database for websites responsive to that search query. Google then sends relevant information from its index of websites to the user's computer. Google's search engines can provide results in the form of text, images, or videos.</p><p class="original_content">The Google search engine that provides responses in the form of images is called "Google Image Search." In response to a search query, Google Image Search identifies text in its database responsive to the query and then communicates to users the images associated with the relevant text. Google's software cannot recognize and index the images themselves. Google Image Search provides search results as a webpage of small images called "thumbnails," which are stored in Google's servers. The thumbnail images are reduced, lower-resolution versions of full-sized images stored on third-party computers.</p><p class="original_content">When a user clicks on a thumbnail image, the user's browser program interprets HTML instructions on Google's webpage. These HTML instructions direct the user's browser to cause a rectangular area (a "window") to appear on the user's computer screen. The window has two separate areas of information. The browser fills the top section of the screen with information from the Google webpage, including the thumbnail image and text. The HTML instructions also give the user's browser the address of the website publisher's computer that stores the full-size version of the thumbnail.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B2%5D" name="r%5B2%5D" class="original_content">[2]</a></sup></small> By following [1156] the HTML instructions to access the third-party webpage, the user's browser connects to the website publisher's computer, downloads the full-size image, and makes the image appear at the bottom of the window on the user's screen. Google does not store the images that fill this lower part of the window and does not communicate the images to the user; Google simply provides HTML instructions directing a user's browser to access a third-party website. However, the top part of the window (containing the information from the Google webpage) appears to frame and comment on the bottom part of the window. Thus, the user's window appears to be filled with a single integrated presentation of the full-size image, but it is actually an image from a third-party website framed by information from Google's website. The process by which the webpage directs a user's browser to incorporate content from different computers into a single window is referred to as "in-line linking." <em class="original_content">Kelly v. Arriba Soft Corp.,</em> <em class="original_content">336 F.3d 811, 816 (9th Cir.2003)</em>. The term "framing" refers to the process by which information from one computer appears to frame and annotate the in-line linked content from another computer. <em class="original_content">Perfect 10,</em> 416 F.Supp.2d at 833-34.</p><p class="original_content">Google also stores webpage content in its cache.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B3%5D" name="r%5B3%5D" class="original_content">[3]</a></sup></small> For each cached webpage, Google's cache contains the text of the webpage as it appeared at the time Google indexed the page, but does not store images from the webpage. <em class="original_content">Id.</em> at 833. Google may provide a link to a cached webpage in response to a user's search query. However, Google's cache version of the webpage is not automatically updated when the webpage is revised by its owner. So if the webpage owner updates its webpage to remove the HTML instructions for finding an infringing image, a browser communicating directly with the webpage would not be able to access that image. However, Google's cache copy of the webpage would still have the old HTML instructions for the infringing image. Unless the owner of the computer changed the HTML address of the infringing image, or otherwise rendered the image unavailable, a browser accessing Google's cache copy of the website could still access the image where it is stored on the website publisher's computer. In other words, Google's cache copy could provide a user's browser with valid directions to an infringing image even though the updated webpage no longer includes that infringing image.</p><p class="original_content">In addition to its search engine operations, Google generates revenue through a business program called "AdSense." Under this program, the owner of a website can register with Google to become an AdSense "partner." The website owner then places HTML instructions on its webpages that signal Google's server to place advertising on the webpages that is relevant to the webpages' content. Google's computer program selects the advertising automatically by means of an algorithm. AdSense participants agree to share the revenues that flow from such advertising with Google.</p><p class="original_content">[1157] Google also generated revenues through an agreement with Amazon.com that allowed Amazon.com to in-line link to Google's search results. Amazon.com gave its users the impression that Amazon.com was providing search results, but Google communicated the search results directly to Amazon.com's users. Amazon.com routed users' search queries to Google and automatically transmitted Google's responses (i.e., HTML instructions for linking to Google's search results) back to its users.</p><p class="original_content">Perfect 10 markets and sells copyrighted images of nude models. Among other enterprises, it operates a subscription website on the Internet. Subscribers pay a monthly fee to view Perfect 10 images in a "members' area" of the site. Subscribers must use a password to log into the members' area. Google does not include these password-protected images from the members' area in Google's index or database. Perfect 10 has also licensed Fonestarz Media Limited to sell and distribute Perfect 10's reduced-size copyrighted images for download and use on cell phones.</p><p class="original_content">Some website publishers republish Perfect 10's images on the Internet without authorization. Once this occurs, Google's search engine may automatically index the webpages containing these images and provide thumbnail versions of images in response to user inquiries. When a user clicks on the thumbnail image returned by Google's search engine, the user's browser accesses the third-party webpage and in-line links to the full-sized infringing image stored on the website publisher's computer. This image appears, in its original context, on the lower portion of the window on the user's computer screen framed by information from Google's webpage.</p><p class="original_content"><em class="original_content">Procedural History.</em> In May 2001, Perfect 10 began notifying Google that its thumbnail images and in-line linking to the full-size images infringed Perfect 10's copyright. Perfect 10 continued to send these notices through 2005.</p><p class="original_content">On November 19, 2004, Perfect 10 filed an action against Google that included copyright infringement claims. This was followed by a similar action against Amazon.com on June 29, 2005. On July 1, 2005 and August 24, 2005, Perfect 10 sought a preliminary injunction to prevent Amazon.com and Google, respectively, from "copying, reproducing, distributing, publicly displaying, adapting or otherwise infringing, or contributing to the infringement" of Perfect 10's photographs; linking to websites that provide full-size infringing versions of Perfect 10's photographs; and infringing Perfect 10's username/password combinations.</p><p class="original_content">The district court consolidated the two actions and heard both preliminary injunction motions on November 7, 2005. The district court issued orders granting in part and denying in part the preliminary injunction against Google and denying the preliminary injunction against Amazon.com. Perfect 10 and Google cross-appealed the partial grant and partial denial of the preliminary injunction motion, and Perfect 10 appealed the denial of the preliminary injunction against Amazon.com. On June 15, 2006, the district court temporarily stayed the preliminary injunction.</p><div class="new-h2 scale1-3 original_content">II</div><div class="new-h2 scale1-3 original_content">Standard of Review</div><p class="original_content">We review the district court's grant or denial of a preliminary injunction for an abuse of discretion. <em class="original_content">A &amp; M Records, Inc. v. Napster, Inc.,</em> 239 F.3d 1004, 1013 (9th Cir.2001). The district court must support a preliminary injunction with findings of fact, which we review for clear error. <em class="original_content">Earth Island Inst. v. U.S. Forest Serv.,</em> 442 F.3d 1147, 1156 (9th Cir.2006). We review the district court's conclusions of law de novo. <em class="original_content">Napster,</em> 239 F.3d at 1013.</p><p class="original_content">[1158] <em class="original_content">Section 502(a)</em> of the Copyright Act authorizes a court to grant injunctive relief "on such terms as it may deem reasonable to prevent or restrain infringement of a copyright." <em class="original_content">17 U.S.C. § 502(a)</em>. "Preliminary injunctive relief is available to a party who demonstrates either: (1) a combination of probable success on the merits and the possibility of irreparable harm; or (2) that serious questions are raised and the balance of hardships tips in its favor. These two formulations represent two points on a sliding scale in which the required degree of irreparable harm increases as the probability of success decreases." <em class="original_content">Napster,</em> 239 F.3d at 1013 (internal quotation and citation omitted).</p><p class="original_content">Because Perfect 10 has the burden of showing a likelihood of success on the merits, the district court held that Perfect 10 also had the burden of demonstrating a likelihood of overcoming Google's fair use defense under <em class="original_content">17 U.S.C. § 107</em>. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 836-37</em>. This ruling was erroneous. At trial, the defendant in an infringement action bears the burden of proving fair use. <em class="original_content">See Campbell v. Acuff-Rose Music, Inc., 510 U.S. 569, 590, 114 S.Ct. 1164, 127 L.Ed.2d 500 (1994)</em>. Because "the burdens at the preliminary injunction stage track the burdens at trial," once the moving party has carried its burden of showing a likelihood of success on the merits, the burden shifts to the non-moving party to show a likelihood that its affirmative defense will succeed. <em class="original_content">Gonzales v. O Centro Espirita Beneficente Uniao do Vegetal,</em> 546 U.S. 418, 429, 126 S.Ct. 1211, 163 L.Ed.2d 1017 (2006); <em class="original_content">see also Abbott Labs. v. Andrx Pharms., Inc.,</em> 473 F.3d 1196, 1201 (Fed. Cir.2007) (to defeat a motion for preliminary injunctive relief in a patent infringement case, the non-moving party must establish a likelihood of success in proving its defenses of invalidity or unenforceability); <em class="original_content">PHG Techs., LLC v. St. John Cos.,</em> 469 F.3d 1361, 1365 (Fed.Cir.2006). Accordingly, once Perfect 10 has shown a likelihood of success on the merits, the burden shifts to Google to show a likelihood that its affirmative defenses will succeed.</p><p class="original_content">In addition to its fair use defense, Google also raises an affirmative defense under title II of the Digital Millennium Copyright Act ("DMCA"), <em class="original_content">17 U.S.C. § 512</em>. Congress enacted title II of the DMCA "to provide greater certainty to service providers concerning their legal exposure for infringements that may occur in the course of their activities." <em class="original_content">Ellison v. Robertson,</em> 357 F.3d 1072, 1076 (9th Cir. 2004) (internal quotation omitted).<em class="original_content"> Sections 512(a) through (d)</em> limit liability for (respectively): "(1) transitory digital network communications; (2) system caching; (3) information residing on systems or networks at the direction of users; and (4) information location tools." <em class="original_content">Id.</em> at 1077. A service provider that qualifies for such protection is not liable for monetary relief and may be subject only to the narrow injunctive relief set forth in <em class="original_content">section 512(j)</em>. <em class="original_content">17 U.S.C. § 512(a)</em>. If Perfect 10 demonstrates a likelihood of success on the merits, Google must show a likelihood of succeeding in its claim that it qualifies for protection under title II of the DMCA.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B4%5D" name="r%5B4%5D" class="original_content">[4]</a></sup></small>[1159]</p><div class="new-h2 scale1-3 original_content">III</div><div class="new-h2 scale1-3 original_content">Direct Infringement</div><p class="original_content">Perfect 10 claims that Google's search engine program directly infringes two exclusive rights granted to copyright holders: its display rights and its distribution rights.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B5%5D" name="r%5B5%5D" class="original_content">[5]</a></sup></small> "Plaintiffs must satisfy two requirements to present a prima facie case of direct infringement: (1) they must show ownership of the allegedly infringed material and (2) they must demonstrate that the alleged infringers violate at least one exclusive right granted to copyright holders under <em class="original_content">17 U.S.C. § 106</em>." <em class="original_content">Napster,</em> 239 F.3d at 1013; <em class="original_content">see</em> 17 U.S.C. § 501(a). Even if a plaintiff satisfies these two requirements and makes a prima facie case of direct infringement, the defendant may avoid liability if it can establish that its use of the images is a "fair use" as set forth in <em class="original_content">17 U.S.C. § 107. See Kelly, 336 F.3d at 817</em>.</p><p class="original_content">Perfect 10's ownership of at least some of the images at issue is not disputed. <em class="original_content">See Perfect 10,</em> 416 F.Supp.2d at 836.</p><p class="original_content">The district court held that Perfect 10 was likely to prevail in its claim that Google violated Perfect 10's display right with respect to the infringing thumbnails. <em class="original_content">Id.</em> at 844. However, the district court concluded that Perfect 10 was not likely to prevail on its claim that Google violated either Perfect 10's display or distribution right with respect to its full-size infringing images. <em class="original_content">Id.</em> at 844-45. We review these rulings for an abuse of discretion. <em class="original_content">Napster,</em> 239 F.3d at 1013.</p><div class="new-h2 scale1-3 original_content"><em class="original_content">A. Display Right</em></div><p class="original_content">In considering whether Perfect 10 made a prima facie case of violation of its display right, the district court reasoned that a computer owner that stores an image as electronic information and serves that electronic information directly to the user ("i.e., physically sending ones and zeroes over the [I]nternet to the user's browser," <em class="original_content">Perfect 10,</em> 416 F.Supp.2d at 839) is displaying the electronic information in violation of a copyright holder's exclusive display right. <em class="original_content">Id.</em> at 843-45; <em class="original_content">see</em> 17 U.S.C. § 106(5). Conversely, the owner of a computer that does not store and serve the electronic information to a user is not displaying that information, even if such owner in-line links to or frames the electronic information. <em class="original_content">Perfect 10,</em> 416 F.Supp.2d at 843-45. The district court referred to this test as the "server test." <em class="original_content">Id.</em> at 838-39.</p><p class="original_content">Applying the server test, the district court concluded that Perfect 10 was likely to succeed in its claim that Google's thumbnails constituted direct infringement but was unlikely to succeed in its claim that Google's in-line linking to full-size infringing images constituted a direct infringement. [1160] <em class="original_content">Id.</em> at 843-45. As explained below, because this analysis comports with the language of the Copyright Act, we agree with the district court's resolution of both these issues.</p><p class="original_content">We have not previously addressed the question when a computer displays a copyrighted work for purposes of <em class="original_content">section 106(5)</em>. <em class="original_content">Section 106(5)</em> states that a copyright owner has the exclusive right "to display the copyrighted work publicly." The Copyright Act explains that "display" means "to show a copy of it, either directly or by means of a film, slide, television image, or any other device or process...." <em class="original_content">17 U.S.C. § 101. Section 101</em> defines "copies" as "material objects, other than phonorecords, in which a work is fixed by any method now known or later developed, and from which the work can be perceived, reproduced, or otherwise communicated, either directly or with the aid of a machine or device." <em class="original_content">Id.</em> Finally, the Copyright Act provides that "[a] work is `fixed' in a tangible medium of expression when its embodiment in a copy or phonorecord, by or under the authority of the author, is sufficiently permanent or stable to permit it to be perceived, reproduced, or otherwise communicated for a period of more than transitory duration." <em class="original_content">Id.</em></p><p class="original_content">We must now apply these definitions to the facts of this case. A photographic image is a work that is "`fixed' in a tangible medium of expression," for purposes of the Copyright Act, when embodied (i.e., stored) in a computer's server (or hard disk, or other storage device). The image stored in the computer is the "copy" of the work for purposes of copyright law. <em class="original_content">See MAI Sys. Corp. v. Peak Computer, Inc.,</em> <em class="original_content">991 F.2d 511, 517-18 (9th Cir.1993)</em> (a computer makes a "copy" of a software program when it transfers the program from a third party's computer (or other storage device) into its own memory, because the copy of the program recorded in the computer is "fixed" in a manner that is "sufficiently permanent or stable to permit it to be perceived, reproduced, or otherwise communicated for a period of more than transitory duration" (quoting <em class="original_content">17 U.S.C. § 101</em>)). The computer owner shows a copy "by means of a ... device or process" when the owner uses the computer to fill the computer screen with the photographic image stored on that computer, or by communicating the stored image electronically to another person's computer. <em class="original_content">17 U.S.C. § 101</em>. In sum, based on the plain language of the statute, a person displays a photographic image by using a computer to fill a computer screen with a copy of the photographic image fixed in the computer's memory. There is no dispute that Google's computers store thumbnail versions of Perfect 10's copyrighted images and communicate copies of those thumbnails to Google's users.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B6%5D" name="r%5B6%5D" class="original_content">[6]</a></sup></small> Therefore, Perfect 10 has made a prima facie case that Google's communication of its stored thumbnail images directly infringes Perfect 10's display right.</p><p class="original_content">Google does not, however, display a copy of full-size infringing photographic images for purposes of the Copyright Act when Google frames in-line linked images that appear on a user's computer screen. Because Google's computers do not store the photographic images, Google does not have a copy of the images for purposes of the Copyright Act. In other words, Google does not have any "material objects ... in [1161] which a work is fixed ... and from which the work can be perceived, reproduced, or otherwise communicated" and thus cannot communicate a copy. <em class="original_content">17 U.S.C. § 101</em>.</p><p class="original_content">Instead of communicating a copy of the image, Google provides HTML instructions that direct a user's browser to a website publisher's computer that stores the full-size photographic image. Providing these HTML instructions is not equivalent to showing a copy. First, the HTML instructions are lines of text, not a photographic image. Second, HTML instructions do not themselves cause infringing images to appear on the user's computer screen. The HTML merely gives the address of the image to the user's browser. The browser then interacts with the computer that stores the infringing image. It is this interaction that causes an infringing image to appear on the user's computer screen. Google may facilitate the user's access to infringing images. However, such assistance raises only contributory liability issues, <em class="original_content">see Metro-Goldwyn-Mayer Studios, Inc. v. Grokster, Ltd.,</em> <em class="original_content">545 U.S. 913, 929-30, 125 S.Ct. 2764, 162 L.Ed.2d 781 (2005)</em>, <em class="original_content">Napster, 239 F.3d at 1019</em>, and does not constitute direct infringement of the copyright owner's display rights.</p><p class="original_content">Perfect 10 argues that Google displays a copy of the full-size images by framing the full-size images, which gives the impression that Google is showing the image within a single Google webpage. While in-line linking and framing may cause some computer users to believe they are viewing a single Google webpage, the Copyright Act, unlike the Trademark Act, does not protect a copyright holder against acts that cause consumer confusion. <em class="original_content">Cf.</em> <em class="original_content">15 U.S.C. § 1114(1)</em> (providing that a person who uses a trademark in a manner likely to cause confusion shall be liable in a civil action to the trademark registrant).<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B7%5D" name="r%5B7%5D" class="original_content">[7]</a></sup></small></p><p class="original_content">Nor does our ruling that a computer owner does not display a copy of an image when it communicates only the HTML address of the copy erroneously collapse the display right in <em class="original_content">section 106(5)</em> into the reproduction right set forth in <em class="original_content">section 106(1)</em>. Nothing in the Copyright Act prevents the various rights protected in <em class="original_content">section 106</em> from overlapping. Indeed, under some circumstances, more than one right must be infringed in order for an infringement claim to arise. For example, a "Game Genie" device that allowed a player to alter features of a Nintendo computer game did not infringe Nintendo's right to prepare derivative works because the Game Genie did not incorporate any portion of the game itself. <em class="original_content">See Lewis Galoob Toys, Inc. v. Nintendo of Am., Inc.,</em> 9<em class="original_content">64 F.2d 965, 967 (9th Cir.1992)</em>. We held that a copyright holder's right to create derivative works is not infringed unless the alleged derivative work "incorporate[s] a protected work in some concrete or permanent `form.'" <em class="original_content">Id.</em> In other words, in some contexts, the claimant must be able to claim infringement of its reproduction right in order to claim infringement of its right to prepare derivative works.</p><p class="original_content">[1162] Because Google's cache merely stores the text of webpages, our analysis of whether Google's search engine program potentially infringes Perfect 10's display and distribution rights is equally applicable to Google's cache. Perfect 10 is not likely to succeed in showing that a cached webpage that in-line links to full-size infringing images violates such rights. For purposes of this analysis, it is irrelevant whether cache copies direct a user's browser to third-party images that are no longer available on the third party's website, because it is the website publisher's computer, rather than Google's computer, that stores and displays the infringing image.</p><div class="new-h2 scale1-3 original_content"><em class="original_content">B. Distribution Right</em></div><p class="original_content">The district court also concluded that Perfect 10 would not likely prevail on its claim that Google directly infringed Perfect 10's right to distribute its full-size images. <em class="original_content">Perfect 10, 416 F.Supp.2d at 844-45</em>. The district court reasoned that distribution requires an "actual dissemination" of a copy. <em class="original_content">Id.</em> at 844. Because Google did not communicate the full-size images to the user's computer, Google did not distribute these images. <em class="original_content">Id.</em></p><p class="original_content">Again, the district court's conclusion on this point is consistent with the language of the Copyright Act. <em class="original_content">Section 106(3)</em> provides that the copyright owner has the exclusive right "to distribute copies or phonorecords of the copyrighted work to the public by sale or other transfer of ownership, or by rental, lease, or lending." <em class="original_content">17 U.S.C. § 106(3)</em>. As noted, "copies" means "material objects ... in which a work is fixed."<em class="original_content"> 17 U.S.C. § 101</em>. The Supreme Court has indicated that in the electronic context, copies may be distributed electronically. <em class="original_content">See N.Y. Times Co. v. Tasini, 533 U.S. 483, 498, 121 S.Ct. 2381, 150 L.Ed.2d 500 (2001)</em> (a computer database program distributed copies of newspaper articles stored in its computerized database by selling copies of those articles through its database service). Google's search engine communicates HTML instructions that tell a user's browser where to find full-size images on a website publisher's computer, but Google does not itself distribute copies of the infringing photographs. It is the website publisher's computer that distributes copies of the images by transmitting the photographic image electronically to the user's computer. As in <em class="original_content">Tasini,</em> the user can then obtain copies by downloading the photo or printing it.</p><p class="original_content">Perfect 10 incorrectly relies on <em class="original_content">Hotaling v. Church of Jesus Christ of Latter-Day Saints</em> and <em class="original_content">Napster</em> for the proposition that merely making images "available" violates the copyright owner's distribution right. <em class="original_content">Hotaling v. Church of Jesus Christ of Latter-Day Saints,</em> <em class="original_content">118 F.3d 199 (4th Cir.1997)</em>; <em class="original_content">Napster, 239 F.3d 1004</em>. <em class="original_content">Hotaling</em> held that the owner of a collection of works who makes them available to the public may be deemed to have distributed copies of the works. <em class="original_content">Hotaling,</em> <em class="original_content">118 F.3d at 203</em>. Similarly, the distribution rights of the plaintiff copyright owners were infringed by Napster <em class="original_content">users</em> (private individuals with collections of music files stored on their home computers) when they used the Napster software to make their collections available to all other Napster users. <em class="original_content">Napster, 239 F.3d at 1011-14</em>.</p><p class="original_content">This "deemed distribution" rule does not apply to Google. Unlike the participants in the Napster system or the library in <em class="original_content">Hotaling,</em> Google does not own a collection of Perfect 10's full-size images and does not communicate these images to the computers of people using Google's search engine. Though Google indexes these images, it does not have a collection of stored full-size images it makes available to the public. Google therefore cannot be deemed to distribute copies of these images under the reasoning of <em class="original_content">Napster</em> or [1163] <em class="original_content">Hotaling.</em> Accordingly, the district court correctly concluded that Perfect 10 does not have a likelihood of success in proving that Google violates Perfect 10's distribution rights with respect to full-size images.</p><div class="new-h2 scale1-3 original_content"><em class="original_content">C. Fair Use Defense</em></div><p class="original_content">Because Perfect 10 has succeeded in showing it would prevail in its prima facie case that Google's thumbnail images infringe Perfect 10's display rights, the burden shifts to Google to show that it will likely succeed in establishing an affirmative defense. Google contends that its use of thumbnails is a fair use of the images and therefore does not constitute an infringement of Perfect 10's copyright. <em class="original_content">See</em> <em class="original_content">17 U.S.C. § 107</em>.</p><p class="original_content">The fair use defense permits the use of copyrighted works without the copyright owner's consent under certain situations. The defense encourages and allows the development of new ideas that build on earlier ones, thus providing a necessary counterbalance to the copyright law's goal of protecting creators' work product. "From the infancy of copyright protection, some opportunity for fair use of copyrighted materials has been thought necessary to fulfill copyright's very purpose...." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 575, 114 S.Ct. 1164</em>. "The fair use doctrine thus `permits [and requires] courts to avoid rigid application of the copyright statute when, on occasion, it would stifle the very creativity which that law is designed to foster.'" <em class="original_content">Id</em>. at 577, 114 S.Ct. 1164 (quoting <em class="original_content">Stewart v. Abend, 495 U.S. 207, 236, 110 S.Ct. 1750, 109 L.Ed.2d 184 (1990))</em> (alteration in original).</p><p class="original_content">Congress codified the common law of fair use in <em class="original_content">17 U.S.C. § 107</em>, which provides:</p><blockquote class="original_content">
<p class="original_content">Notwithstanding the provisions of <em class="original_content">sections 106</em> and <em class="original_content">106A</em>, the fair use of a copyrighted work, including such use by reproduction in copies or phonorecords or by any other means specified by that section, for purposes such as criticism, comment, news reporting, teaching (including multiple copies for classroom use), scholarship, or research, is not an infringement of copyright. In determining whether the use made of a work in any particular case is a fair use the factors to be considered shall include—</p>
<p class="original_content">(1) the purpose and character of the use, including whether such use is of a commercial nature or is for nonprofit educational purposes;</p>
<p class="original_content">(2) the nature of the copyrighted work;</p>
<p class="original_content">(3) the amount and substantiality of the portion used in relation to the copyrighted work as a whole; and</p>
<p class="original_content">(4) the effect of the use upon the potential market for or value of the copyrighted work.</p>
<p class="original_content">The fact that a work is unpublished shall not itself bar a finding of fair use if such finding is made upon consideration of all the above factors.</p>
</blockquote><p class="original_content"><em class="original_content">17 U.S.C. § 107.</em></p><p class="original_content">We must be flexible in applying a fair use analysis; it "is not to be simplified with bright-line rules, for the statute, like the doctrine it recognizes, calls for case-by-case analysis.... Nor may the four statutory factors be treated in isolation, one from another. All are to be explored, and the results weighed together, in light of the purposes of copyright." <em class="original_content">Campbell, 510 U.S. at 577-78, 114 S.Ct. 1164; see also Kelly, 336 F.3d at 817-18.</em> The purpose of copyright law is "[t]o promote the Progress of Science and useful Arts," U.S. CONST. art. I, § 8, cl. 8, and to serve "`the welfare of the public.'" <em class="original_content">Sony Corp. of Am. v. Universal City Studios, Inc., 464 U.S. 417, 429 n. 10, 104 S.Ct. 774, 78 L.Ed.2d 574</em> (quoting H.R.Rep. No. 2222, 60th Cong., 2d Sess. 7 (1909)).</p><p class="original_content">[1164] In applying the fair use analysis in this case, we are guided by <em class="original_content">Kelly v. Arriba Soft Corp.,</em> which considered substantially the same use of copyrighted photographic images as is at issue here. <em class="original_content">See</em> 336 F.3d 811. In <em class="original_content">Kelly,</em> a photographer brought a direct infringement claim against Arriba, the operator of an Internet search engine. The search engine provided thumbnail versions of the photographer's images in response to search queries. <em class="original_content">Id.</em> at 815-16. We held that Arriba's use of thumbnail images was a fair use primarily based on the transformative nature of a search engine and its benefit to the public. <em class="original_content">Id.</em> at 818-22. We also concluded that Arriba's use of the thumbnail images did not harm the photographer's market for his image. <em class="original_content">Id.</em> at 821-22.</p><p class="original_content">In this case, the district court determined that Google's use of thumbnails was not a fair use and distinguished <em class="original_content">Kelly. Perfect 10,</em> 416 F.Supp.2d at 845-51. We consider these distinctions in the context of the four-factor fair use analysis.</p><p class="original_content"><em class="original_content">Purpose and character of the use.</em> The first factor, <em class="original_content">17 U.S.C. § 107(1)</em>, requires a court to consider "the purpose and character of the use, including whether such use is of a commercial nature or is for nonprofit educational purposes." The central purpose of this inquiry is to determine whether and to what extent the new work is "transformative." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 579, 114 S.Ct. 1164.</em> A work is "transformative" when the new work does not "merely supersede the objects of the original creation" but rather "adds something new, with a further purpose or different character, altering the first with new expression, meaning, or message." <em class="original_content">Id.</em> (internal quotation and alteration omitted). Conversely, if the new work "supersede[s] the use of the original," the use is likely not a fair use. <em class="original_content">Harper &amp; Row Publishers, Inc. v. Nation Enters., 471 U.S. 539, 550-51, 105 S.Ct. 2218, 85 L.Ed.2d 588 (1985)</em> (internal quotation omitted) (publishing the "heart" of an unpublished work and thus supplanting the copyright holder's first publication right was not a fair use); <em class="original_content">see also Wall Data Inc. v. L.A. County Sheriff's Dep't,</em> <em class="original_content">447 F.3d 769, 778-82 (9th Cir.2006)</em> (using a copy to save the cost of buying additional copies of a computer program was not a fair use).<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B8%5D" name="r%5B8%5D" class="original_content">[8]</a></sup></small></p><p class="original_content">As noted in <em class="original_content">Campbell,</em> a "transformative work" is one that alters the original work [1165] "with new expression, meaning, or message." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 579, 114 S.Ct. 1164</em>. "A use is considered transformative only where a defendant changes a plaintiff's copyrighted work or uses the plaintiff's copyrighted work in a different context such that the plaintiff's work is transformed into a new creation." <em class="original_content">Wall Data,</em> <em class="original_content">447 F.3d at 778</em>.</p><p class="original_content">Google's use of thumbnails is highly transformative. In <em class="original_content">Kelly,</em> we concluded that Arriba's use of thumbnails was transformative because "Arriba's use of the images serve[d] a different function than Kelly's use—improving access to information on the [I]nternet versus artistic expression." <em class="original_content">Kelly,</em> <em class="original_content">336 F.3d at 819</em>. Although an image may have been created originally to serve an entertainment, aesthetic, or informative function, a search engine transforms the image into a pointer directing a user to a source of information. Just as a "parody has an obvious claim to transformative value" because "it can provide social benefit, by shedding light on an earlier work, and, in the process, creating a new one," <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 579, 114 S.Ct. 1164</em>, a search engine provides social benefit by incorporating an original work into a new work, namely, an electronic reference tool. Indeed, a search engine may be more transformative than a parody because a search engine provides an entirely new use for the original work, while a parody typically has the same entertainment purpose as the original work. <em class="original_content">See, e.g., id. at 594-96, 114 S.Ct. 1164</em> (holding that 2 Live Crew's parody of "Oh, Pretty Woman" using the words "hairy woman" or "bald headed woman" was a transformative work, and thus constituted a fair use); <em class="original_content">Mattel, Inc. v. Walking Mountain Prods.,</em> 3<em class="original_content">53 F.3d 792, 796-98, 800-06 (9th Cir.2003)</em> (concluding that photos parodying Barbie by depicting "nude Barbie dolls juxtaposed with vintage kitchen appliances" was a fair use). In other words, a search engine puts images "in a different context" so that they are "transformed into a new creation." <em class="original_content">Wall Data, 447 F.3d at 778</em>.</p><p class="original_content">The fact that Google incorporates the entire Perfect 10 image into the search engine results does not diminish the transformative nature of Google's use. As the district court correctly noted, <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 848-49</em>, we determined in <em class="original_content">Kelly</em> that even making an exact copy of a work may be transformative so long as the copy serves a different function than the original work, <em class="original_content">Kelly,</em> <em class="original_content">336 F.3d at 818-19</em>. For example, the First Circuit has held that the republication of photos taken for a modeling portfolio in a newspaper was transformative because the photos served to inform, as well as entertain. <em class="original_content">See Nunez v. Caribbean Int'l News Corp.,</em> <em class="original_content">235 F.3d 18, 22-23 (1st Cir.2000)</em>. In contrast, duplicating a church's religious book for use by a different church was not transformative. <em class="original_content">See Worldwide Church of God v. Phila. Church of God, Inc.,</em> <em class="original_content">227 F.3d 1110, 1117 (9th Cir.2000)</em>. Nor was a broadcaster's simple retransmission of a radio broadcast over telephone lines transformative, where the original radio shows were given no "new expression, meaning, or message." <em class="original_content">Infinity Broad. Corp. v. Kirkwood,</em> <em class="original_content">150 F.3d 104, 108 (2d Cir.1998)</em>. Here, Google uses Perfect 10's images in a new context to serve a different purpose.</p><p class="original_content">The district court nevertheless determined that Google's use of thumbnail images was less transformative than Arriba's use of thumbnails in <em class="original_content">Kelly</em> because Google's use of thumbnails superseded Perfect 10's right to sell its reduced-size images for use on cell phones. <em class="original_content">See Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 849</em>. The district court stated that "mobile users can download and save the thumbnails displayed by Google Image Search onto their phones," and concluded "to the extent that users may choose to download free images to their [1166] phone rather than purchase [Perfect 10's] reduced-size images, Google's use supersedes [Perfect 10's]." <em class="original_content">Id.</em></p><p class="original_content">Additionally, the district court determined that the commercial nature of Google's use weighed against its transformative nature. <em class="original_content">Id.</em> Although <em class="original_content">Kelly</em> held that the commercial use of the photographer's images by Arriba's search engine was less exploitative than typical commercial use, and thus weighed only slightly against a finding of fair use, <em class="original_content">Kelly,</em> <em class="original_content">336 F.3d at 818-20</em>, the district court here distinguished <em class="original_content">Kelly</em> on the ground that some website owners in the AdSense program had infringing Perfect 10 images on their websites, <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 846-47</em>. The district court held that because Google's thumbnails "lead users to sites that directly benefit Google's bottom line," the AdSense program increased the commercial nature of Google's use of Perfect 10's images. <em class="original_content">Id.</em> at 847.</p><p class="original_content">In conducting our case-specific analysis of fair use in light of the purposes of copyright, <em class="original_content">Campbell,</em> 510 U.S. at 581, 114 S.Ct. 1164, we must weigh Google's superseding and commercial uses of thumbnail images against Google's significant transformative use, as well as the extent to which Google's search engine promotes the purposes of copyright and serves the interests of the public. Although the district court acknowledged the "truism that search engines such as Google Image Search provide great value to the public," <em class="original_content">Perfect 10,</em> 416 F.Supp.2d at 848-49, the district court did not expressly consider whether this value outweighed the significance of Google's superseding use or the commercial nature of Google's use. <em class="original_content">Id.</em> at 849. The Supreme Court, however, has directed us to be mindful of the extent to which a use promotes the purposes of copyright and serves the interests of the public. <em class="original_content">See Campbell,</em> <em class="original_content">510 U.S. at 579, 114 S.Ct. 1164</em>; <em class="original_content">Harper &amp; Row,</em> <em class="original_content">471 U.S. at 556-57, 105 S.Ct. 2218</em>; <em class="original_content">Sony,</em> <em class="original_content">464 U.S. at 431-32, 104 S.Ct. 774</em>.</p><p class="original_content">We note that the superseding use in this case is not significant at present: the district court did not find that any downloads for mobile phone use had taken place. <em class="original_content">See Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 849</em>. Moreover, while Google's use of thumbnails to direct users to AdSense partners containing infringing content adds a commercial dimension that did not exist in <em class="original_content">Kelly,</em> the district court did not determine that this commercial element was significant. <em class="original_content">See id.</em> <em class="original_content">at 848-49</em>. The district court stated that Google's AdSense programs as a whole contributed "$630 million, or 46% of total revenues" to Google's bottom line, but noted that this figure did not "break down the much smaller amount attributable to websites that contain infringing content." <em class="original_content">Id.</em> <em class="original_content">at 847 &amp; n. 12</em> (internal quotation omitted).</p><p class="original_content">We conclude that the significantly transformative nature of Google's search engine, particularly in light of its public benefit, outweighs Google's superseding and commercial uses of the thumbnails in this case. In reaching this conclusion, we note the importance of analyzing fair use flexibly in light of new circumstances. <em class="original_content">Sony,</em> 464 U.S. at 431-32, 104 S.Ct. 774; <em class="original_content">id.</em> at 448 n. 31, 104 S.Ct. 774 ("`[<em class="original_content">Section 107</em>] endorses the purpose and general scope of the judicial doctrine of fair use, but there is no disposition to freeze the doctrine in the statute, especially during a period of rapid technological change.'" (quoting H.R.Rep. No. 94-1476, p. 65-66 (1976), U.S.Code Cong. &amp; Admin. News 1976, p. 5680)). We are also mindful of the Supreme Court's direction that "the more transformative the new work, the less will be the significance of other factors, like commercialism, that may weigh against a finding of fair use." <em class="original_content">Campbell,</em> 510 U.S. at 579, 114 S.Ct. 1164.</p><p class="original_content">[1167] Accordingly, we disagree with the district court's conclusion that because Google's use of the thumbnails could supersede Perfect 10's cell phone download use and because the use was more commercial than Arriba's, this fair use factor weighed "slightly" in favor of Perfect 10. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 849</em>. Instead, we conclude that the transformative nature of Google's use is more significant than any incidental superseding use or the minor commercial aspects of Google's search engine and website. Therefore, this factor weighs heavily in favor of Google.</p><p class="original_content"><em class="original_content">The nature of the copyrighted work.</em> With respect to the second factor, "the nature of the copyrighted work," <em class="original_content">17 U.S.C. § 107(2)</em>, our decision in <em class="original_content">Kelly</em> is directly on point. There we held that the photographer's images were "creative in nature" and thus "closer to the core of intended copyright protection than are more fact-based works." <em class="original_content">Kelly,</em> <em class="original_content">336 F.3d at 820</em> (internal quotation omitted). However, because the photos appeared on the Internet before Arriba used thumbnail versions in its search engine results, this factor weighed only slightly in favor of the photographer. <em class="original_content">Id.</em></p><p class="original_content">Here, the district court found that Perfect 10's images were creative but also previously published. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 850</em>. The right of first publication is "the author's right to control the first public appearance of his expression." <em class="original_content">Harper &amp; Row,</em> <em class="original_content">471 U.S. at 564, 105 S.Ct. 2218</em>. Because this right encompasses "the choices of when, where, and in what form first to publish a work," <em class="original_content">id.,</em> an author exercises and exhausts this one-time right by publishing the work in any medium. <em class="original_content">See, e.g., Batjac Prods. Inc. v. Good-Times Home Video Corp.,</em> <em class="original_content">160 F.3d 1223, 1235 (9th Cir.1998)</em> (noting, in the context of the common law right of first publication, that such a right "does not entail multiple first publication rights in every available medium"). Once Perfect 10 has exploited this commercially valuable right of first publication by putting its images on the Internet for paid subscribers, Perfect 10 is no longer entitled to the enhanced protection available for an unpublished work. Accordingly the district court did not err in holding that this factor weighed only slightly in favor of Perfect 10.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B9%5D" name="r%5B9%5D" class="original_content">[9]</a></sup></small> <em class="original_content">See Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 849-50</em>.</p><p class="original_content"><em class="original_content">The amount and substantiality of the portion used.</em> "The third factor asks whether the amount and substantiality of the portion used in relation to the copyrighted work as a whole ... are reasonable in relation to the purpose of the copying." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 586, 114 S.Ct. 1164</em> (internal quotation omitted); <em class="original_content">see also</em> <em class="original_content">17 U.S.C. § 107(3)</em>. In <em class="original_content">Kelly,</em> we held Arriba's use of the entire photographic image was reasonable in light of the purpose of a search engine. <em class="original_content">Kelly, 336 F.3d at 821</em>. Specifically, we noted, "[i]t was necessary for Arriba to copy the entire image to allow users to recognize the image and decide whether to pursue more information about the image or the originating [website]. If Arriba only copied part of the image, it would be more difficult to identify it, thereby reducing the usefulness of the visual search engine." <em class="original_content">Id.</em> Accordingly, we concluded that this factor did not weigh in favor of either [1168] party. <em class="original_content">Id.</em> Because the same analysis applies to Google's use of Perfect 10's image, the district court did not err in finding that this factor favored neither party.</p><p class="original_content"><em class="original_content">Effect of use on the market.</em> The fourth factor is "the effect of the use upon the potential market for or value of the copyrighted work." <em class="original_content">17 U.S.C. § 107(4)</em>. In <em class="original_content">Kelly,</em> we concluded that Arriba's use of the thumbnail images did not harm the market for the photographer's full-size images. <em class="original_content">See Kelly,</em> <em class="original_content">336 F.3d at 821-22</em>. We reasoned that because thumbnails were not a substitute for the full-sized images, they did not harm the photographer's ability to sell or license his full-sized images. <em class="original_content">Id.</em> The district court here followed <em class="original_content">Kelly</em>'s reasoning, holding that Google's use of thumbnails did not hurt Perfect 10's market for full-size images. <em class="original_content">See Perfect 10,</em> 416 F.Supp.2d at 850-51. We agree.</p><p class="original_content">Perfect 10 argues that the district court erred because the likelihood of market harm may be presumed if the intended use of an image is for commercial gain. However, this presumption does not arise when a work is transformative because "market substitution is at least less certain, and market harm may not be so readily inferred." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 591, 114 S.Ct. 1164</em>. As previously discussed, Google's use of thumbnails for search engine purposes is highly transformative, and so market harm cannot be presumed.</p><p class="original_content">Perfect 10 also has a market for reduced-size images, an issue not considered in <em class="original_content">Kelly.</em> The district court held that "Google's use of thumbnails likely does harm the potential market for the downloading of [Perfect 10's] reduced-size images onto cell phones." <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 851</em> (emphasis omitted). The district court reasoned that persons who can obtain Perfect 10 images free of charge from Google are less likely to pay for a download, and the availability of Google's thumbnail images would harm Perfect 10's market for cell phone downloads. <em class="original_content">Id.</em> As we discussed above, the district court did not make a finding that Google users have downloaded thumbnail images for cell phone use. This potential harm to Perfect 10's market remains hypothetical. We conclude that this factor favors neither party.</p><p class="original_content">Having undertaken a case-specific analysis of all four factors, we now weigh these factors together "in light of the purposes of copyright." <em class="original_content">Campbell,</em> <em class="original_content">510 U.S. at 578, 114 S.Ct. 1164</em>; <em class="original_content">see also Kelly,</em> <em class="original_content">336 F.3d at 818</em> ("We must balance[the <em class="original_content">section 107</em>] factors in light of the objectives of copyright law, rather than view them as definitive or determinative tests."). In this case, Google has put Perfect 10's thumbnail images (along with millions of other thumbnail images) to a use fundamentally different than the use intended by Perfect 10. In doing so, Google has provided a significant benefit to the public. Weighing this significant transformative use against the unproven use of Google's thumbnails for cell phone downloads, and considering the other fair use factors, all in light of the purpose of copyright, we conclude that Google's use of Perfect 10's thumbnails is a fair use. Because the district court here "found facts sufficient to evaluate each of the statutory factors ... [we] need not remand for further factfinding." <em class="original_content">Harper &amp; Row, 471 U.S. at 560, 105 S.Ct. 2218</em> (internal quotation omitted). We conclude that Google is likely to succeed in proving its fair use defense and, accordingly, we vacate the preliminary injunction regarding Google's use of thumbnail images.</p><div class="new-h2 scale1-3 original_content">IV</div><div class="new-h2 scale1-3 original_content">Secondary Liability for Copyright Infringement</div><p class="original_content">We now turn to the district court's ruling that Google is unlikely to be secondarily [1169] liable for its in-line linking to infringing full-size images under the doctrines of contributory and vicarious infringement.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B10%5D" name="r%5B10%5D" class="original_content">[10]</a></sup></small> The district court ruled that Perfect 10 did not have a likelihood of proving success on the merits of either its contributory infringement or vicarious infringement claims with respect to the full-size images. <em class="original_content">See Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 856, 858</em>. In reviewing the district court's conclusions, we are guided by the Supreme Court's recent interpretation of secondary liability, namely: "[o]ne infringes contributorily by intentionally inducing or encouraging direct infringement, and infringes vicariously by profiting from direct infringement while declining to exercise a right to stop or limit it." <em class="original_content">Grokster,</em> <em class="original_content">545 U.S. at 930, 125 S.Ct. 2764</em> (internal citations omitted).</p><p class="original_content"><em class="original_content">Direct Infringement by Third Parties.</em> As a threshold matter, before we examine Perfect 10's claims that Google is secondarily liable, Perfect 10 must establish that there has been direct infringement by third parties. <em class="original_content">See Napster,</em> <em class="original_content">239 F.3d at 1013 n. 2</em> ("Secondary liability for copyright infringement does not exist in the absence of direct infringement by a third party.").</p><p class="original_content">Perfect 10 alleges that third parties directly infringed its images in three ways. First, Perfect 10 claims that third-party websites directly infringed its copyright by reproducing, displaying, and distributing unauthorized copies of Perfect 10's images. Google does not dispute this claim on appeal.</p><p class="original_content">Second, Perfect 10 claims that individual users of Google's search engine directly infringed Perfect 10's copyrights by storing full-size infringing images on their computers. We agree with the district court's conclusion that Perfect 10 failed to provide sufficient evidence to support this claim. <em class="original_content">See Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 852</em>. There is no evidence in the record directly establishing that users of Google's search engine have stored infringing images on their computers, and the district court did not err in declining to infer the existence of such evidence.</p><p class="original_content">Finally, Perfect 10 contends that users who link to infringing websites automatically make "cache" copies of full-size images and thereby directly infringe Perfect 10's reproduction right. The district court rejected this argument, holding that any such reproduction was likely a "fair use." <em class="original_content">Id.</em> <em class="original_content">at 852 n. 17</em>. The district court reasoned that "[l]ocal caching by the browsers of individual users is noncommercial, transformative, and no more than necessary to achieve the objectives of decreasing network latency and minimizing unnecessary bandwidth usage (essential to the [I]nternet). It has a minimal impact on the potential market for the original work...." <em class="original_content">Id.</em> We agree; even assuming such automatic copying could constitute direct infringement, it is a fair use in this context. The copying function performed automatically by a user's computer to assist in accessing the Internet is a transformative use. Moreover, as noted by the district court, a cache copies no more than is necessary to assist the user in Internet use. It is designed to enhance an individual's computer use, not to supersede the copyright holders' exploitation of their works. Such automatic background copying has no more than a minimal effect on Perfect 10's rights, but a considerable public benefit. Because the four fair use factors weigh in favor of concluding that [1170] cache copying constitutes a fair use, Google has established a likelihood of success on this issue. Accordingly, Perfect 10 has not carried its burden of showing that users' cache copies of Perfect 10's full-size images constitute direct infringement.</p><p class="original_content">Therefore, we must assess Perfect 10's arguments that Google is secondarily liable in light of the direct infringement that is undisputed by the parties: third-party websites' reproducing, displaying, and distributing unauthorized copies of Perfect 10's images on the Internet. <em class="original_content">Id.</em> <em class="original_content">at 852</em>.</p><div class="new-h2 scale1-3 original_content"><em class="original_content">A. Contributory Infringement</em></div><p class="original_content">In order for Perfect 10 to show it will likely succeed in its contributory liability claim against Google, it must establish that Google's activities meet the definition of contributory liability recently enunciated in <em class="original_content">Grokster.</em> Within the general rule that "[o]ne infringes contributorily by intentionally inducing or encouraging direct infringement," <em class="original_content">Grokster, 545 U.S. at 930, 125 S.Ct. 2764</em>, the Court has defined two categories of contributory liability: "Liability under our jurisprudence may be predicated on actively encouraging (or inducing) infringement through specific acts (as the Court's opinion develops) or on distributing a product distributees use to infringe copyrights, if the product is not capable of `substantial' or `commercially significant' noninfringing uses." <em class="original_content">Id. at 942, 125 S.Ct. 2764</em> (Ginsburg, J., concurring) (quoting <em class="original_content">Sony,</em> <em class="original_content">464 U.S. at 442, 104 S.Ct. 774</em>); <em class="original_content">see also id.</em> <em class="original_content">at 936-37, 125 S.Ct. 2764</em>.</p><p class="original_content">Looking at the second category of liability identified by the Supreme Court (distributing products), Google relies on <em class="original_content">Sony,</em> <em class="original_content">464 U.S. at 442, 104 S.Ct. 774</em>, to argue that it cannot be held liable for contributory infringement because liability does not arise from the mere sale of a product (even with knowledge that consumers would use the product to infringe) if the product is capable of substantial non-infringing use. Google argues that its search engine service is such a product. Assuming the principle enunciated in <em class="original_content">Sony</em> is applicable to the operation of Google's search engine, then Google cannot be held liable for contributory infringement <em class="original_content">solely</em> because the design of its search engine facilitates such infringement. <em class="original_content">Grokster, 545 U.S. at 931-32, 125 S.Ct. 2764</em> (discussing <em class="original_content">Sony,</em> <em class="original_content">464 U.S. 417, 104 S.Ct. 774, 78 L.Ed.2d 574</em>). Nor can Google be held liable solely because it did not develop technology that would enable its search engine to automatically avoid infringing images. <em class="original_content">See id.</em> <em class="original_content">at 939 n. 12, 125 S.Ct. 2764</em>. However, Perfect 10 has not based its claim of infringement on the design of Google's search engine and the <em class="original_content">Sony</em> rule does not immunize Google from other sources of contributory liability. <em class="original_content">See id. at 933-34, 125 S.Ct. 2764</em>.</p><p class="original_content">We must next consider whether Google could be held liable under the first category of contributory liability identified by the Supreme Court, that is, the liability that may be imposed for intentionally encouraging infringement through specific acts.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B11%5D" name="r%5B11%5D" class="original_content">[11]</a></sup></small> <em class="original_content">Grokster</em> tells us that contribution to infringement must be intentional for liability to arise. <em class="original_content">Grokster,</em> <em class="original_content">545 U.S. at 930, 125 S.Ct. 2764</em>. However, <em class="original_content">Grokster</em> also directs us to analyze contributory liability in light of "rules of fault-based liability derived from the common law," <em class="original_content">id.</em> <em class="original_content">at 934-35, 125 S.Ct. 2764</em>, and [1171] common law principles establish that intent may be imputed. "Tort law ordinarily imputes to an actor the intention to cause the natural and probable consequences of his conduct." <em class="original_content">DeVoto v. Pac. Fid. Life Ins. Co., 618 F.2d 1340, 1347 (9th Cir. 1980)</em>; <em class="original_content">RESTATEMENT (SECOND) OF TORTS § 8A cmt. b (1965)</em> ("If the actor knows that the consequences are certain, or substantially certain, to result from his act, and still goes ahead, he is treated by the law as if he had in fact desired to produce the result."). When the Supreme Court imported patent law's "staple article of commerce doctrine" into the copyright context, it also adopted these principles of imputed intent. <em class="original_content">Grokster,</em> <em class="original_content">545 U.S. at 932, 125 S.Ct. 2764</em> ("The [staple article of commerce] doctrine was devised to identify instances in which it may be presumed from distribution of an article in commerce that the distributor intended the article to be used to infringe another's patent, and so may justly be held liable for that infringement."). Therefore, under <em class="original_content">Grokster,</em> an actor may be contributorily liable for intentionally encouraging direct infringement if the actor knowingly takes steps that are substantially certain to result in such direct infringement.</p><p class="original_content">Our tests for contributory liability are consistent with the rule set forth in <em class="original_content">Grokster.</em> We have adopted the general rule set forth in <em class="original_content">Gershwin Publishing Corp. v. Columbia Artists Management, Inc.,</em> namely: "one who, with knowledge of the infringing activity, induces, causes or materially contributes to the infringing conduct of another, may be held liable as a `contributory' infringer," <em class="original_content">443 F.2d 1159, 1162 (2d Cir.1971)</em>. <em class="original_content">See Ellison, 357 F.3d at 1076</em>; <em class="original_content">Napster,</em> <em class="original_content">239 F.3d at 1019</em>; <em class="original_content">Fonovisa, Inc. v. Cherry Auction, Inc.,</em> <em class="original_content">76 F.3d 259, 264 (9th Cir.1996)</em>.</p><p class="original_content">We have further refined this test in the context of cyberspace<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B12%5D" name="r%5B12%5D" class="original_content">[12]</a></sup></small> to determine when contributory liability can be imposed on a provider of Internet access or services. <em class="original_content">See Napster,</em> <em class="original_content">239 F.3d at 1019-20</em>. In <em class="original_content">Napster,</em> we considered claims that the operator of an electronic file sharing system was contributorily liable for assisting individual users to swap copyrighted music files stored on their home computers with other users of the system. <em class="original_content">Napster, 239 F.3d at 1011-13, 1019-22</em>. We stated that "if a computer system operator learns of specific infringing material available on his system and fails to purge such material from the system, the operator knows of and contributes to direct infringement." <em class="original_content">Id.</em> <em class="original_content">at 1021</em>. Because Napster knew of the availability of infringing music files, assisted users in accessing such files, and failed to block access to such files, we concluded that Napster materially contributed to infringement. <em class="original_content">Id. at 1022</em>.</p><p class="original_content">The <em class="original_content">Napster</em> test for contributory liability was modeled on the influential district court decision in <em class="original_content">Religious Technology Center v. Netcom On-Line Communication Services, Inc. (Netcom), 907 F.Supp. 1361, 1365-66 (N.D.Cal.1995)</em>. <em class="original_content">See Napster,</em> <em class="original_content">239 F.3d at 1021</em>. In <em class="original_content">Netcom,</em> a disgruntled former Scientology minister posted allegedly infringing copies of Scientological works on an electronic bulletin board service. <em class="original_content">Netcom, 907 F.Supp. at 1365-66</em>. The messages were stored on the bulletin board operator's computer, then automatically copied onto Netcom's computer, and from there copied onto other computers comprising "a worldwide community" of electronic bulletin board systems. <em class="original_content">Id. at 1366-67 &amp; n. 4</em> (internal quotation omitted). <em class="original_content">Netcom</em> held that if plaintiffs [1172] could prove that Netcom knew or should have known that the minister infringed plaintiffs' copyrights, "Netcom [would] be liable for contributory infringement since its failure to simply cancel [the former minister's] infringing message and thereby stop an infringing copy from being distributed worldwide constitute[d] substantial participation in [the former minister's] public distribution of the message." <em class="original_content">Id. at 1374</em>.</p><p class="original_content">Although neither <em class="original_content">Napster</em> nor <em class="original_content">Netcom</em> expressly required a finding of intent, those cases are consistent with <em class="original_content">Grokster</em> because both decisions ruled that a service provider's knowing failure to prevent infringing actions could be the basis for imposing contributory liability. Under such circumstances, intent may be imputed. In addition, <em class="original_content">Napster</em> and <em class="original_content">Netcom</em> are consistent with the longstanding requirement that an actor's contribution to infringement must be material to warrant the imposition of contributory liability. <em class="original_content">Gershwin, 443 F.2d at 1162</em>. Both <em class="original_content">Napster</em> and <em class="original_content">Netcom</em> acknowledge that services or products that facilitate access to websites throughout the world can significantly magnify the effects of otherwise immaterial infringing activities. <em class="original_content">See Napster, 239 F.3d at 1022</em>; <em class="original_content">Netcom,</em> <em class="original_content">907 F.Supp. at 1375</em>. The Supreme Court has acknowledged that "[t]he argument for imposing indirect liability" is particularly "powerful" when individuals using the defendant's software could make a huge number of infringing downloads every day. <em class="original_content">Grokster,</em> <em class="original_content">545 U.S. at 929, 125 S.Ct. 2764</em>. Moreover, copyright holders cannot protect their rights in a meaningful way unless they can hold providers of such services or products accountable for their actions pursuant to a test such as that enunciated in <em class="original_content">Napster. See id. at 929-30, 125 S.Ct. 2764</em> ("When a widely shared service or product is used to commit infringement, it may be impossible to enforce rights in the protected work effectively against all direct infringers, the only practical alternative being to go against the distributor of the copying device for secondary liability on a theory of contributory or vicarious infringement."). Accordingly, we hold that a computer system operator can be held contributorily liable if it "has <em class="original_content">actual</em> knowledge that <em class="original_content">specific</em> infringing material is available using its system," <em class="original_content">Napster,</em> <em class="original_content">239 F.3d at 1022</em>, and can "take simple measures to prevent further damage" to copyrighted works, <em class="original_content">Netcom,</em> <em class="original_content">907 F.Supp. at 1375</em>, yet continues to provide access to infringing works.</p><p class="original_content">Here, the district court held that even assuming Google had actual knowledge of infringing material available on its system, Google did not materially contribute to infringing conduct because it did not undertake any substantial promotional or advertising efforts to encourage visits to infringing websites, nor provide a significant revenue stream to the infringing websites. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 854-56</em>. This analysis is erroneous. There is no dispute that Google substantially assists websites to distribute their infringing copies to a worldwide market and assists a worldwide audience of users to access infringing materials. We cannot discount the effect of such a service on copyright owners, even though Google's assistance is available to all websites, not just infringing ones. Applying our test, Google could be held contributorily liable if it had knowledge that infringing Perfect 10 images were available using its search engine, could take simple measures to prevent further damage to Perfect 10's copyrighted works, and failed to take such steps.</p><p class="original_content">The district court did not resolve the factual disputes over the adequacy of Perfect 10's notices to Google and Google's responses to these notices. Moreover, there are factual disputes over whether there are reasonable and feasible means for Google to refrain from providing access [1173] to infringing images. Therefore, we must remand this claim to the district court for further consideration whether Perfect 10 would likely succeed in establishing that Google was contributorily liable for in-line linking to full-size infringing images under the test enunciated today.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B13%5D" name="r%5B13%5D" class="original_content">[13]</a></sup></small></p><div class="new-h2 scale1-3 original_content"><em class="original_content">B. Vicarious Infringement</em></div><p class="original_content">Perfect 10 also challenges the district court's conclusion that it is not likely to prevail on a theory of vicarious liability against Google. <em class="original_content">Perfect 10, 416 F.Supp.2d at 856-58</em>. <em class="original_content">Grokster</em> states that one "infringes vicariously by profiting from direct infringement while declining to exercise a right to stop or limit it." <em class="original_content">Grokster,</em> <em class="original_content">545 U.S. at 930, 125 S.Ct. 2764</em>. As this formulation indicates, to succeed in imposing vicarious liability, a plaintiff must establish that the defendant exercises the requisite control over the direct infringer and that the defendant derives a direct financial benefit from the direct infringement. <em class="original_content">See id. Grokster</em> further explains the "control" element of the vicarious liability test as the defendant's "right and ability to supervise the direct infringer." <em class="original_content">Id.</em> at <em class="original_content">930 n. 9, 125 S.Ct. 2764</em>. Thus, under <em class="original_content">Grokster,</em> a defendant exercises control over a direct infringer when he has both a legal right to stop or limit the directly infringing conduct, as well as the practical ability to do so.</p><p class="original_content">We evaluate Perfect 10's arguments that Google is vicariously liable in light of the direct infringement that is undisputed by the parties, namely, the third-party websites' reproduction, display, and distribution of unauthorized copies of Perfect 10's images on the Internet. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 852</em>; <em class="original_content">see supra</em> <em class="original_content">Section IV.A.</em> In order to prevail at this preliminary injunction stage, Perfect 10 must demonstrate a likelihood of success in establishing that Google has the right and ability to stop or limit the infringing activities of third party websites. In addition, Perfect 10 must establish a likelihood of proving that Google derives a direct financial benefit from such activities. Perfect 10 has not met this burden.</p><p class="original_content">With respect to the "control" element set forth in <em class="original_content">Grokster,</em> Perfect 10 has not demonstrated a likelihood of showing that Google has the legal right to stop or limit the direct infringement of third-party websites. <em class="original_content">See Grokster,</em> <em class="original_content">545 U.S. at 930, 125 S.Ct. 2764</em>. Unlike <em class="original_content">Fonovisa,</em> where by virtue of a "broad contract" with its vendors the defendant swap meet operators had the right to stop the vendors from selling counterfeit recordings on its premises, <em class="original_content">Fonovisa, 76 F.3d at 263</em>, Perfect 10 has not shown that Google has contracts with third-party websites that empower Google to stop or limit them from reproducing, displaying, and distributing infringing copies of Perfect 10's images on the Internet. Perfect 10 does point to Google's AdSense agreement, which states that Google reserves "the right to monitor and terminate partnerships with entities that violate others' copyright[s]." <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 858</em>. However, Google's right to terminate an AdSense partnership does not give Google the right to [1174] stop direct infringement by third-party websites. An infringing third-party website can continue to reproduce, display, and distribute its infringing copies of Perfect 10 images after its participation in the AdSense program has ended.</p><p class="original_content">Nor is Google similarly situated to Napster. Napster users infringed the plaintiffs' reproduction and distribution rights through their use of Napster's proprietary music-file sharing system. <em class="original_content">Napster,</em> <em class="original_content">239 F.3d at 1011-14</em>. There, the infringing conduct was the use of Napster's "service to download and upload copyrighted music." <em class="original_content">Id. at 1014</em> (internal quotation omitted). Because Napster had a closed system requiring user registration, and could terminate its users' accounts and block their access to the Napster system, Napster had the right and ability to prevent its users from engaging in the infringing activity of uploading file names and downloading Napster users' music files through the Napster system.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B14%5D" name="r%5B14%5D" class="original_content">[14]</a></sup></small> <em class="original_content">Id. at 1023-24</em>. By contrast, Google cannot stop any of the third-party websites from reproducing, displaying, and distributing unauthorized copies of Perfect 10's images because that infringing conduct takes place on the third-party websites. Google cannot terminate those third-party websites or block their ability to "host and serve infringing full-size images" on the Internet. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 831</em>.</p><p class="original_content">Moreover, the district court found that Google lacks the practical ability to police the third-party websites' infringing conduct. <em class="original_content">Id. at 857-58</em>. Specifically, the court found that Google's supervisory power is limited because "Google's software lacks the ability to analyze every image on the [I]nternet, compare each image to all the other copyrighted images that exist in the world ... and determine whether a certain image on the web infringes someone's copyright." <em class="original_content">Id.</em> <em class="original_content">at 858</em>. The district court also concluded that Perfect 10's suggestions regarding measures Google could implement to prevent its web crawler from indexing infringing websites and to block access to infringing images were not workable. <em class="original_content">Id. at 858 n. 25</em>. Rather, the suggestions suffered from both "imprecision and overbreadth." <em class="original_content">Id.</em> We hold that these findings are not clearly erroneous. Without image-recognition technology, Google lacks the practical ability to police the infringing activities of third-party websites. This distinguishes Google from the defendants held liable in <em class="original_content">Napster</em> and <em class="original_content">Fonovisa. See Napster, 239 F.3d at 1023-24</em> (Napster had the ability to identify and police infringing conduct by searching its index for song titles); <em class="original_content">Fonovisa,</em> <em class="original_content">76 F.3d at 262</em> (swap meet operator had the ability to identify and police infringing activity by patrolling its premises).</p><p class="original_content">Perfect 10 argues that Google could manage its own operations to avoid [1175] indexing websites with infringing content and linking to third-party infringing sites. This is a claim of contributory liability, not vicarious liability. Although "the lines between direct infringement, contributory infringement, and vicarious liability are not clearly drawn," <em class="original_content">Sony,</em> <em class="original_content">464 U.S. at 435 n. 17, 104 S.Ct. 774</em> (internal quotation omitted), in general, contributory liability is based on the defendant's failure to stop its own actions which facilitate third-party infringement, while vicarious liability is based on the defendant's failure to cause a third party to stop its directly infringing activities. <em class="original_content">See, e.g., Ellison,</em> 357<em class="original_content"> F.3d at 1077-78</em>; <em class="original_content">Fonovisa, 76 F.3d at 261-64</em>. Google's failure to change its operations to avoid assisting websites to distribute their infringing content may constitute contributory liability, <em class="original_content">see supra</em> <em class="original_content">Section IV.A.</em> However, this failure is not the same as declining to exercise a right and ability to make third-party websites stop their direct infringement. We reject Perfect 10's efforts to blur this distinction.</p><p class="original_content">Because we conclude that Perfect 10 has not shown a likelihood of establishing Google's right and ability to stop or limit the directly infringing conduct of third-party websites, we agree with the district court's conclusion that Perfect 10 "has not established a likelihood of proving the [control] prong necessary for vicarious liability." <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 858</em>.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B15%5D" name="r%5B15%5D" class="original_content">[15]</a></sup></small></p><div class="new-h2 scale1-3 original_content"><em class="original_content">C. Digital Millennium Copyright Act</em></div><p class="original_content">Google claims that it qualifies for the limitations on liability set forth in title II of the DMCA, <em class="original_content">17 U.S.C. § 512</em>. In particular, <em class="original_content">section 512(d)</em> limits the liability of a service provider "for infringement of copyright by reason of the provider referring or linking users to an online location containing infringing material or infringing activity, by using information location tools, including a directory, index, reference, pointer, or hypertext link" if the service provider meets certain criteria. We have held that the limitations on liability contained in <em class="original_content">17 U.S.C. § 512</em> protect secondary infringers as well as direct infringers. <em class="original_content">Napster,</em> <em class="original_content">239 F.3d at 1025</em>.</p><p class="original_content">The parties dispute whether Google meets the specified criteria. Perfect 10 claims that it sent qualifying notices to Google and Google did not act expeditiously to remove the infringing material. Google claims that Perfect 10's notices did not comply with the notice provisions of <em class="original_content">section 512</em> and were not adequate to inform Google of the location of the infringing images on the Internet or identify the underlying copyrighted work. Google also claims that it responded to all notices it received by investigating the webpages identified by Perfect 10 and suppressing links to any webpages that Google confirmed were infringing.</p><p class="original_content">Because the district court determined that Perfect 10 was unlikely to succeed on its contributory and vicarious liability claims, it did not reach Google's arguments under <em class="original_content">section 512</em>. In revisiting the question of Perfect 10's likelihood of success on its contributory infringement claims, the district court should also consider whether Google would likely succeed in showing that it was entitled to the limitations on injunctive relief provided by title II of the DMCA.</p><div class="new-h2 scale1-3 original_content">V</div><div class="new-h2 scale1-3 original_content">Amazon.com</div><p class="original_content">Perfect 10 claims that Amazon.com displays and distributes Perfect 10's copyrighted images and is also secondarily [1176] liable for the infringements of third-party websites and Amazon.com users. The district court concluded that Perfect 10 was unlikely to succeed in proving that Amazon.com was a direct infringer, because it merely in-line linked to the thumbnails on Google's servers and to the full-size images on third-party websites.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B16%5D" name="r%5B16%5D" class="original_content">[16]</a></sup></small> <em class="original_content">Perfect 10 v. Amazon,</em> No. 05-4753, consolidated with 04-9484 (C.D.Cal. February 21, 2006) (order denying preliminary injunction). In addition, the district court concluded that Perfect 10's secondary infringement claims against Amazon.com were likely to fail because Amazon.com had no program analogous to AdSense, and thus did not provide any revenues to infringing sites. <em class="original_content">Id.</em> Finally, the district court determined that Amazon.com's right and ability to control the infringing conduct of third-party websites was substantially less than Google's. <em class="original_content">Id.</em> Therefore, the district court denied Perfect 10's motion for a preliminary injunction against Amazon.com. <em class="original_content">Id.</em></p><p class="original_content">We agree that Perfect 10 has not shown a likelihood that it would prevail on the merits of its claim that Amazon.com directly infringed its images. Amazon.com communicates to its users only the HTML instructions that direct the users' browsers to Google's computers (for thumbnail images) or to a third party's computer (for full-size infringing images). Therefore, Amazon.com does not display or distribute a copy of the thumbnails or full-size images to its users.</p><p class="original_content">We also agree with the district court's conclusion that Amazon.com does not have "the right and ability to supervise the infringing activity" of Google or third parties. The district court did not clearly err in concluding that Amazon.com lacked a direct financial interest in such activities. Therefore, Perfect 10's claim that Amazon.com is vicariously liable for third-party infringement is unlikely to succeed.</p><p class="original_content">However, the district court did not consider whether Amazon.com had "<em class="original_content">actual</em> knowledge that <em class="original_content">specific</em> infringing material is available using its system," <em class="original_content">Napster,</em> 239 F.3d at 1022 (emphasis in original), and could have "take[n] simple measures to prevent further damage" to copyrighted works, <em class="original_content">Netcom,</em> <em class="original_content">907 F.Supp. at 1375</em>, yet continued to provide access to infringing works. Perfect 10 has presented evidence that it notified Amazon.com that it was facilitating its users' access to infringing material. It is disputed whether the notices gave Amazon.com actual knowledge of specific infringing activities available using its system, and whether Amazon.com could have taken reasonable and feasible steps to refrain from providing access to such images, but failed to do so. Nor did the district court consider whether Amazon.com is entitled to limit its liability under title II of the DMCA. On remand, the district court should consider Amazon.com's potential contributory liability, as well as possible limitations on the scope of injunctive relief, in light of our rulings today.</p><div class="new-h2 scale1-3 original_content">VI</div><p class="original_content">We conclude that Google's fair use defense is likely to succeed at trial, and therefore we reverse the district court's determination that Google's thumbnail versions of Perfect 10's images likely constituted a direct infringement. The district court also erred in its secondary liability [1177] analysis because it failed to consider whether Google and Amazon.com knew of infringing activities yet failed to take reasonable and feasible steps to refrain from providing access to infringing images. Therefore we must also reverse the district court's holding that Perfect 10 was unlikely to succeed on the merits of its secondary liability claims. Due to this error, the district court did not consider whether Google and Amazon.com are entitled to the limitations on liability set forth in title II of the DMCA. The question whether Google and Amazon.com are secondarily liable, and whether they can limit that liability pursuant to title II of the DMCA, raise fact-intensive inquiries, potentially requiring further fact finding, and thus can best be resolved by the district court on remand. We therefore remand this matter to the district court for further proceedings consistent with this decision.</p><p class="original_content">Because the district court will need to reconsider the appropriate scope of injunctive relief after addressing these secondary liability issues, we do not address the parties' arguments regarding the scope of the injunction issued by the district court. For the same reason, we do not address the parties' dispute over whether the district court abused its discretion in determining that Perfect 10 satisfied the irreparable harm element of a preliminary injunction.</p><p class="original_content">Therefore, we reverse the district court's ruling and vacate the preliminary injunction regarding Google's use of thumbnail versions of Perfect 10's images.<small class="original_content"><sup class="scale0-8 original_content"><a href="#%5B17%5D" name="r%5B17%5D" class="original_content">[17]</a></sup></small> We reverse the district court's rejection of the claims that Google and Amazon.com are secondarily liable for infringement of Perfect 10's full-size images. We otherwise affirm the rulings of the district court. We remand this matter for further proceedings consistent with this opinion. Each party shall bear its own costs on appeal. <em class="original_content">See</em> <em class="original_content">FED. R. APP. P. 39(a)(4)</em>.</p><p class="original_content">AFFIRMED IN PART; REVERSED IN PART; REMANDED.</p><p class="original_content"><a href="#r%5B1%5D" name="%5B1%5D" class="original_content">[1]</a> Google argues that we lack jurisdiction over the preliminary injunction to the extent it enforces unregistered copyrights. Registration is generally a jurisdictional prerequisite to a suit for copyright infringement. <em class="original_content">See</em> <em class="original_content">17 U.S.C. § 411</em>. But <em class="original_content">section 411</em> does not limit the remedies a court can grant. Rather, the Copyright Act gives courts broad authority to issue injunctive relief. <em class="original_content">See</em> <em class="original_content">17 U.S.C. § 502(a)</em>. Once a court has jurisdiction over an action for copyright infringement under <em class="original_content">section 411</em>, the court may grant injunctive relief to restrain infringement of any copyright, whether registered or unregistered. <em class="original_content">See, e.g., Olan Mills, Inc. v. Linn Photo Co.,</em> <em class="original_content">23 F.3d 1345, 1349</em> <em class="original_content">(8th Cir.1994)</em>; <em class="original_content">Pac. &amp; S. Co., Inc. v. Duncan,</em> <em class="original_content">744 F.2d 1490, 1499 n. 17 (11th Cir.1984)</em>. Because at least some of the Perfect 10 images at issue were registered, the district court did not err in determining that it could issue an order that covers unregistered works. Therefore, we have jurisdiction over the district court's decision and order.</p><p class="original_content"><a href="#r%5B2%5D" name="%5B2%5D" class="original_content">[2]</a> The website publisher may not actually store the photographic images used on its webpages in its own computer, but may provide HTML instructions directing the user's browser to some further computer that stores the image. Because this distinction does not affect our analysis, for convenience, we will assume that the website publisher stores all images used on its webpages in the website publisher's own computer.</p><p class="original_content"><a href="#r%5B3%5D" name="%5B3%5D" class="original_content">[3]</a> Generally, a "cache" is "a computer memory with very short access time used for storage of frequently or recently used instructions or data." <em class="original_content">United States v. Ziegler,</em> <em class="original_content">474 F.3d 1184, 1186 n. 3 (9th Cir.2007)</em> (quoting MERRIAM-WEBSTER'S COLLEGIATE DICTIONARY 171 (11th ed.2003)). There are two types of caches at issue in this case. A user's personal computer has an internal cache that saves copies of webpages and images that the user has recently viewed so that the user can more rapidly revisit these webpages and images. Google's computers also have a cache which serves a variety of purposes. Among other things, Google's cache saves copies of a large number of webpages so that Google's search engine can efficiently organize and index these webpages.</p><p class="original_content"><a href="#r%5B4%5D" name="%5B4%5D" class="original_content">[4]</a> Perfect 10 argues that we are bound by the language and structure of title II of the DMCA in determining Google's liability for copyright infringement. We have noted that the DMCA does not change copyright law; rather, "Congress provided that [the DMCA's] limitations of liability apply if the provider is found to be liable under existing principles of law." <em class="original_content">Ellison,</em> <em class="original_content">357 F.3d at 1077</em> (emphasis and internal quotation omitted). As a result, "[c]laims against service providers for direct, contributory, or vicarious copyright infringement, therefore, are generally evaluated just as they would be in the non-online world." <em class="original_content">Id.</em>; <em class="original_content">see also</em> <em class="original_content">17 U.S.C. § 512(l)</em> ("The failure of a service provider's conduct to qualify for limitation of liability under this section shall not bear adversely upon the consideration of a defense by the service provider that the service provider's conduct is not infringing under this title or any other defense."). Therefore, we must consider Google's potential liability under the Copyright Act without reference to title II of the DMCA.</p><p class="original_content"><a href="#r%5B5%5D" name="%5B5%5D" class="original_content">[5]</a> <em class="original_content">17 U.S.C. § 106</em> states, in pertinent part:</p><blockquote class="original_content">
<p class="original_content">Subject to <em class="original_content">sections 107</em> through <em class="original_content">122</em>, the owner of copyright under this title has the exclusive rights to do and to authorize any of the following:</p>
<p class="original_content">(1) to reproduce the copyrighted work in copies or phonorecords;</p>
<p class="original_content">....</p>
<p class="original_content">(3) to distribute copies or phonorecords of the copyrighted work to the public by sale or other transfer of ownership, or by rental, lease, or lending;</p>
<p class="original_content">....</p>
<p class="original_content">(5) in the case of literary, musical, dramatic, and choreographic works, pantomimes, and pictorial, graphic, or sculptural works, including the individual images of a motion picture or other audiovisual work, to display the copyrighted work publicly....</p>
</blockquote><p class="original_content"><a href="#r%5B6%5D" name="%5B6%5D" class="original_content">[6]</a> Because Google initiates and controls the storage and communication of these thumbnail images, we do not address whether an entity that merely passively owns and manages an Internet bulletin board or similar system violates a copyright owner's display and distribution rights when the users of the bulletin board or similar system post infringing works. <em class="original_content">Cf. CoStar Group, Inc. v. LoopNet, Inc.,</em> <em class="original_content">373 F.3d 544 (4th Cir.2004)</em>.</p><p class="original_content"><a href="#r%5B7%5D" name="%5B7%5D" class="original_content">[7]</a> Perfect 10 also argues that Google violates Perfect 10's right to display full-size images because Google's in-line linking meets the Copyright Act's definition of "to perform or display a work `publicly.'" <em class="original_content">17 U.S.C. § 101</em>. This phrase means "to transmit or otherwise communicate a performance or display of the work to ... the public, by means of any device or process, whether the members of the public capable of receiving the performance or display receive it in the same place or in separate places and at the same time or at different times." <em class="original_content">Id.</em> Perfect 10 is mistaken. Google's activities do not meet this definition because Google transmits or communicates only an address which directs a user's browser to the location where a copy of the full-size image is displayed. Google does not communicate a display of the work itself.</p><p class="original_content"><a href="#r%5B8%5D" name="%5B8%5D" class="original_content">[8]</a> We reject at the outset Perfect 10's argument that providing access to infringing websites cannot be deemed transformative and is inherently not fair use. Perfect 10 relies on <em class="original_content">Video Pipeline, Inc. v. Buena Vista Home Entm't, Inc.,</em> <em class="original_content">342 F.3d 191 (3d Cir.2003)</em>, and <em class="original_content">Atari Games Corp. v. Nintendo of Am. Inc.,</em> <em class="original_content">975 F.2d 832, 843 (Fed.Cir.1992)</em>. But these cases, in essence, simply apply the general rule that a party claiming fair use must act in a manner generally compatible with principles of good faith and fair dealing. <em class="original_content">See Harper &amp; Row,</em> <em class="original_content">471 U.S. at 562-63</em>, <em class="original_content">105 S.Ct. 2218</em>. For this reason, a company whose business is based on providing scenes from copyrighted movies without authorization could not claim that it provided the same public benefit as the search engine in <em class="original_content">Kelly. See Video Pipeline,</em> <em class="original_content">342 F.3d at 198-200</em>. Similarly, a company whose overriding desire to replicate a competitor's computer game led it to obtain a copy of the competitor's source code from the Copyright Office under false pretenses could not claim fair use with respect to its purloined copy. <em class="original_content">Atari Games,</em> <em class="original_content">975 F.2d at 843</em>.</p><p class="original_content">Unlike the alleged infringers in <em class="original_content">Video Pipeline</em> and <em class="original_content">Atari Games,</em> who intentionally misappropriated the copyright owners' works for the purpose of commercial exploitation, Google is operating a comprehensive search engine that only incidentally indexes infringing websites. This incidental impact does not amount to an abuse of the good faith and fair dealing underpinnings of the fair use doctrine. Accordingly, we conclude that Google's inclusion of thumbnail images derived from infringing websites in its Internet-wide search engine activities does not preclude Google from raising a fair use defense.</p><p class="original_content"><a href="#r%5B9%5D" name="%5B9%5D" class="original_content">[9]</a> Google contends that Perfect 10's photographic images are less creative and less deserving of protection than the images of the American West in <em class="original_content">Kelly</em> because Perfect 10 boasts of its un-retouched photos showing the natural beauty of its models. Having reviewed the record, we conclude that the district court's finding that Perfect 10's photographs "consistently reflect professional, skillful, and sometimes tasteful artistry" is not clearly erroneous. <em class="original_content">Perfect 10,</em> <em class="original_content">416 F.Supp.2d at 849 n. 15</em>. We agree with the district court that there is no basis for concluding that photos of the American West are more deserving of protection than photos of nude models. <em class="original_content">See id.</em></p><p class="original_content"><a href="#r%5B10%5D" name="%5B10%5D" class="original_content">[10]</a> Because the district court concluded that Perfect 10 was likely to prevail on its direct infringement claim with respect to Google's use of thumbnails, but not with respect to its in-line linking to full-size images, the district court considered Google's potential secondary liability only on the second issue.</p><p class="original_content"><a href="#r%5B11%5D" name="%5B11%5D" class="original_content">[11]</a> Google's activities do not meet the "inducement" test explained in <em class="original_content">Grokster</em> because Google has not promoted the use of its search engine specifically to infringe copyrights. <em class="original_content">See Grokster, 545 U.S. at 935-37, 125 S.Ct. 2764</em>. However, the Supreme Court in <em class="original_content">Grokster</em> did not suggest that a court must find inducement in order to impose contributory liability under common law principles.</p><p class="original_content"><a href="#r%5B12%5D" name="%5B12%5D" class="original_content">[12]</a>&nbsp;"Cyberspace is a popular term for the world of electronic communications over computer networks." <em class="original_content">Religious Tech. Ctr. v. Netcom On-Line Commc'n Servs., Inc.,</em> <em class="original_content">907 F.Supp. 1361, 1365 n. 1 (N.D.Cal.1995)</em>.</p><p class="original_content"><a href="#r%5B13%5D" name="%5B13%5D" class="original_content">[13]</a> Perfect 10 claims that Google materially contributed to infringement by linking to websites containing unauthorized passwords, which enabled Google users to access Perfect 10's website and make infringing copies of images. However, Perfect 10 points to no evidence that users logging onto the Perfect 10 site with unauthorized passwords infringed Perfect 10's exclusive rights under <em class="original_content">section 106</em>. In the absence of evidence that Google's actions led to any direct infringement, this argument does not assist Perfect 10 in establishing that it would prevail on the merits of its contributory liability claim. <em class="original_content">See Napster,</em> <em class="original_content">239 F.3d at 1013 n. 2</em> ("Secondary liability for copyright infringement does not exist in the absence of direct infringement by a third party.").</p><p class="original_content"><a href="#r%5B14%5D" name="%5B14%5D" class="original_content">[14]</a> Napster's system included "Napster's MusicShare software, available free of charge from Napster's Internet site, and Napster's network servers and server-side software." <em class="original_content">Napster,</em> <em class="original_content">239 F.3d at 1011</em>. By downloading Napster's MusicShare software to the user's personal computer, and registering with the Napster system, a user could both upload and download music files. <em class="original_content">Id. at 1011-13</em>. If the Napster user uploaded a list of music files stored on the user's personal computer to the Napster system, such music files would be automatically available to other Napster users whenever the user was logged on to the Napster system. <em class="original_content">Id.</em> <em class="original_content">at 1012</em>. In addition, the Napster user could download music files directly from other users' personal computers. <em class="original_content">Id.</em> We explained the infringing conduct as "Napster users who upload file names to the [Napster] search index for others to copy violate plaintiffs' distribution rights. Napster users who download files [through the Napster system] containing copyrighted music violate plaintiffs' reproduction rights." <em class="original_content">Id.</em> <em class="original_content">at 1014</em>.</p><p class="original_content"><a href="#r%5B51%5D" name="%5B15%5D" class="original_content">[15]</a> Having so concluded, we need not reach Perfect 10's argument that Google received a direct financial benefit.</p><p class="original_content"><a href="#r%5B16%5D" name="%5B16%5D" class="original_content">[16]</a> Amazon.com states that it ended its relationship with Google on April 30, 2006. Perfect 10's action for preliminary injunction against Amazon.com is not moot, however, because Amazon.com has not established "that the allegedly wrongful behavior cannot reasonably be expected to recur." <em class="original_content">F.T.C. v. Affordable Media, LLC, 179 F.3d 1228, 1238 (9th Cir.1999)</em> (internal quotation omitted).</p><p class="original_content"><a href="#r%5B17%5D" name="%5B17%5D" class="original_content">[17]</a> Because we vacate the injunction, Google's motion for stay of the injunction is moot.</p>
</div>

    <div class="page-break"></div>
</li>

      </ul>
    </section>
</li>

		  <li class="playlist listitem level0 listitem68536" id="playlist_item_68536" data-itemid="68536">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68536 -->
  <!-- item.description <p><br data-mce-bogus="1"></p> -->
  <!-- BOOP -->
  <!-- actual_object_type Playlist -->
  <!-- actual_object.id 20869 -->
  <!-- actual_object.description <p><br data-mce-bogus="1"></p> -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h1 class="scale1-5 new-h1 scale1-4">
    <span class="number"><a name="playlist_item_68536">3</a></span>
    <span class="hcontent">Week 3 (April 15): Digital warfare</span>
  </h1>
  <div class="item_description scale0-8"><br></div>
  <div class="clear"></div>
    <section class="playlists">
      <ul>
          <li class="playlist listitem level1 listitem68347" id="playlist_item_68347" data-itemid="68347">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68347 -->
  <!-- item.description Read slides 5-13, 24-27, 35-39, 48-49, 57-59, 66-67. -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10100 -->
  <!-- actual_object.description Read slides 5-13, 24-27, 35-39, 48-49, 57-59, 66-67. -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h2 class="scale1-5 new-h2 scale1-3">
    <span class="number"><a name="playlist_item_68347">3.1</a></span>
    <span class="hcontent">YouTube Content ID Handbook</span>
  </h2>
    <a href="http://www.slideshare.net/carlospacheco74/you-tube-content-id-handbook" target="_blank">http://www.slideshare.net/carlospacheco74/you-tube-content-id-handbook</a>
  <div class="item_description scale0-8">
<p>Read slides 5-13, 24-27, 35-39, 48-49, 57-59, 66-67.</p>
</div>
  <div class="clear"></div>
</li>

          <li class="playlist listitem level1 listitem68350" id="playlist_item_68350" data-itemid="68350">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68350 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type TextBlock -->
  <!-- actual_object.id 25023 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h2 class="scale1-5 new-h2 scale1-3">
    <span class="number"><a name="playlist_item_68350">3.2</a></span>
    <span class="hcontent">*** Materials below are optional ***</span>
  </h2>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
    <div class="article">

</div>

    <div class="page-break"></div>
</li>

          <li class="playlist listitem level1 listitem68537" id="playlist_item_68537" data-itemid="68537">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68537 -->
  <!-- item.description <p><br data-mce-bogus="1"></p> -->
  <!-- BOOP -->
  <!-- actual_object_type Playlist -->
  <!-- actual_object.id 20870 -->
  <!-- actual_object.description <p><br data-mce-bogus="1"></p> -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h2 class="scale1-5 new-h2 scale1-3">
    <span class="number"><a name="playlist_item_68537">3.3</a></span>
    <span class="hcontent">Week 4 (April 22): Google Books settlement</span>
  </h2>
  <div class="item_description scale0-8"><br></div>
  <div class="clear"></div>
    <section class="playlists">
      <ul>
          <li class="playlist listitem level2 listitem68365" id="playlist_item_68365" data-itemid="68365">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68365 -->
  <!-- item.description <p>Read Rule 23(a), (b), (c ) and (e).</p> -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10117 -->
  <!-- actual_object.description <p>Read Rule 23(a), (b), (c ) and (e).</p> -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h3 class="scale1-5 new-h3 scale1-2">
    <span class="number"><a name="playlist_item_68365">3.3.1</a></span>
    <span class="hcontent">Rule 23, Federal Rules of Civil Procedure: Class Actions</span>
  </h3>
    <a href="https://www.law.cornell.edu/rules/frcp/rule_23" target="_blank">https://www.law.cornell.edu/rules/frcp/rule_23</a>
  <div class="item_description scale0-8">
<p>Read Rule 23(a), (b), (c ) and (e).</p>
</div>
  <div class="clear"></div>
</li>

          <li class="playlist listitem level2 listitem68367" id="playlist_item_68367" data-itemid="68367">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68367 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10118 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h3 class="scale1-5 new-h3 scale1-2">
    <span class="number"><a name="playlist_item_68367">3.3.2</a></span>
    <span class="hcontent">New York Times, A Google Search of a Distinctly Retro Kind</span>
  </h3>
    <a href="http://www.nytimes.com/2009/03/04/books/04google.html?pagewanted=all" target="_blank">http://www.nytimes.com/2009/03/04/books/04google.html?pagewanted=all</a>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
</li>

      </ul>
    </section>
</li>

          <li class="playlist listitem level1 listitem68538" id="playlist_item_68538" data-itemid="68538">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68538 -->
  <!-- item.description <p><br data-mce-bogus="1"></p> -->
  <!-- BOOP -->
  <!-- actual_object_type Playlist -->
  <!-- actual_object.id 20871 -->
  <!-- actual_object.description <p><br data-mce-bogus="1"></p> -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h2 class="scale1-5 new-h2 scale1-3">
    <span class="number"><a name="playlist_item_68538">3.4</a></span>
    <span class="hcontent">Week 5 (April 29): Opposition to Google Books settlement</span>
  </h2>
  <div class="item_description scale0-8"><br></div>
  <div class="clear"></div>
    <section class="playlists">
      <ul>
          <li class="playlist listitem level2 listitem68371" id="playlist_item_68371" data-itemid="68371">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68371 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10122 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h3 class="scale1-5 new-h3 scale1-2">
    <span class="number"><a name="playlist_item_68371">3.4.1</a></span>
    <span class="hcontent">Rep. Zoe Lofgren, House Judiciary Committee Hearing on Competition and Commerce in Digital Books, 9/10/09</span>
  </h3>
    <a href="https://www.youtube.com/watch?v=jX1KRkQl3lo" target="_blank">https://www.youtube.com/watch?v=jX1KRkQl3lo</a>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
</li>

          <li class="playlist listitem level2 listitem68374" id="playlist_item_68374" data-itemid="68374">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68374 -->
  <!-- item.description <p>Watch to 6:40 (end of Rep. Gonzalez).</p> -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10125 -->
  <!-- actual_object.description <p>Watch to 6:40 (end of Rep. Gonzalez).</p> -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h3 class="scale1-5 new-h3 scale1-2">
    <span class="number"><a name="playlist_item_68374">3.4.2</a></span>
    <span class="hcontent">Rep. Charles Gonzalez, House Judiciary Committee Hearing on Competition and Commerce in Digital Books, 9/10/09</span>
  </h3>
    <a href="https://www.youtube.com/watch?v=5ri9aj54R50" target="_blank">https://www.youtube.com/watch?v=5ri9aj54R50</a>
  <div class="item_description scale0-8">
<p>Watch to 6:40 (end of Rep. Gonzalez).</p>
</div>
  <div class="clear"></div>
</li>

          <li class="playlist listitem level2 listitem68539" id="playlist_item_68539" data-itemid="68539">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68539 -->
  <!-- item.description <p><br data-mce-bogus="1"></p> -->
  <!-- BOOP -->
  <!-- actual_object_type Playlist -->
  <!-- actual_object.id 20872 -->
  <!-- actual_object.description <p><br data-mce-bogus="1"></p> -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h3 class="scale1-5 new-h3 scale1-2">
    <span class="number"><a name="playlist_item_68539">3.4.3</a></span>
    <span class="hcontent">Week 6 (May 6): Creators in the digital age</span>
  </h3>
  <div class="item_description scale0-8"><br></div>
  <div class="clear"></div>
    <section class="playlists">
      <ul>
          <li class="playlist listitem level3 listitem68541" id="playlist_item_68541" data-itemid="68541">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68541 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Playlist -->
  <!-- actual_object.id 20874 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h4 class="scale1-5 new-h4 scale1-1">
    <span class="number"><a name="playlist_item_68541">3.4.3.1</a></span>
    <span class="hcontent">Week 8 (May 21): Competition in digital marketplaces</span>
  </h4>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
    <section class="playlists">
      <ul>
          <li class="playlist listitem level4 listitem68449" id="playlist_item_68449" data-itemid="68449">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68449 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10189 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h5 class="scale1-5 new-h5">
    <span class="number"><a name="playlist_item_68449">3.4.3.1.1</a></span>
    <span class="hcontent">(L5) Melville House, Wylie: Amazon is an “ISIS-like distribution channel.”</span>
  </h5>
    <a href="http://www.mhpbooks.com/wylie-amazon-is-an-isis-like-distribution-channel/" target="_blank">http://www.mhpbooks.com/wylie-amazon-is-an-isis-like-distribution-channel/</a>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
</li>

          <li class="playlist listitem level4 listitem68464" id="playlist_item_68464" data-itemid="68464">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68464 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10201 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h5 class="scale1-5 new-h5">
    <span class="number"><a name="playlist_item_68464">3.4.3.1.2</a></span>
    <span class="hcontent">(L5) Google v Hood</span>
  </h5>
    <a href="https://www.eff.org/cases/google-v-hood" target="_blank">https://www.eff.org/cases/google-v-hood</a>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
</li>

      </ul>
    </section>
</li>

      </ul>
    </section>
</li>

          <li class="playlist listitem level2 listitem68385" id="playlist_item_68385" data-itemid="68385">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68385 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Media -->
  <!-- actual_object.id 1877 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h3 class="scale1-5 new-h3 scale1-2">
    <span class="number"><a name="playlist_item_68385">3.4.4</a></span>
    <span class="hcontent">Authors Guild v. Google opinion denying motion for final approval of amended settlement agreement, 3-22-11</span>
  </h3>
    <a href="http://sskardal03.murk.law.harvard.edu:8000/medias/1877" target="_blank">http://sskardal03.murk.law.harvard.edu:8000/medias/1877</a>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
</li>

      </ul>
    </section>
</li>

          <li class="playlist listitem level1 listitem68545" id="playlist_item_68545" data-itemid="68545">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68545 -->
  <!-- item.description <p><br data-mce-bogus="1"></p> -->
  <!-- BOOP -->
  <!-- actual_object_type Playlist -->
  <!-- actual_object.id 20872 -->
  <!-- actual_object.description <p><br data-mce-bogus="1"></p> -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h2 class="scale1-5 new-h2 scale1-3">
    <span class="number"><a name="playlist_item_68545">3.5</a></span>
    <span class="hcontent">Week 6 (May 6): Creators in the digital age</span>
  </h2>
  <div class="item_description scale0-8"><br></div>
  <div class="clear"></div>
    <section class="playlists">
      <ul>
          <li class="playlist listitem level2 listitem68541" id="playlist_item_68541" data-itemid="68541">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68541 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Playlist -->
  <!-- actual_object.id 20874 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h3 class="scale1-5 new-h3 scale1-2">
    <span class="number"><a name="playlist_item_68541">3.5.1</a></span>
    <span class="hcontent">Week 8 (May 21): Competition in digital marketplaces</span>
  </h3>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
    <section class="playlists">
      <ul>
          <li class="playlist listitem level3 listitem68449" id="playlist_item_68449" data-itemid="68449">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68449 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10189 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h4 class="scale1-5 new-h4 scale1-1">
    <span class="number"><a name="playlist_item_68449">3.5.1.1</a></span>
    <span class="hcontent">(L5) Melville House, Wylie: Amazon is an “ISIS-like distribution channel.”</span>
  </h4>
    <a href="http://www.mhpbooks.com/wylie-amazon-is-an-isis-like-distribution-channel/" target="_blank">http://www.mhpbooks.com/wylie-amazon-is-an-isis-like-distribution-channel/</a>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
</li>

          <li class="playlist listitem level3 listitem68464" id="playlist_item_68464" data-itemid="68464">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68464 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10201 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h4 class="scale1-5 new-h4 scale1-1">
    <span class="number"><a name="playlist_item_68464">3.5.1.2</a></span>
    <span class="hcontent">(L5) Google v Hood</span>
  </h4>
    <a href="https://www.eff.org/cases/google-v-hood" target="_blank">https://www.eff.org/cases/google-v-hood</a>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
</li>

      </ul>
    </section>
</li>

      </ul>
    </section>
</li>

          <li class="playlist listitem level1 listitem68351" id="playlist_item_68351" data-itemid="68351">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68351 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10103 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h2 class="scale1-5 new-h2 scale1-3">
    <span class="number"><a name="playlist_item_68351">3.6</a></span>
    <span class="hcontent">TechDirt, How Google's ContentID System Fails At Fair Use &amp; The Public Domain</span>
  </h2>
    <a href="https://www.techdirt.com/articles/20120808/12301619967/how-googles-contentid-system-fails-fair-use-public-domain.shtml" target="_blank">https://www.techdirt.com/articles/20120808/12301619967/how-googles-contentid-system-fails-fair-use-public-domain.shtml</a>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
</li>

      </ul>
    </section>
</li>

		  <li class="playlist listitem level0 listitem68544" id="playlist_item_68544" data-itemid="68544">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68544 -->
  <!-- item.description <p>Skim website.</p> -->
  <!-- BOOP -->
  <!-- actual_object_type Default -->
  <!-- actual_object.id 10148 -->
  <!-- actual_object.description <p>Skim website.</p> -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h1 class="scale1-5 new-h1 scale1-4">
    <span class="number"><a name="playlist_item_68544">4</a></span>
    <span class="hcontent">Creative Commmons</span>
  </h1>
    <a href="http://creativecommons.org/" target="_blank">http://creativecommons.org/</a>
  <div class="item_description scale0-8">
<p>Skim website.</p>
</div>
  <div class="clear"></div>
</li>

		  <li class="playlist listitem level0 listitem68548" id="playlist_item_68548" data-itemid="68548">
  <!-- item.class PlaylistItem -->
  <!-- item.id 68548 -->
  <!-- item.description  -->
  <!-- BOOP -->
  <!-- actual_object_type TextBlock -->
  <!-- actual_object.id 25020 -->
  <!-- actual_object.description  -->
  
  <!-- this is the H tag the javascript TOC preview uses -->
  <h1 class="scale1-5 new-h1 scale1-4">
    <span class="number"><a name="playlist_item_68548">5</a></span>
    <span class="hcontent">17 U.S.C. § 302.—Duration of copyright: Works created on or after January 1, 1978</span>
  </h1>
  <div class="item_description scale0-8"></div>
  <div class="clear"></div>
    <div class="article">
<p style="padding-left: 0px; text-indent: 1em;" class="original_content">(a) <strong class="original_content">In General.</strong>—Copyright in a work created on or after January 1, 1978, subsists from its creation and, except as provided by the following subsections, endures for a term consisting of the life of the author and 70 years after the author&apos;s death.</p>
<p style="padding-left: 0px; text-indent: 1em;" class="original_content">(b) <strong class="original_content">Joint Works.</strong>—In the case of a joint work prepared by two or more authors who did not work for hire, the copyright endures for a term consisting of the life of the last surviving author and 70 years after such last surviving author&apos;s death.</p>
<p style="padding-left: 0px; text-indent: 1em;" class="original_content">(c) <strong class="original_content">Anonymous Works, Pseudonymous Works, and Works Made for Hire.</strong>—In the case of an anonymous work, a pseudonymous work, or a work made for hire, the copyright endures for a term of 95 years from the year of its first publication, or a term of 120 years from the year of its creation, whichever expires first. If, before the end of such term, the identity of one or more of the authors of an anonymous or pseudonymous work is revealed in the records of a registration made for that work under subsections (a) or (d) of section 408, or in the records provided by this subsection, the copyright in the work endures for the term specified by subsection (a) or (b), based on the life of the author or authors whose identity has been revealed. Any person having an interest in the copyright in an anonymous or pseudonymous work may at any time record, in records to be maintained by the Copyright Office for that purpose, a statement identifying one or more authors of the work; the statement shall also identify the person filing it, the nature of that person&apos;s interest, the source of the information recorded, and the particular work affected, and shall comply in form and content with requirements that the Register of Copyrights shall prescribe by regulation.</p>
<p style="padding-left: 0px; text-indent: 1em;" class="original_content">(d) <strong class="original_content">Records Relating to Death of Authors.</strong>—Any person having an interest in a copyright may at any time record in the Copyright Office a statement of the date of death of the author of the copyrighted work, or a statement that the author is still living on a particular date. The statement shall identify the person filing it, the nature of that person&apos;s interest, and the source of the information recorded, and shall comply in form and content with requirements that the Register of Copyrights shall prescribe by regulation. The Register shall maintain current records of information relating to the death of authors of copyrighted works, based on such recorded statements and, to the extent the Register considers practicable, on data contained in any of the records of the Copyright Office or in other reference sources.</p>
<p style="padding-left: 0px; text-indent: 1em;" class="original_content">(e) <strong class="original_content">Presumption as to Author&apos;s Death.</strong>—After a period of 95 years from the year of first publication of a work, or a period of 120 years from the year of its creation, whichever expires first, any person who obtains from the Copyright Office a certified report that the records provided by subsection (d) disclose nothing to indicate that the author of the work is living, or died less than 70 years before, is entitled to the benefits of a presumption that the author has been dead for at least 70 years. Reliance in good faith upon this presumption shall be a complete defense to any action for infringement under this title.</p>
</div>

    <div class="page-break"></div>
</li>

	</ul>
</section>

</div>

      </section>
    </div>

  
    <script src="/assets/jquery.js?body=1"></script>
<script src="/assets/jquery-ui/core.js?body=1"></script>
<script src="/assets/jquery-ui/widget.js?body=1"></script>
<script src="/assets/jquery-ui/accordion.js?body=1"></script>
<script src="/assets/jquery-ui/position.js?body=1"></script>
<script src="/assets/jquery-ui/menu.js?body=1"></script>
<script src="/assets/jquery-ui/autocomplete.js?body=1"></script>
<script src="/assets/jquery-ui/button.js?body=1"></script>
<script src="/assets/jquery-ui/datepicker.js?body=1"></script>
<script src="/assets/jquery-ui/mouse.js?body=1"></script>
<script src="/assets/jquery-ui/draggable.js?body=1"></script>
<script src="/assets/jquery-ui/resizable.js?body=1"></script>
<script src="/assets/jquery-ui/dialog.js?body=1"></script>
<script src="/assets/jquery-ui/droppable.js?body=1"></script>
<script src="/assets/jquery-ui/effect.js?body=1"></script>
<script src="/assets/jquery-ui/effect-blind.js?body=1"></script>
<script src="/assets/jquery-ui/effect-bounce.js?body=1"></script>
<script src="/assets/jquery-ui/effect-clip.js?body=1"></script>
<script src="/assets/jquery-ui/effect-drop.js?body=1"></script>
<script src="/assets/jquery-ui/effect-explode.js?body=1"></script>
<script src="/assets/jquery-ui/effect-fade.js?body=1"></script>
<script src="/assets/jquery-ui/effect-fold.js?body=1"></script>
<script src="/assets/jquery-ui/effect-highlight.js?body=1"></script>
<script src="/assets/jquery-ui/effect-size.js?body=1"></script>
<script src="/assets/jquery-ui/effect-scale.js?body=1"></script>
<script src="/assets/jquery-ui/effect-puff.js?body=1"></script>
<script src="/assets/jquery-ui/effect-pulsate.js?body=1"></script>
<script src="/assets/jquery-ui/effect-shake.js?body=1"></script>
<script src="/assets/jquery-ui/effect-slide.js?body=1"></script>
<script src="/assets/jquery-ui/effect-transfer.js?body=1"></script>
<script src="/assets/jquery-ui/progressbar.js?body=1"></script>
<script src="/assets/jquery-ui/selectable.js?body=1"></script>
<script src="/assets/jquery-ui/selectmenu.js?body=1"></script>
<script src="/assets/jquery-ui/slider.js?body=1"></script>
<script src="/assets/jquery-ui/sortable.js?body=1"></script>
<script src="/assets/jquery-ui/spinner.js?body=1"></script>
<script src="/assets/jquery-ui/tabs.js?body=1"></script>
<script src="/assets/jquery-ui/tooltip.js?body=1"></script>
<script src="/assets/jquery-ui.js?body=1"></script>
<script src="/assets/fonts.js?body=1"></script>
<script src="/assets/jquery.selectbox-0.6.1.pack.js?body=1"></script>
<script src="/assets/jquery.rule.js?body=1"></script>
<script src="/assets/jquery.xcolor.js?body=1"></script>
<script src="/assets/jquery.cookie.js?body=1"></script>
<script src="/assets/annotator.js?body=1"></script>
<script src="/assets/annotator.sh2o.js?body=1"></script>
<script src="/assets/annotator.store.js?body=1"></script>
<script src="/assets/export.js?body=1"></script>
<script src="/assets/application-print.js?body=1"></script>
    <script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-223559-16']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


  

</div><!-- end Section1 -->
</body>
</html>



------=_NextPart_ZROIIZO.ZCZYUACXV.ZARTUI--